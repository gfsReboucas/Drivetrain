!file.version=3.3! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20200100
version.desc   = ''
version.build  = 82

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
glob.rhs.tuning.type                                                = 0                       ! Formalism Tuning Type
glob.rhs.tuning.flags (   1                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   2                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   3                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   4                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   5                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   6                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   7                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   8                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   9                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  10                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  11                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  12                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  13                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  14                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  15                                       ) = 1                       ! Formalism Tuning Flags
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
model.txt                                                           = 'Generator#Generator. [br]Consisting of a rigid rotor and a rigid stator supported by four bushing elements.[br]De-/Activation of an eccentricity for the rotor.[br]Control element for generator torque is received from the interface.[br]' ! Comment
glob.ifctn.bounds                                                   = 1                       ! Cubic spline boundary conditions
prop3d.bg.base.color.r                                              = 9.90000000000000000E+01 ! Background color (red component)
prop3d.bg.base.color.g                                              = 1.84000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.55000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = -4.95766782760620117E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -1.22040195465087891E+01 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 3.53861546516418457E+00 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 5.98538339138031006E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = -1.13521769642829895E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -1.60114407539367676E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = 7.76677608489990234E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 3.14159274101257324E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 1.00000001490000004E-01 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 1.00000000000000000E+03 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved
view.stereo.active (                $V_WorkingView                ) = 0                       ! Stereo enabled
view.stereo.balance (               $V_WorkingView                ) = 1.00000000000000000E+00 ! Stereo balance
view.stereo.offset (                $V_WorkingView                ) = 1.00000000000000000E+00 ! Stereo offset

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

view.type (                         $V_perspective                ) = 0                       ! Projection type
view.pos (                1 ,       $V_perspective                ) = -4.95766782760620117E+00 ! Position
view.pos (                2 ,       $V_perspective                ) = -1.22040195465087891E+01 ! Position
view.pos (                3 ,       $V_perspective                ) = 3.53861546516418457E+00 ! Position
view.orient (             1 ,       $V_perspective                ) = 5.98538339138031006E-01 ! Orientation
view.orient (             2 ,       $V_perspective                ) = -1.13521769642829895E-01 ! Orientation
view.orient (             3 ,       $V_perspective                ) = -1.60114407539367676E-01 ! Orientation
view.orient (             4 ,       $V_perspective                ) = 7.76677608489990234E-01 ! Orientation
view.angle (                        $V_perspective                ) = 3.14159274101257324E-01 ! Lens angle
view.fclip.auto (                   $V_perspective                ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_perspective                ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_perspective                ) = 1.00000001490000004E-01 ! Front clipping plane value
view.bclip.value (                  $V_perspective                ) = 1.00000000000000000E+03 ! Back clipping plane value
view.rotcenter.type (               $V_perspective                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_perspective                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_perspective                ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 0.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 2 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force outpur values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.acc (                 $SLV_SolverSettings           ) = 1                       ! Body acceleration to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.file.basename (          $SLV_SolverSettings           ) = ''                      ! OUTPUT_FILEBASENAME
slv.output.eva.enabled (            $SLV_SolverSettings           ) = 1                       ! eva file generation 0 = disable; 1 = enable
slv.output.fileinlining.enabled (   $SLV_SolverSettings           ) = 0                       ! file inlining 0 = disable; 1 = enable
slv.compat.solver (                 $SLV_SolverSettings           ) = 1                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.init.tol (                      $SLV_SolverSettings           ) = 1.00000000000000002E-08 ! Tolerance used for Assemble System and Initial Conditions
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! SubVars
!**********************************************************************
subvargroup.begin (                 $G_PA                         )                           ! $G_PA
   subvargroup.begin (              $G_BR                         )                           ! $G_PA.$G_BR
      subvargroup.begin (           $G_GRO                        )                           ! $G_PA.$G_BR.$G_GRO
         subvar.str (               $_1_X                         ) = '-1.05 m'               ! $G_PA.$G_BR.$G_GRO.$_1_X, Definition
         subvar.status (            $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_1_X                         ) = 'x-pos. Generator ROtor BeaRing 1 (wrt. Generator ROtor reference frame)' ! Comment

         subvar.str (               $_2_X                         ) = '1.05 m'                ! $G_PA.$G_BR.$G_GRO.$_2_X, Definition
         subvar.status (            $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_2_X                         ) = 'x-pos. Generator ROtor BeaRing 1 (wrt. Generator ROtor reference frame)' ! Comment

      subvargroup.end (             $G_GRO                        )                           ! $G_PA.$G_BR.$G_GRO
      subvargroup.txt (             $G_GRO                        ) = 'Generator ROtor'       ! Comment
   subvargroup.end (                $G_BR                         )                           ! $G_PA.$G_BR
   subvargroup.txt (                $G_BR                         ) = 'BeaRings'              ! Comment
   subvargroup.begin (              $G_BU                         )                           ! $G_PA.$G_BU
      subvargroup.begin (           $G_STR                        )                           ! $G_PA.$G_BU.$G_STR
         subvargroup.begin (        $G_01                         )                           ! $G_PA.$G_BU.$G_STR.$G_01
            subvar.str (            $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_X' ! $G_PA.$G_BU.$G_STR.$G_01.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Y' ! $G_PA.$G_BU.$G_STR.$G_01.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Z' ! $G_PA.$G_BU.$G_STR.$G_01.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_PA.$G_BU.$G_STR.$G_01
         subvargroup.txt (          $G_01                         ) = 'STatoR BUshing 1'      ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_PA.$G_BU.$G_STR.$G_02
            subvar.str (            $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_X' ! $G_PA.$G_BU.$G_STR.$G_02.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Y' ! $G_PA.$G_BU.$G_STR.$G_02.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Z' ! $G_PA.$G_BU.$G_STR.$G_02.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_PA.$G_BU.$G_STR.$G_02
         subvargroup.txt (          $G_02                         ) = 'STatoR BUshing 2'      ! Comment
         subvargroup.begin (        $G_03                         )                           ! $G_PA.$G_BU.$G_STR.$G_03
            subvar.str (            $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_X' ! $G_PA.$G_BU.$G_STR.$G_03.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Y' ! $G_PA.$G_BU.$G_STR.$G_03.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Z' ! $G_PA.$G_BU.$G_STR.$G_03.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

         subvargroup.end (          $G_03                         )                           ! $G_PA.$G_BU.$G_STR.$G_03
         subvargroup.txt (          $G_03                         ) = 'STatoR BUshing 3'      ! Comment
         subvargroup.begin (        $G_04                         )                           ! $G_PA.$G_BU.$G_STR.$G_04
            subvar.str (            $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_X' ! $G_PA.$G_BU.$G_STR.$G_04.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Y' ! $G_PA.$G_BU.$G_STR.$G_04.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Z' ! $G_PA.$G_BU.$G_STR.$G_04.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

         subvargroup.end (          $G_04                         )                           ! $G_PA.$G_BU.$G_STR.$G_04
         subvargroup.txt (          $G_04                         ) = 'STatoR BUshing 4'      ! Comment
      subvargroup.end (             $G_STR                        )                           ! $G_PA.$G_BU.$G_STR
      subvargroup.txt (             $G_STR                        ) = 'STatoR'                ! Comment
   subvargroup.end (                $G_BU                         )                           ! $G_PA.$G_BU
   subvargroup.txt (                $G_BU                         ) = 'BUshings'              ! Comment
   subvargroup.begin (              $G_SCN                        )                           ! $G_PA.$G_SCN
      subvar.str (                  $_CPL_2_GEN_X                 ) = '$G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN.$_CPL_2_GEN_X' ! $G_PA.$G_SCN.$_CPL_2_GEN_X, Definition
      subvar.intent (               $_CPL_2_GEN_X                 ) = 2                       ! Intent
      subvar.status (               $_CPL_2_GEN_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CPL_2_GEN_X                 ) = 'x-pos. CouPLing connection to GENerator (wrt. CouPLing reference frame)' ! Comment

   subvargroup.end (                $G_SCN                        )                           ! $G_PA.$G_SCN
   subvargroup.txt (                $G_SCN                        ) = 'Shaft CoNnections'     ! Comment
   subvargroup.begin (              $G_TRQ                        )                           ! $G_PA.$G_TRQ
      subvar.str (                  $_X                           ) = '0 m'                   ! $G_PA.$G_TRQ.$_X, Definition
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of to marker for GENerator ToRQue (wrt. Generator ROtor reference frame)' ! Comment

   subvargroup.end (                $G_TRQ                        )                           ! $G_PA.$G_TRQ
   subvargroup.txt (                $G_TRQ                        ) = 'ToRQue'                ! Comment
subvargroup.end (                   $G_PA                         )                           ! $G_PA
subvargroup.txt (                   $G_PA                         ) = 'PArameter'             ! Comment

subvargroup.begin (                 $G_HP                         )                           ! $G_HP
   subvargroup.begin (              $G_CPL                        )                           ! $G_HP.$G_CPL
      subvar.str (                  $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X' ! $G_HP.$G_CPL.$_X, Definition
      subvar.intent (               $_X                           ) = 2                       ! Intent
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of CouPLing reference marker (wrt. to DRiveTrain reference frame)' ! Comment

      subvar.str (                  $_R                           ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R' ! $G_HP.$G_CPL.$_R, Definition
      subvar.intent (               $_R                           ) = 2                       ! Intent
      subvar.status (               $_R                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_R                           ) = 'radial pos. of CouPLing reference marker (wrt. DriveTRain reference frame)' ! Comment

      subvar.str (                  $_ang                         ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang' ! $G_HP.$G_CPL.$_ang, Definition
      subvar.intent (               $_ang                         ) = 2                       ! Intent
      subvar.status (               $_ang                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_ang                         ) = 'offset angle (around alpha) of CouPLing reference marker (wrt. DRiveTrain reference frame)' ! Comment

   subvargroup.end (                $G_CPL                        )                           ! $G_HP.$G_CPL
   subvargroup.txt (                $G_CPL                        ) = 'CouPLing'              ! Comment
   subvargroup.begin (              $G_GEN                        )                           ! $G_HP.$G_GEN
      subvar.str (                  $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN.$_X' ! $G_HP.$G_GEN.$_X, Definition
      subvar.intent (               $_X                           ) = 2                       ! Intent
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of STatoR reference marker (wrt. DriveTRain reference frame)' ! Comment

   subvargroup.end (                $G_GEN                        )                           ! $G_HP.$G_GEN
   subvargroup.txt (                $G_GEN                        ) = 'GENerator'             ! Comment
subvargroup.end (                   $G_HP                         )                           ! $G_HP
subvargroup.desc (        1 ,       $G_HP                         ) = ''                      ! Description
subvargroup.txt (                   $G_HP                         ) = 'Hard Points[br]0: DriveTRain[br]1: HouSinG[br]2: HUB[br]3: MainSHaft[br]4: GearBoX[br]4a: Low Speed Stage[br]4b: InterMediate Speed Stage[br]4c: High Speed Stage[br]5: CouPLing[br]6: GENerator[br]7: BRaKe' ! Comment

subvargroup.begin (                 $G_KP                         )                           ! $G_KP
   subvargroup.begin (              $G_GRO                        )                           ! $G_KP.$G_GRO
      subvar.str (                  $_BR1_X                       ) = '$G_PA.$G_BR.$G_GRO.$_1_X' ! $G_KP.$G_GRO.$_BR1_X, Definition
      subvar.intent (               $_BR1_X                       ) = 2                       ! Intent
      subvar.status (               $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BR1_X                       ) = 'x-pos. Generator ROtor BeaRing 1 (wrt. Generator ROtor reference frame)' ! Comment

      subvar.str (                  $_BR2_X                       ) = '$G_PA.$G_BR.$G_GRO.$_2_X' ! $G_KP.$G_GRO.$_BR2_X, Definition
      subvar.intent (               $_BR2_X                       ) = 2                       ! Intent
      subvar.status (               $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BR2_X                       ) = 'x-pos. Generator ROtor BeaRing 2 (wrt. Generator ROtor reference frame)' ! Comment

      subvar.str (                  $_CPL_X                       ) = '$G_HP.$G_CPL.$_X \n- $G_HP.$G_GEN.$_X\n+ $G_PA.$G_SCN.$_CPL_2_GEN_X ' ! $G_KP.$G_GRO.$_CPL_X, Definition
      subvar.intent (               $_CPL_X                       ) = 2                       ! Intent
      subvar.status (               $_CPL_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CPL_X                       ) = 'x-pos. connection to Generator ROtor (wrt. Generator ROtor reference frame)' ! Comment

      subvar.str (                  $_TRQ_X                       ) = '$G_PA.$G_TRQ.$_X'      ! $G_KP.$G_GRO.$_TRQ_X, Definition
      subvar.intent (               $_TRQ_X                       ) = 2                       ! Intent
      subvar.status (               $_TRQ_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRQ_X                       ) = 'x-pos. of to marker for GENerator ToRQue (wrt. Generator ROtor reference frame)' ! Comment

   subvargroup.end (                $G_GRO                        )                           ! $G_KP.$G_GRO
   subvargroup.txt (                $G_GRO                        ) = 'Generator ROtor'       ! Comment
   subvargroup.begin (              $G_STR                        )                           ! $G_KP.$G_STR
      subvar.str (                  $_BR1_X                       ) = '$G_PA.$G_BR.$G_GRO.$_1_X' ! $G_KP.$G_STR.$_BR1_X, Definition
      subvar.intent (               $_BR1_X                       ) = 2                       ! Intent
      subvar.status (               $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BR1_X                       ) = 'x-pos. STatoR BeaRing 1 (wrt. STatoR reference frame)' ! Comment

      subvar.str (                  $_BR2_X                       ) = '$G_PA.$G_BR.$G_GRO.$_2_X' ! $G_KP.$G_STR.$_BR2_X, Definition
      subvar.intent (               $_BR2_X                       ) = 2                       ! Intent
      subvar.status (               $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BR2_X                       ) = 'x-pos. STatoR BeaRing 2 (wrt. STatoR reference frame)' ! Comment

      subvar.str (                  $_TRQ_X                       ) = '$G_PA.$G_TRQ.$_X'      ! $G_KP.$G_STR.$_TRQ_X, Definition
      subvar.intent (               $_TRQ_X                       ) = 2                       ! Intent
      subvar.status (               $_TRQ_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRQ_X                       ) = 'x-pos. of from marker for GENerator ToRQue (wrt. STatoR reference frame)' ! Comment

      subvar.str (                  $_BU1_X                       ) = '$G_PA.$G_BU.$G_STR.$G_01.$_X' ! $G_KP.$G_STR.$_BU1_X, Definition
      subvar.intent (               $_BU1_X                       ) = 2                       ! Intent
      subvar.status (               $_BU1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU1_X                       ) = 'x-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU1_Y                       ) = '$G_PA.$G_BU.$G_STR.$G_01.$_Y' ! $G_KP.$G_STR.$_BU1_Y, Definition
      subvar.intent (               $_BU1_Y                       ) = 2                       ! Intent
      subvar.status (               $_BU1_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU1_Y                       ) = 'y-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU1_Z                       ) = '$G_PA.$G_BU.$G_STR.$G_01.$_Z' ! $G_KP.$G_STR.$_BU1_Z, Definition
      subvar.intent (               $_BU1_Z                       ) = 2                       ! Intent
      subvar.status (               $_BU1_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU1_Z                       ) = 'z-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU2_X                       ) = '$G_PA.$G_BU.$G_STR.$G_02.$_X' ! $G_KP.$G_STR.$_BU2_X, Definition
      subvar.intent (               $_BU2_X                       ) = 2                       ! Intent
      subvar.status (               $_BU2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU2_X                       ) = 'x-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU2_Y                       ) = '$G_PA.$G_BU.$G_STR.$G_02.$_Y' ! $G_KP.$G_STR.$_BU2_Y, Definition
      subvar.intent (               $_BU2_Y                       ) = 2                       ! Intent
      subvar.status (               $_BU2_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU2_Y                       ) = 'y-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU2_Z                       ) = '$G_PA.$G_BU.$G_STR.$G_02.$_Z' ! $G_KP.$G_STR.$_BU2_Z, Definition
      subvar.intent (               $_BU2_Z                       ) = 2                       ! Intent
      subvar.status (               $_BU2_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU2_Z                       ) = 'z-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU3_X                       ) = '$G_PA.$G_BU.$G_STR.$G_03.$_X' ! $G_KP.$G_STR.$_BU3_X, Definition
      subvar.intent (               $_BU3_X                       ) = 2                       ! Intent
      subvar.status (               $_BU3_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU3_X                       ) = 'x-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU3_Y                       ) = '$G_PA.$G_BU.$G_STR.$G_03.$_Y' ! $G_KP.$G_STR.$_BU3_Y, Definition
      subvar.intent (               $_BU3_Y                       ) = 2                       ! Intent
      subvar.status (               $_BU3_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU3_Y                       ) = 'y-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU3_Z                       ) = '$G_PA.$G_BU.$G_STR.$G_03.$_Z' ! $G_KP.$G_STR.$_BU3_Z, Definition
      subvar.intent (               $_BU3_Z                       ) = 2                       ! Intent
      subvar.status (               $_BU3_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU3_Z                       ) = 'z-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU4_X                       ) = '$G_PA.$G_BU.$G_STR.$G_04.$_X' ! $G_KP.$G_STR.$_BU4_X, Definition
      subvar.intent (               $_BU4_X                       ) = 2                       ! Intent
      subvar.status (               $_BU4_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU4_X                       ) = 'x-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU4_Y                       ) = '$G_PA.$G_BU.$G_STR.$G_04.$_Y' ! $G_KP.$G_STR.$_BU4_Y, Definition
      subvar.intent (               $_BU4_Y                       ) = 2                       ! Intent
      subvar.status (               $_BU4_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU4_Y                       ) = 'y-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

      subvar.str (                  $_BU4_Z                       ) = '$G_PA.$G_BU.$G_STR.$G_04.$_Z' ! $G_KP.$G_STR.$_BU4_Z, Definition
      subvar.intent (               $_BU4_Z                       ) = 2                       ! Intent
      subvar.status (               $_BU4_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_BU4_Z                       ) = 'z-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

   subvargroup.end (                $G_STR                        )                           ! $G_KP.$G_STR
   subvargroup.txt (                $G_STR                        ) = 'STatoR'                ! Comment
subvargroup.end (                   $G_KP                         )                           ! $G_KP
subvargroup.txt (                   $G_KP                         ) = 'Kinematic Points'      ! Comment

subvargroup.begin (                 $G_BP                         )                           ! $G_BP
   subvargroup.begin (              $G_GRO                        )                           ! $G_BP.$G_GRO
      subvar.str (                  $_M                           ) = '5290.64 kg'            ! $G_BP.$G_GRO.$_M, Definition
      subvar.status (               $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_M                           ) = 'Mass'                  ! Comment

      subvar.str (                  $_CMX                         ) = '-0.00354 m'            ! $G_BP.$G_GRO.$_CMX, Definition
      subvar.status (               $_CMX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CMX                         ) = 'Center of Mass, wrt. BRF' ! Comment

      subvar.str (                  $_CMY                         ) = '0 m'                   ! $G_BP.$G_GRO.$_CMY, Definition
      subvar.status (               $_CMY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CMY                         ) = 'Center of Mass, wrt. BRF' ! Comment

      subvar.str (                  $_CMZ                         ) = '0 m'                   ! $G_BP.$G_GRO.$_CMZ, Definition
      subvar.status (               $_CMZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CMZ                         ) = 'Center of Mass, wrt. BRF' ! Comment

      subvar.str (                  $_IXX                         ) = '300 kgm^2'             ! $G_BP.$G_GRO.$_IXX, Definition
      subvar.status (               $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IYY                         ) = '8957.122 kgm^2'        ! $G_BP.$G_GRO.$_IYY, Definition
      subvar.status (               $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IZZ                         ) = '8957.122 kgm^2'        ! $G_BP.$G_GRO.$_IZZ, Definition
      subvar.status (               $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_ECC_SWITCH                  ) = '0'                     ! $G_BP.$G_GRO.$_ECC_SWITCH, Definition
      subvar.status (               $_ECC_SWITCH                  ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_ECC_SWITCH                  ) = 'Off'                   ! Description of discrete values
      subvar.discr.desc (   2 ,     $_ECC_SWITCH                  ) = 'On'                    ! Description of discrete values
      subvar.discr.str (   1 ,      $_ECC_SWITCH                  ) = '0'                     ! Discrete values
      subvar.discr.str (   2 ,      $_ECC_SWITCH                  ) = '1'                     ! Discrete values
      subvar.txt (                  $_ECC_SWITCH                  ) = 'ECCentricity switch: 0:off / 1:on; If on, the center of gravity of the Generator ROtor has an eccenctric position.' ! Comment

      subvar.str (                  $_ECC_R                       ) = '0.00002 m'             ! $G_BP.$G_GRO.$_ECC_R, Definition
      subvar.status (               $_ECC_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_ECC_R                       ) = 'ECCentricity'          ! Comment

   subvargroup.end (                $G_GRO                        )                           ! $G_BP.$G_GRO
   subvargroup.txt (                $G_GRO                        ) = 'Generator ROtor'       ! Comment
   subvargroup.begin (              $G_STR                        )                           ! $G_BP.$G_STR
      subvar.str (                  $_M                           ) = '18000 kg'              ! $G_BP.$G_STR.$_M, Definition
      subvar.status (               $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_M                           ) = 'Mass'                  ! Comment

      subvar.str (                  $_CMX                         ) = '0.1549 m'              ! $G_BP.$G_STR.$_CMX, Definition
      subvar.status (               $_CMX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CMX                         ) = 'Center of Mass, wrt. BRF' ! Comment

      subvar.str (                  $_CMY                         ) = '0 m'                   ! $G_BP.$G_STR.$_CMY, Definition
      subvar.status (               $_CMY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CMY                         ) = 'Center of Mass, wrt. BRF' ! Comment

      subvar.str (                  $_CMZ                         ) = '0 m'                   ! $G_BP.$G_STR.$_CMZ, Definition
      subvar.status (               $_CMZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CMZ                         ) = 'Center of Mass, wrt. BRF' ! Comment

      subvar.str (                  $_IXX                         ) = '3324.981 kgm^2'        ! $G_BP.$G_STR.$_IXX, Definition
      subvar.status (               $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IYY                         ) = '30171.67 kgm^2'        ! $G_BP.$G_STR.$_IYY, Definition
      subvar.status (               $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IZZ                         ) = '30133.394 kgm^2'       ! $G_BP.$G_STR.$_IZZ, Definition
      subvar.status (               $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

   subvargroup.end (                $G_STR                        )                           ! $G_BP.$G_STR
   subvargroup.txt (                $G_STR                        ) = 'STatoR'                ! Comment
subvargroup.end (                   $G_BP                         )                           ! $G_BP
subvargroup.txt (                   $G_BP                         ) = 'Body Properties'       ! Comment

subvargroup.begin (                 $G_FE                         )                           ! $G_FE
   subvargroup.begin (              $G_BU                         )                           ! $G_FE.$G_BU
      subvargroup.begin (           $G_STR                        )                           ! $G_FE.$G_BU.$G_STR
         subvar.str (               $_C_X                         ) = '1000000000 N/m'        ! $G_FE.$G_BU.$G_STR.$_C_X, Definition
         subvar.status (            $_C_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_X                         ) = 'stiffness in x-direction' ! Comment

         subvar.str (               $_C_Y                         ) = '1000000000 N/m'        ! $G_FE.$G_BU.$G_STR.$_C_Y, Definition
         subvar.status (            $_C_Y                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_Y                         ) = 'stiffness in y-direction' ! Comment

         subvar.str (               $_C_Z                         ) = '1000000000 N/m'        ! $G_FE.$G_BU.$G_STR.$_C_Z, Definition
         subvar.status (            $_C_Z                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_Z                         ) = 'stiffness in z-direction' ! Comment

         subvar.str (               $_D_X                         ) = '350000 Ns/m'           ! $G_FE.$G_BU.$G_STR.$_D_X, Definition
         subvar.status (            $_D_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_X                         ) = 'damping in x-direction' ! Comment

         subvar.str (               $_D_Y                         ) = '350000 Ns/m'           ! $G_FE.$G_BU.$G_STR.$_D_Y, Definition
         subvar.status (            $_D_Y                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_Y                         ) = 'damping in y-direction' ! Comment

         subvar.str (               $_D_Z                         ) = '350000 Ns/m'           ! $G_FE.$G_BU.$G_STR.$_D_Z, Definition
         subvar.status (            $_D_Z                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_Z                         ) = 'damping in z-direction' ! Comment

      subvargroup.end (             $G_STR                        )                           ! $G_FE.$G_BU.$G_STR
      subvargroup.txt (             $G_STR                        ) = 'STatoR'                ! Comment
   subvargroup.end (                $G_BU                         )                           ! $G_FE.$G_BU
   subvargroup.txt (                $G_BU                         ) = 'BUshings'              ! Comment
   subvargroup.begin (              $G_BR                         )                           ! $G_FE.$G_BR
      subvargroup.begin (           $G_GRO                        )                           ! $G_FE.$G_BR.$G_GRO
         subvar.str (               $_C_A                         ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_GRO.$_C_A, Definition
         subvar.status (            $_C_A                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_A                         ) = 'axial stiffness (in x-direction)' ! Comment

         subvar.str (               $_C_R                         ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_GRO.$_C_R, Definition
         subvar.status (            $_C_R                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_R                         ) = 'radial stiffness (in y- and z-direction)' ! Comment

         subvar.str (               $_D_A                         ) = '260000 Ns/m'           ! $G_FE.$G_BR.$G_GRO.$_D_A, Definition
         subvar.status (            $_D_A                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_A                         ) = 'axial damping (in x-direction)' ! Comment

         subvar.str (               $_D_R                         ) = '350000 Ns/m'           ! $G_FE.$G_BR.$G_GRO.$_D_R, Definition
         subvar.status (            $_D_R                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_R                         ) = 'radial damping (in y- and z-direction)' ! Comment

      subvargroup.end (             $G_GRO                        )                           ! $G_FE.$G_BR.$G_GRO
      subvargroup.txt (             $G_GRO                        ) = 'Generator ROtor'       ! Comment
   subvargroup.end (                $G_BR                         )                           ! $G_FE.$G_BR
   subvargroup.txt (                $G_BR                         ) = 'BeaRings'              ! Comment
subvargroup.end (                   $G_FE                         )                           ! $G_FE
subvargroup.txt (                   $G_FE                         ) = 'Force Elements'        ! Comment

subvargroup.begin (                 $G_DOF                        )                           ! $G_DOF
   subvargroup.begin (              $G_GRO                        )                           ! $G_DOF.$G_GRO
      subvar.str (                  $_TLT                         ) = '0'                     ! $G_DOF.$G_GRO.$_TLT, Definition
      subvar.intent (               $_TLT                         ) = 1                       ! Intent
      subvar.status (               $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TLT                         ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TLT                         ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TLT                         ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TLT                         ) = '0'                     ! Discrete values
      subvar.txt (                  $_TLT                         ) = 'TiLTing'               ! Comment

      subvar.str (                  $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_GRO.$_TRANS_X, Definition
      subvar.intent (               $_TRANS_X                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_X                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_X                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

      subvar.str (                  $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_GRO.$_TRANS_Y, Definition
      subvar.intent (               $_TRANS_Y                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_Y                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_Y                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

      subvar.str (                  $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_GRO.$_TRANS_Z, Definition
      subvar.intent (               $_TRANS_Z                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_Z                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_Z                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

   subvargroup.end (                $G_GRO                        )                           ! $G_DOF.$G_GRO
   subvargroup.txt (                $G_GRO                        ) = 'Generator ROtor'       ! Comment
   subvargroup.begin (              $G_STR                        )                           ! $G_DOF.$G_STR
      subvar.str (                  $_TLT                         ) = '0'                     ! $G_DOF.$G_STR.$_TLT, Definition
      subvar.intent (               $_TLT                         ) = 1                       ! Intent
      subvar.status (               $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TLT                         ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TLT                         ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TLT                         ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TLT                         ) = '0'                     ! Discrete values
      subvar.txt (                  $_TLT                         ) = 'TiLTing'               ! Comment

      subvar.str (                  $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_STR.$_TRANS_X, Definition
      subvar.intent (               $_TRANS_X                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_X                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_X                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

      subvar.str (                  $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_STR.$_TRANS_Y, Definition
      subvar.intent (               $_TRANS_Y                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_Y                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_Y                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

      subvar.str (                  $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_STR.$_TRANS_Z, Definition
      subvar.intent (               $_TRANS_Z                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_Z                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_Z                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

   subvargroup.end (                $G_STR                        )                           ! $G_DOF.$G_STR
   subvargroup.txt (                $G_STR                        ) = 'STatoR'                ! Comment
subvargroup.end (                   $G_DOF                        )                           ! $G_DOF
subvargroup.desc (        1 ,       $G_DOF                        ) = ''                      ! Description
subvargroup.txt (                   $G_DOF                        ) = 'Degrees Of Freedom'    ! Comment

subvargroup.begin (                 $G_3D                         )                           ! $G_3D
   subvargroup.begin (              $G_GRO                        )                           ! $G_3D.$G_GRO
      subvar.str (                  $_TRANSPARENCY                ) = '0'                     ! $G_3D.$G_GRO.$_TRANSPARENCY, Definition
      subvar.intent (               $_TRANSPARENCY                ) = 1                       ! Intent
      subvar.status (               $_TRANSPARENCY                ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRANSPARENCY                ) = 'Transparency'          ! Comment

      subvargroup.begin (           $G_BR                         )                           ! $G_3D.$G_GRO.$G_BR
         subvar.str (               $_1_D_O                       ) = '$G_3D.$G_GRO.$G_BR.$_1_D_I + 0.1 m' ! $G_3D.$G_GRO.$G_BR.$_1_D_O, Definition
         subvar.intent (            $_1_D_O                       ) = 1                       ! Intent
         subvar.status (            $_1_D_O                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_1_D_O                       ) = 'Diameter Out'          ! Comment

         subvar.str (               $_1_D_I                       ) = '0.46 m'                ! $G_3D.$G_GRO.$G_BR.$_1_D_I, Definition
         subvar.intent (            $_1_D_I                       ) = 0                       ! Intent
         subvar.status (            $_1_D_I                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_1_D_I                       ) = 'Diameter In'           ! Comment

         subvar.str (               $_1_L                         ) = '0.15 m'                ! $G_3D.$G_GRO.$G_BR.$_1_L, Definition
         subvar.intent (            $_1_L                         ) = 0                       ! Intent
         subvar.status (            $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_1_L                         ) = 'Lenght'                ! Comment

         subvar.str (               $_2_D_O                       ) = '$G_3D.$G_GRO.$G_BR.$_2_D_I + 0.1 m' ! $G_3D.$G_GRO.$G_BR.$_2_D_O, Definition
         subvar.intent (            $_2_D_O                       ) = 1                       ! Intent
         subvar.status (            $_2_D_O                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_2_D_O                       ) = 'Diameter Out'          ! Comment

         subvar.str (               $_2_D_I                       ) = '0.46 m'                ! $G_3D.$G_GRO.$G_BR.$_2_D_I, Definition
         subvar.intent (            $_2_D_I                       ) = 0                       ! Intent
         subvar.status (            $_2_D_I                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_2_D_I                       ) = 'Diameter In'           ! Comment

         subvar.str (               $_2_L                         ) = '0.15 m'                ! $G_3D.$G_GRO.$G_BR.$_2_L, Definition
         subvar.intent (            $_2_L                         ) = 0                       ! Intent
         subvar.status (            $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_2_L                         ) = 'Lenght'                ! Comment

      subvargroup.end (             $G_BR                         )                           ! $G_3D.$G_GRO.$G_BR
      subvargroup.txt (             $G_BR                         ) = 'BeaRings'              ! Comment
   subvargroup.end (                $G_GRO                        )                           ! $G_3D.$G_GRO
   subvargroup.txt (                $G_GRO                        ) = 'Generator ROtor'       ! Comment
   subvargroup.begin (              $G_STR                        )                           ! $G_3D.$G_STR
      subvar.str (                  $_TRANSPARENCY                ) = '0.75'                  ! $G_3D.$G_STR.$_TRANSPARENCY, Definition
      subvar.intent (               $_TRANSPARENCY                ) = 1                       ! Intent
      subvar.status (               $_TRANSPARENCY                ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRANSPARENCY                ) = 'Transparency'          ! Comment

      subvargroup.begin (           $G_BU                         )                           ! $G_3D.$G_STR.$G_BU
         subvar.str (               $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_X' ! $G_3D.$G_STR.$G_BU.$_X, Definition
         subvar.intent (            $_X                           ) = 1                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-dimension, stator bushing' ! Comment

         subvar.str (               $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Y' ! $G_3D.$G_STR.$G_BU.$_Y, Definition
         subvar.intent (            $_Y                           ) = 1                       ! Intent
         subvar.status (            $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Y                           ) = 'y-dimension, stator bushing' ! Comment

         subvar.str (               $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Z' ! $G_3D.$G_STR.$G_BU.$_Z, Definition
         subvar.intent (            $_Z                           ) = 1                       ! Intent
         subvar.status (            $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Z                           ) = 'z-dimension, stator bushing' ! Comment

      subvargroup.end (             $G_BU                         )                           ! $G_3D.$G_STR.$G_BU
      subvargroup.txt (             $G_BU                         ) = 'BUshings'              ! Comment
   subvargroup.end (                $G_STR                        )                           ! $G_3D.$G_STR
   subvargroup.txt (                $G_STR                        ) = 'STatoR'                ! Comment
subvargroup.end (                   $G_3D                         )                           ! $G_3D
subvargroup.txt (                   $G_3D                         ) = '3D Properties'         ! Comment

subvargroup.begin (                 $G_INTERFACE                  )                           ! $G_INTERFACE
   subvargroup.begin (              $G_031_MFR                    )                           ! $G_INTERFACE.$G_031_MFR
      subvargroup.begin (           $G_PA                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA
         subvargroup.begin (        $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU
            subvargroup.begin (     $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN
               subvargroup.begin (  $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01
                  subvar.str (      $_X                           ) = '-0.9 m'                ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '0.69675 m'             ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '-0.667694 m'           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 1 (wrt. STaTor reference frame)' ! Comment

               subvargroup.end (    $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01
               subvargroup.txt (    $G_01                         ) = 'BUshing 1'             ! Comment
               subvargroup.begin (  $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02
                  subvar.str (      $_X                           ) = '-0.9 m'                ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '-0.69675 m'            ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '-0.667694 m'           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 2 (wrt. STaTor reference frame)' ! Comment

               subvargroup.end (    $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02
               subvargroup.txt (    $G_02                         ) = 'BUshing 2'             ! Comment
               subvargroup.begin (  $G_03                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03
                  subvar.str (      $_X                           ) = '0.9 m'                 ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '0.69675 m'             ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '-0.667694 m'           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 3 (wrt. STaTor reference frame)' ! Comment

               subvargroup.end (    $G_03                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03
               subvargroup.txt (    $G_03                         ) = 'BUshing 3'             ! Comment
               subvargroup.begin (  $G_04                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04
                  subvar.str (      $_X                           ) = '0.9 m'                 ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '-0.69675 m'            ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '-0.667694 m'           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 4 (wrt. STaTor reference frame)' ! Comment

               subvargroup.end (    $G_04                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04
               subvargroup.txt (    $G_04                         ) = 'BUshing 4'             ! Comment
            subvargroup.end (       $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN
            subvargroup.txt (       $G_GEN                        ) = 'GENerator'             ! Comment
         subvargroup.end (          $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU
         subvargroup.txt (          $G_BU                         ) = 'BUshing'               ! Comment
      subvargroup.end (             $G_PA                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA
      subvargroup.txt (             $G_PA                         ) = 'PArameter'             ! Comment
      subvargroup.begin (           $G_HP                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HP
         subvargroup.begin (        $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN
            subvar.str (            $_X                           ) = '5.2425 m'              ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of GENerator reference marker (wrt. DriveTRain reference frame)' ! Comment

         subvargroup.end (          $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN
         subvargroup.txt (          $G_GEN                        ) = 'GENerator'             ! Comment
         subvargroup.begin (        $G_CPL                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL
            subvar.str (            $_X                           ) = '2.89 m'                ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of CouPLing reference marker (wrt. to DRiveTrain reference frame)' ! Comment

            subvar.str (            $_R                           ) = '0.68 m'                ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R, Definition
            subvar.intent (         $_R                           ) = 2                       ! Intent
            subvar.status (         $_R                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_R                           ) = 'radial pos. of CouPLing reference marker (wrt. DriveTRain reference frame)' ! Comment

            subvar.str (            $_ang                         ) = '36 deg'                ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang, Definition
            subvar.intent (         $_ang                         ) = 2                       ! Intent
            subvar.status (         $_ang                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ang                         ) = 'offset angle (around alpha) of CouPLing reference marker (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_CPL                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL
         subvargroup.txt (          $G_CPL                        ) = 'CouPLing'              ! Comment
      subvargroup.end (             $G_HP                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HP
      subvargroup.desc (   1 ,      $G_HP                         ) = ''                      ! Description
      subvargroup.txt (             $G_HP                         ) = 'Hard Points'           ! Comment
      subvargroup.begin (           $G_3D                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D
         subvargroup.begin (        $G_STR                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR
            subvargroup.begin (     $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU
               subvar.str (         $_X                           ) = '0.3 m'                 ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_X, Definition
               subvar.intent (      $_X                           ) = 2                       ! Intent
               subvar.status (      $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_X                           ) = 'x-dimension, stator bushing' ! Comment

               subvar.str (         $_Y                           ) = '0.15 m'                ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Y, Definition
               subvar.intent (      $_Y                           ) = 2                       ! Intent
               subvar.status (      $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_Y                           ) = 'y-dimension, stator bushing' ! Comment

               subvar.str (         $_Z                           ) = '0.1 m'                 ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Z, Definition
               subvar.intent (      $_Z                           ) = 2                       ! Intent
               subvar.status (      $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_Z                           ) = 'z-dimension, stator bushing' ! Comment

            subvargroup.end (       $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU
            subvargroup.txt (       $G_BU                         ) = 'BUshings'              ! Comment
         subvargroup.end (          $G_STR                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR
         subvargroup.txt (          $G_STR                        ) = 'STatoR'                ! Comment
      subvargroup.end (             $G_3D                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D
      subvargroup.txt (             $G_3D                         ) = '3D properties'         ! Comment
   subvargroup.end (                $G_031_MFR                    )                           ! $G_INTERFACE.$G_031_MFR
   subvargroup.txt (                $G_031_MFR                    ) = 'MainFRrame'            ! Comment
   subvargroup.begin (              $G_034_CPL                    )                           ! $G_INTERFACE.$G_034_CPL
      subvargroup.begin (           $G_PA                         )                           ! $G_INTERFACE.$G_034_CPL.$G_PA
         subvargroup.begin (        $G_SCN                        )                           ! $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN
            subvar.str (            $_CPL_2_GEN_X                 ) = '0.79 m'                ! $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN.$_CPL_2_GEN_X, Definition
            subvar.intent (         $_CPL_2_GEN_X                 ) = 2                       ! Intent
            subvar.status (         $_CPL_2_GEN_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_CPL_2_GEN_X                 ) = 'x-pos. CouPLing connection to GENerator (wrt. CouPLing reference frame)' ! Comment

         subvargroup.end (          $G_SCN                        )                           ! $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN
         subvargroup.txt (          $G_SCN                        ) = 'Shaft CoNnections'     ! Comment
      subvargroup.end (             $G_PA                         )                           ! $G_INTERFACE.$G_034_CPL.$G_PA
      subvargroup.txt (             $G_PA                         ) = 'PArameter'             ! Comment
   subvargroup.end (                $G_034_CPL                    )                           ! $G_INTERFACE.$G_034_CPL
   subvargroup.txt (                $G_034_CPL                    ) = 'CouPlinG'              ! Comment
subvargroup.end (                   $G_INTERFACE                  )                           ! $G_INTERFACE
subvargroup.txt (                   $G_INTERFACE                  ) = 'INTERFACE subvars - exchanged with other submodels via communicators' ! Comment

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -3.40000000000000000E+02
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+02
refsys.attr.2d.width (              $R_Isys                       ) = 5.10000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 3.10000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GEN     ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GEN     ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GEN_BU1 ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GEN_BU1 ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GEN_BU2 ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GEN_BU2 ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GEN_BU3 ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GEN_BU3 ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GEN_BU4 ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GEN_BU4 ) = $R_Isys                 ! Reference system

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_STR                        ) = $G_BP.$G_STR.$_M        ! Mass of the Body
body.cg.pos (             1 ,       $B_STR                        ) = $G_BP.$G_STR.$_CMX      ! Center of gravity
body.cg.pos (             2 ,       $B_STR                        ) = $G_BP.$G_STR.$_CMY      ! Center of gravity
body.cg.pos (             3 ,       $B_STR                        ) = $G_BP.$G_STR.$_CMZ      ! Center of gravity
body.I.tens (             1 ,   1 , $B_STR                        ) = $G_BP.$G_STR.$_IXX      ! Moments of inertia
body.I.tens (             2 ,   2 , $B_STR                        ) = $G_BP.$G_STR.$_IYY      ! Moments of inertia
body.I.tens (             3 ,   3 , $B_STR                        ) = $G_BP.$G_STR.$_IZZ      ! Moments of inertia
body.I.kind (                       $B_STR                        ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.brf.st.pos (         1 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_STR                        ) = -0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_STR                        ) = -0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_STR                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.attr.2d.pos.x (                $B_STR                        ) = -3.00000000000000000E+02
body.attr.2d.pos.y (                $B_STR                        ) = 7.00000000000000000E+01
body.attr.2d.width (                $B_STR                        ) = 4.20000000000000000E+02
body.attr.2d.height (               $B_STR                        ) = 3.00000000000000000E+01

marker.type (                       $M_STR_BRF                    ) = 1                       ! Type
marker.parent (                     $M_STR_BRF                    ) = $B_STR                  ! Body
marker.flx.type (                   $M_STR_BRF                    ) = 4                       ! Flexible type

marker.type (                       $M_STR_JNT                    ) = 2                       ! Type
marker.parent (                     $M_STR_JNT                    ) = $B_STR                  ! Body

marker.type (                       $M_STR_GRO                    ) = 2                       ! Type
marker.parent (                     $M_STR_GRO                    ) = $B_STR                  ! Body

marker.type (                       $M_STR_BR1                    ) = 2                       ! Type
marker.parent (                     $M_STR_BR1                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_BR1                    ) = $G_KP.$G_STR.$_BR1_X    ! Position

marker.type (                       $M_STR_BR2                    ) = 2                       ! Type
marker.parent (                     $M_STR_BR2                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_BR2                    ) = $G_KP.$G_STR.$_BR2_X    ! Position

marker.type (                       $M_STR_BU1                    ) = 2                       ! Type
marker.ref (                        $M_STR_BU1                    ) = $M_STR_BRF              ! Reference Marker
marker.parent (                     $M_STR_BU1                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_BU1                    ) = $G_KP.$G_STR.$_BU1_X    ! Position
marker.pos (              2 ,       $M_STR_BU1                    ) = $G_KP.$G_STR.$_BU1_Y    ! Position
marker.pos (              3 ,       $M_STR_BU1                    ) = $G_KP.$G_STR.$_BU1_Z    ! Position

marker.type (                       $M_STR_BU2                    ) = 2                       ! Type
marker.ref (                        $M_STR_BU2                    ) = $M_STR_BRF              ! Reference Marker
marker.parent (                     $M_STR_BU2                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_BU2                    ) = $G_KP.$G_STR.$_BU2_X    ! Position
marker.pos (              2 ,       $M_STR_BU2                    ) = $G_KP.$G_STR.$_BU2_Y    ! Position
marker.pos (              3 ,       $M_STR_BU2                    ) = $G_KP.$G_STR.$_BU2_Z    ! Position

marker.type (                       $M_STR_BU3                    ) = 2                       ! Type
marker.ref (                        $M_STR_BU3                    ) = $M_STR_BRF              ! Reference Marker
marker.parent (                     $M_STR_BU3                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_BU3                    ) = $G_KP.$G_STR.$_BU3_X    ! Position
marker.pos (              2 ,       $M_STR_BU3                    ) = $G_KP.$G_STR.$_BU3_Y    ! Position
marker.pos (              3 ,       $M_STR_BU3                    ) = $G_KP.$G_STR.$_BU3_Z    ! Position

marker.type (                       $M_STR_BU4                    ) = 2                       ! Type
marker.ref (                        $M_STR_BU4                    ) = $M_STR_BRF              ! Reference Marker
marker.parent (                     $M_STR_BU4                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_BU4                    ) = $G_KP.$G_STR.$_BU4_X    ! Position
marker.pos (              2 ,       $M_STR_BU4                    ) = $G_KP.$G_STR.$_BU4_Y    ! Position
marker.pos (              3 ,       $M_STR_BU4                    ) = $G_KP.$G_STR.$_BU4_Z    ! Position

marker.type (                       $M_STR_TRQ                    ) = 2                       ! Type
marker.parent (                     $M_STR_TRQ                    ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_TRQ                    ) = $G_KP.$G_STR.$_TRQ_X    ! Position

marker.type (                       $M_STR_INTERFACE_CTRL_STR     ) = 2                       ! Type
marker.parent (                     $M_STR_INTERFACE_CTRL_STR     ) = $B_STR                  ! Body
marker.pos (              1 ,       $M_STR_INTERFACE_CTRL_STR     ) = $G_KP.$G_STR.$_TRQ_X    ! Position

prim.type (                         $P_STR_CAD                    ) = 39                      ! Type
prim.ref (                          $P_STR_CAD                    ) = $M_STR_BRF              ! Reference Marker
prim.ang (                1 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $P_STR_CAD                    ) = { -90deg }              ! Angles
prim.color.r (            1 ,       $P_STR_CAD                    ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_CAD                    ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_CAD                    ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_STR_CAD                    ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_CAD                    ) = '34_GEN_STR.obj'        ! [-] CAD file name
prim.par (                3 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Data display flag
prim.par (                4 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Line display flag
prim.par (                5 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Faceted line diam.(CAD units)
prim.par (                9 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_STR_CAD                    ) = 0.00000000000000000E+00 ! [-] Repeat shape

prim.type (                         $P_STR_GRO_BR1                ) = 2                       ! Type
prim.ref (                          $P_STR_GRO_BR1                ) = $M_STR_BR1              ! Reference Marker
prim.ang (                3 ,       $P_STR_GRO_BR1                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_STR_GRO_BR1                ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_STR_GRO_BR1                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_GRO_BR1                ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_STR_GRO_BR1                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_GRO_BR1                ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_STR_GRO_BR1                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_GRO_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_STR_GRO_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_STR_GRO_BR1                ) = 2                       ! Draw style
prim.transparency (                 $P_STR_GRO_BR1                ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_GRO_BR1                ) = $G_3D.$G_GRO.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_STR_GRO_BR1                ) = { $G_3D.$G_GRO.$G_BR.$_1_D_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_STR_GRO_BR1                ) = $G_3D.$G_GRO.$G_BR.$_1_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_STR_GRO_BR1                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_STR_GRO_BR1                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_STR_GRO_BR1                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_STR_GRO_BR1                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_STR_GRO_BR1                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_STR_GRO_BR2                ) = 2                       ! Type
prim.ref (                          $P_STR_GRO_BR2                ) = $M_STR_BR2              ! Reference Marker
prim.ang (                3 ,       $P_STR_GRO_BR2                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_STR_GRO_BR2                ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_STR_GRO_BR2                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_GRO_BR2                ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_STR_GRO_BR2                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_GRO_BR2                ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_STR_GRO_BR2                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_GRO_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_STR_GRO_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_STR_GRO_BR2                ) = 2                       ! Draw style
prim.transparency (                 $P_STR_GRO_BR2                ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_GRO_BR2                ) = $G_3D.$G_GRO.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_STR_GRO_BR2                ) = { $G_3D.$G_GRO.$G_BR.$_2_D_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_STR_GRO_BR2                ) = $G_3D.$G_GRO.$G_BR.$_2_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_STR_GRO_BR2                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_STR_GRO_BR2                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_STR_GRO_BR2                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_STR_GRO_BR2                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_STR_GRO_BR2                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_STR_BU1                    ) = 1                       ! Type
prim.ref (                          $P_STR_BU1                    ) = $M_STR_BU1              ! Reference Marker
prim.pos (                3 ,       $P_STR_BU1                    ) = { $G_3D.$G_STR.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_STR_BU1                    ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_STR_BU1                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_BU1                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_BU1                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_BU1                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_STR_BU1                    ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_BU1                    ) = $G_3D.$G_STR.$G_BU.$_X  ! [m] Length in X
prim.par (                3 ,       $P_STR_BU1                    ) = $G_3D.$G_STR.$G_BU.$_Y  ! [m] Length in Y
prim.par (                4 ,       $P_STR_BU1                    ) = $G_3D.$G_STR.$G_BU.$_Z  ! [m] Length in Z

prim.type (                         $P_STR_BU2                    ) = 1                       ! Type
prim.ref (                          $P_STR_BU2                    ) = $M_STR_BU2              ! Reference Marker
prim.pos (                3 ,       $P_STR_BU2                    ) = { $G_3D.$G_STR.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_STR_BU2                    ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_STR_BU2                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_STR_BU2                    ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_BU2                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_STR_BU2                    ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_BU2                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_STR_BU2                    ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_BU2                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_STR_BU2                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_STR_BU2                    ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_BU2                    ) = $G_3D.$G_STR.$G_BU.$_X  ! [m] Length in X
prim.par (                3 ,       $P_STR_BU2                    ) = $G_3D.$G_STR.$G_BU.$_Y  ! [m] Length in Y
prim.par (                4 ,       $P_STR_BU2                    ) = $G_3D.$G_STR.$G_BU.$_Z  ! [m] Length in Z

prim.type (                         $P_STR_BU3                    ) = 1                       ! Type
prim.ref (                          $P_STR_BU3                    ) = $M_STR_BU3              ! Reference Marker
prim.pos (                3 ,       $P_STR_BU3                    ) = { $G_3D.$G_STR.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_STR_BU3                    ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_STR_BU3                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_BU3                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_BU3                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_BU3                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_STR_BU3                    ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_BU3                    ) = $G_3D.$G_STR.$G_BU.$_X  ! [m] Length in X
prim.par (                3 ,       $P_STR_BU3                    ) = $G_3D.$G_STR.$G_BU.$_Y  ! [m] Length in Y
prim.par (                4 ,       $P_STR_BU3                    ) = $G_3D.$G_STR.$G_BU.$_Z  ! [m] Length in Z

prim.type (                         $P_STR_BU4                    ) = 1                       ! Type
prim.ref (                          $P_STR_BU4                    ) = $M_STR_BU4              ! Reference Marker
prim.pos (                3 ,       $P_STR_BU4                    ) = { $G_3D.$G_STR.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_STR_BU4                    ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_STR_BU4                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_STR_BU4                    ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_STR_BU4                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_STR_BU4                    ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_STR_BU4                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_STR_BU4                    ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_STR_BU4                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_STR_BU4                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_STR_BU4                    ) = $G_3D.$G_STR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_STR_BU4                    ) = $G_3D.$G_STR.$G_BU.$_X  ! [m] Length in X
prim.par (                3 ,       $P_STR_BU4                    ) = $G_3D.$G_STR.$G_BU.$_Y  ! [m] Length in Y
prim.par (                4 ,       $P_STR_BU4                    ) = $G_3D.$G_STR.$G_BU.$_Z  ! [m] Length in Z


body.m (                            $B_GRO                        ) = $G_BP.$G_GRO.$_M        ! Mass of the Body
body.cg.pos (             1 ,       $B_GRO                        ) = $G_BP.$G_GRO.$_CMX      ! Center of gravity
body.cg.pos (             2 ,       $B_GRO                        ) = { $G_BP.$G_GRO.$_CMY + ( $G_BP.$G_GRO.$_ECC_R * $G_BP.$G_GRO.$_ECC_SWITCH) } ! Center of gravity
body.cg.pos (             3 ,       $B_GRO                        ) = $G_BP.$G_GRO.$_CMZ      ! Center of gravity
body.I.tens (             1 ,   1 , $B_GRO                        ) = $G_BP.$G_GRO.$_IXX      ! Moments of inertia
body.I.tens (             2 ,   2 , $B_GRO                        ) = $G_BP.$G_GRO.$_IYY      ! Moments of inertia
body.I.tens (             3 ,   3 , $B_GRO                        ) = $G_BP.$G_GRO.$_IZZ      ! Moments of inertia
body.I.kind (                       $B_GRO                        ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.brf.st.pos (         1 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_GRO                        ) = -0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_GRO                        ) = -0.00000000000000000E+00 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_GRO                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.attr.2d.pos.x (                $B_GRO                        ) = -3.00000000000000000E+02
body.attr.2d.pos.y (                $B_GRO                        ) = -6.00000000000000000E+01
body.attr.2d.width (                $B_GRO                        ) = 4.20000000000000000E+02
body.attr.2d.height (               $B_GRO                        ) = 6.00000000000000000E+01

marker.type (                       $M_GRO_BRF                    ) = 1                       ! Type
marker.parent (                     $M_GRO_BRF                    ) = $B_GRO                  ! Body
marker.flx.type (                   $M_GRO_BRF                    ) = 4                       ! Flexible type

marker.type (                       $M_GRO_STR                    ) = 2                       ! Type
marker.parent (                     $M_GRO_STR                    ) = $B_GRO                  ! Body
marker.pos (              1 ,       $M_GRO_STR                    ) = 0.00000000000000000E+00 ! Position

marker.type (                       $M_GRO_INTERFACE_GEN_CPL      ) = 2                       ! Type
marker.parent (                     $M_GRO_INTERFACE_GEN_CPL      ) = $B_GRO                  ! Body
marker.pos (              1 ,       $M_GRO_INTERFACE_GEN_CPL      ) = $G_KP.$G_GRO.$_CPL_X    ! Position

marker.type (                       $M_GRO_BR1                    ) = 2                       ! Type
marker.parent (                     $M_GRO_BR1                    ) = $B_GRO                  ! Body
marker.pos (              1 ,       $M_GRO_BR1                    ) = $G_KP.$G_GRO.$_BR1_X    ! Position

marker.type (                       $M_GRO_BR2                    ) = 2                       ! Type
marker.parent (                     $M_GRO_BR2                    ) = $B_GRO                  ! Body
marker.pos (              1 ,       $M_GRO_BR2                    ) = $G_KP.$G_GRO.$_BR2_X    ! Position

marker.type (                       $M_GRO_TRQ                    ) = 2                       ! Type
marker.parent (                     $M_GRO_TRQ                    ) = $B_GRO                  ! Body
marker.pos (              1 ,       $M_GRO_TRQ                    ) = $G_KP.$G_GRO.$_TRQ_X    ! Position

marker.type (                       $M_GRO_INTERFACE_CTRL_GRO     ) = 2                       ! Type
marker.parent (                     $M_GRO_INTERFACE_CTRL_GRO     ) = $B_GRO                  ! Body
marker.pos (              1 ,       $M_GRO_INTERFACE_CTRL_GRO     ) = $G_KP.$G_GRO.$_TRQ_X    ! Position

prim.type (                         $P_GRO_CAD                    ) = 39                      ! Type
prim.ref (                          $P_GRO_CAD                    ) = $M_GRO_BRF              ! Reference Marker
prim.ang (                2 ,       $P_GRO_CAD                    ) = { -90deg }              ! Angles
prim.color.r (            1 ,       $P_GRO_CAD                    ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_GRO_CAD                    ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_GRO_CAD                    ) = 1                       ! Draw style
prim.transparency (                 $P_GRO_CAD                    ) = $G_3D.$G_GRO.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_GRO_CAD                    ) = '34_GEN_GRO.obj'        ! [-] CAD file name
prim.par (                3 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Data display flag
prim.par (                4 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Line display flag
prim.par (                5 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Faceted line diam.(CAD units)
prim.par (                9 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_GRO_CAD                    ) = 0.00000000000000000E+00 ! [-] Repeat shape

prim.type (                         $P_GRO_BR1                    ) = 2                       ! Type
prim.ref (                          $P_GRO_BR1                    ) = $M_GRO_BR1              ! Reference Marker
prim.ang (                3 ,       $P_GRO_BR1                    ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_GRO_BR1                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_GRO_BR1                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_GRO_BR1                    ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_GRO_BR1                    ) = 1                       ! Draw style
prim.transparency (                 $P_GRO_BR1                    ) = $G_3D.$G_GRO.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_GRO_BR1                    ) = $G_3D.$G_GRO.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_GRO_BR1                    ) = $G_3D.$G_GRO.$G_BR.$_1_D_O ! [m] Outer diameter
prim.par (                4 ,       $P_GRO_BR1                    ) = $G_3D.$G_GRO.$G_BR.$_1_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_GRO_BR1                    ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_GRO_BR1                    ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_GRO_BR1                    ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_GRO_BR1                    ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_GRO_BR2                    ) = 2                       ! Type
prim.ref (                          $P_GRO_BR2                    ) = $M_GRO_BR2              ! Reference Marker
prim.ang (                3 ,       $P_GRO_BR2                    ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_GRO_BR2                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_GRO_BR2                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_GRO_BR2                    ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_GRO_BR2                    ) = 1                       ! Draw style
prim.transparency (                 $P_GRO_BR2                    ) = $G_3D.$G_GRO.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_GRO_BR2                    ) = $G_3D.$G_GRO.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_GRO_BR2                    ) = $G_3D.$G_GRO.$G_BR.$_2_D_O ! [m] Outer diameter
prim.par (                4 ,       $P_GRO_BR2                    ) = $G_3D.$G_GRO.$G_BR.$_2_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_GRO_BR2                    ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_GRO_BR2                    ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_GRO_BR2                    ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_GRO_BR2                    ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_GRO_CYL                    ) = 2                       ! Type
prim.ref (                          $P_GRO_CYL                    ) = $M_GRO_BRF              ! Reference Marker
prim.ang (                3 ,       $P_GRO_CYL                    ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_GRO_CYL                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_GRO_CYL                    ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_GRO_CYL                    ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_GRO_CYL                    ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_GRO_CYL                    ) = $G_3D.$G_GRO.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_GRO_CYL                    ) = 1.50000000000000000E+00 ! [m] Height
prim.par (                3 ,       $P_GRO_CYL                    ) = 1.05000000000000004E+00 ! [m] Outer diameter
prim.par (                4 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_GRO_CYL                    ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_GRO_CYL                    ) = 1.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_GRO_CYL                    ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_GRO_CYL                    ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_GRO_CYL                    ) = 0.00000000000000000E+00 ! [-] Close geometry with


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_GRO_BR1                    ) = 186                     ! Type
force.from (                        $F_GRO_BR1                    ) = $M_STR_BR1              ! From Marker
force.to (                          $F_GRO_BR1                    ) = $M_GRO_BR1              ! To Marker
force.st.desc (           1 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           2 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           3 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           4 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           5 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           6 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.intern (                   $F_GRO_BR1                    ) = ''                      ! Internal state
force.disabled (                    $F_GRO_BR1                    ) = 0                       ! Disabled
force.par (               5 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [-] Axial direction
force.par (              10 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [N] Nominal force x
force.par (              11 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [N] Nominal force y
force.par (              12 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [N] Nominal force z
force.par (              13 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
force.par (              14 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
force.par (              15 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
force.par (              18 ,       $F_GRO_BR1                    ) = $G_FE.$G_BR.$G_GRO.$_C_A ! [N/m] Axial stiffness
force.par (              19 ,       $F_GRO_BR1                    ) = $G_FE.$G_BR.$G_GRO.$_C_R ! [N/m] Radial stiffness
force.par (              20 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
force.par (              21 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
force.par (              23 ,       $F_GRO_BR1                    ) = $G_FE.$G_BR.$G_GRO.$_D_A ! [Ns/m] Axial damping
force.par (              24 ,       $F_GRO_BR1                    ) = $G_FE.$G_BR.$G_GRO.$_D_R ! [Ns/m] Radial damping
force.par (              26 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
force.par (              27 ,       $F_GRO_BR1                    ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
force.par (              30 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
force.par (              31 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
force.par (              32 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
force.par (              33 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
force.par (              35 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
force.par (              36 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
force.par (              38 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
force.par (              39 ,       $F_GRO_BR1                    ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
force.par (              42 ,       $F_GRO_BR1                    ) = null                    ! [-] Input Function Set
force.attr.2d.pos.x (     1 ,       $F_GRO_BR1                    ) = 50
force.attr.2d.pos.y (     1 ,       $F_GRO_BR1                    ) = 40
force.attr.2d.ori (       1 ,       $F_GRO_BR1                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_GRO_BR1   ) = 50, 50
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_GRO_BR1   ) = 70, 57
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_GRO_BR1     ) = 50, 50
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_GRO_BR1     ) = 0, 23

force.type (                        $F_GRO_BR2                    ) = 186                     ! Type
force.from (                        $F_GRO_BR2                    ) = $M_STR_BR2              ! From Marker
force.to (                          $F_GRO_BR2                    ) = $M_GRO_BR2              ! To Marker
force.st.desc (           1 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           2 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           3 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           4 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           5 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           6 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.intern (                   $F_GRO_BR2                    ) = ''                      ! Internal state
force.disabled (                    $F_GRO_BR2                    ) = 0                       ! Disabled
force.par (               5 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [-] Axial direction
force.par (              10 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [N] Nominal force x
force.par (              11 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [N] Nominal force y
force.par (              12 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [N] Nominal force z
force.par (              13 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
force.par (              14 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
force.par (              15 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
force.par (              18 ,       $F_GRO_BR2                    ) = $G_FE.$G_BR.$G_GRO.$_C_A ! [N/m] Axial stiffness
force.par (              19 ,       $F_GRO_BR2                    ) = $G_FE.$G_BR.$G_GRO.$_C_R ! [N/m] Radial stiffness
force.par (              20 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
force.par (              21 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
force.par (              23 ,       $F_GRO_BR2                    ) = $G_FE.$G_BR.$G_GRO.$_D_A ! [Ns/m] Axial damping
force.par (              24 ,       $F_GRO_BR2                    ) = $G_FE.$G_BR.$G_GRO.$_D_R ! [Ns/m] Radial damping
force.par (              26 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
force.par (              27 ,       $F_GRO_BR2                    ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
force.par (              30 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
force.par (              31 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
force.par (              32 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
force.par (              33 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
force.par (              35 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
force.par (              36 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
force.par (              38 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
force.par (              39 ,       $F_GRO_BR2                    ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
force.par (              42 ,       $F_GRO_BR2                    ) = null                    ! [-] Input Function Set
force.attr.2d.pos.x (     1 ,       $F_GRO_BR2                    ) = -230
force.attr.2d.pos.y (     1 ,       $F_GRO_BR2                    ) = 40
force.attr.2d.ori (       1 ,       $F_GRO_BR2                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_GRO_BR2   ) = -230, -230
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_GRO_BR2   ) = 70, 57
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_GRO_BR2     ) = -230, -230
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_GRO_BR2     ) = 0, 23

force.type (                        $F_STR_BU1                    ) = 43                      ! Type
force.from (                        $F_STR_BU1                    ) = $M_Isys_INTERFACE_MFR_GEN_BU1 ! From Marker
force.to (                          $F_STR_BU1                    ) = $M_STR_BU1              ! To Marker
force.st.intern (                   $F_STR_BU1                    ) = ''                      ! Internal state
force.disabled (                    $F_STR_BU1                    ) = 0                       ! Disabled
force.par (               1 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [N] Nominal force in x
force.par (               2 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [N] Nominal force in y
force.par (               3 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [N] Nominal force in z
force.par (               4 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in al
force.par (               5 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in be
force.par (               6 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in ga
force.par (               7 ,       $F_STR_BU1                    ) = $G_FE.$G_BU.$G_STR.$_C_X ! [N/m] Transl. stiffness in x
force.par (               8 ,       $F_STR_BU1                    ) = $G_FE.$G_BU.$G_STR.$_C_Y ! [N/m] Transl. stiffness in y
force.par (               9 ,       $F_STR_BU1                    ) = $G_FE.$G_BU.$G_STR.$_C_Z ! [N/m] Transl. stiffness in z
force.par (              10 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in al
force.par (              11 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in be
force.par (              12 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in ga
force.par (              13 ,       $F_STR_BU1                    ) = $G_FE.$G_BU.$G_STR.$_D_X ! [Ns/m] Transl. damping in x
force.par (              14 ,       $F_STR_BU1                    ) = $G_FE.$G_BU.$G_STR.$_D_Y ! [Ns/m] Transl. damping in y
force.par (              15 ,       $F_STR_BU1                    ) = $G_FE.$G_BU.$G_STR.$_D_Z ! [Ns/m] Transl. damping in z
force.par (              16 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in al
force.par (              17 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in be
force.par (              18 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in ga
force.par (              19 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function F_c(x)
force.par (              20 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function F_c(y)
force.par (              21 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function F_c(z)
force.par (              22 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function T_c(al)
force.par (              23 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function T_c(be)
force.par (              24 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function T_c(ga)
force.par (              25 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function F_d(xd)
force.par (              26 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function F_d(yd)
force.par (              27 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function F_d(zd)
force.par (              28 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function T_d(ald)
force.par (              29 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function T_d(bed)
force.par (              30 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function T_d(gad)
force.par (              31 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [-] Mode of angle calculation
force.par (              33 ,       $F_STR_BU1                    ) = null                    ! [-] Expression for force in x
force.par (              34 ,       $F_STR_BU1                    ) = null                    ! [-] Expression for force in y
force.par (              35 ,       $F_STR_BU1                    ) = null                    ! [-] Expression for force in z
force.par (              36 ,       $F_STR_BU1                    ) = null                    ! [-] Expression for torque in al
force.par (              37 ,       $F_STR_BU1                    ) = null                    ! [-] Expression for torque in be
force.par (              38 ,       $F_STR_BU1                    ) = null                    ! [-] Expression for torque in ga
force.par (              39 ,       $F_STR_BU1                    ) = null                    ! [-] Input Function Set
force.par (              40 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in x
force.par (              41 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in y
force.par (              42 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in z
force.par (              43 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in al
force.par (              44 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in be
force.par (              45 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in ga
force.par (              46 ,       $F_STR_BU1                    ) = 0.00000000000000000E+00 ! [-] Output force in To Marker
force.attr.2d.pos.x (     1 ,       $F_STR_BU1                    ) = -270
force.attr.2d.pos.y (     1 ,       $F_STR_BU1                    ) = 120
force.attr.2d.ori (       1 ,       $F_STR_BU1                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU1   ) = -270, -270, -270, -270, -270, -270
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU1   ) = 210, 177, 167, 157, 147, 137
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU1     ) = -270, -270
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU1     ) = 100, 103

force.type (                        $F_STR_BU2                    ) = 43                      ! Type
force.from (                        $F_STR_BU2                    ) = $M_Isys_INTERFACE_MFR_GEN_BU2 ! From Marker
force.to (                          $F_STR_BU2                    ) = $M_STR_BU2              ! To Marker
force.st.intern (                   $F_STR_BU2                    ) = ''                      ! Internal state
force.disabled (                    $F_STR_BU2                    ) = 0                       ! Disabled
force.par (               1 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [N] Nominal force in x
force.par (               2 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [N] Nominal force in y
force.par (               3 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [N] Nominal force in z
force.par (               4 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in al
force.par (               5 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in be
force.par (               6 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in ga
force.par (               7 ,       $F_STR_BU2                    ) = $G_FE.$G_BU.$G_STR.$_C_X ! [N/m] Transl. stiffness in x
force.par (               8 ,       $F_STR_BU2                    ) = $G_FE.$G_BU.$G_STR.$_C_Y ! [N/m] Transl. stiffness in y
force.par (               9 ,       $F_STR_BU2                    ) = $G_FE.$G_BU.$G_STR.$_C_Z ! [N/m] Transl. stiffness in z
force.par (              10 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in al
force.par (              11 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in be
force.par (              12 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in ga
force.par (              13 ,       $F_STR_BU2                    ) = $G_FE.$G_BU.$G_STR.$_D_X ! [Ns/m] Transl. damping in x
force.par (              14 ,       $F_STR_BU2                    ) = $G_FE.$G_BU.$G_STR.$_D_Y ! [Ns/m] Transl. damping in y
force.par (              15 ,       $F_STR_BU2                    ) = $G_FE.$G_BU.$G_STR.$_D_Z ! [Ns/m] Transl. damping in z
force.par (              16 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in al
force.par (              17 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in be
force.par (              18 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in ga
force.par (              19 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function F_c(x)
force.par (              20 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function F_c(y)
force.par (              21 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function F_c(z)
force.par (              22 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function T_c(al)
force.par (              23 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function T_c(be)
force.par (              24 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function T_c(ga)
force.par (              25 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function F_d(xd)
force.par (              26 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function F_d(yd)
force.par (              27 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function F_d(zd)
force.par (              28 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function T_d(ald)
force.par (              29 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function T_d(bed)
force.par (              30 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function T_d(gad)
force.par (              31 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [-] Mode of angle calculation
force.par (              33 ,       $F_STR_BU2                    ) = null                    ! [-] Expression for force in x
force.par (              34 ,       $F_STR_BU2                    ) = null                    ! [-] Expression for force in y
force.par (              35 ,       $F_STR_BU2                    ) = null                    ! [-] Expression for force in z
force.par (              36 ,       $F_STR_BU2                    ) = null                    ! [-] Expression for torque in al
force.par (              37 ,       $F_STR_BU2                    ) = null                    ! [-] Expression for torque in be
force.par (              38 ,       $F_STR_BU2                    ) = null                    ! [-] Expression for torque in ga
force.par (              39 ,       $F_STR_BU2                    ) = null                    ! [-] Input Function Set
force.par (              40 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in x
force.par (              41 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in y
force.par (              42 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in z
force.par (              43 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in al
force.par (              44 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in be
force.par (              45 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in ga
force.par (              46 ,       $F_STR_BU2                    ) = 0.00000000000000000E+00 ! [-] Output force in To Marker
force.attr.2d.pos.x (     1 ,       $F_STR_BU2                    ) = -200
force.attr.2d.pos.y (     1 ,       $F_STR_BU2                    ) = 120
force.attr.2d.ori (       1 ,       $F_STR_BU2                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU2   ) = -200, -200
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU2   ) = 210, 137
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU2     ) = -200, -200
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU2     ) = 100, 103

force.type (                        $F_STR_BU3                    ) = 43                      ! Type
force.from (                        $F_STR_BU3                    ) = $M_Isys_INTERFACE_MFR_GEN_BU3 ! From Marker
force.to (                          $F_STR_BU3                    ) = $M_STR_BU3              ! To Marker
force.st.intern (                   $F_STR_BU3                    ) = ''                      ! Internal state
force.disabled (                    $F_STR_BU3                    ) = 0                       ! Disabled
force.par (               1 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [N] Nominal force in x
force.par (               2 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [N] Nominal force in y
force.par (               3 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [N] Nominal force in z
force.par (               4 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in al
force.par (               5 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in be
force.par (               6 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in ga
force.par (               7 ,       $F_STR_BU3                    ) = $G_FE.$G_BU.$G_STR.$_C_X ! [N/m] Transl. stiffness in x
force.par (               8 ,       $F_STR_BU3                    ) = $G_FE.$G_BU.$G_STR.$_C_Y ! [N/m] Transl. stiffness in y
force.par (               9 ,       $F_STR_BU3                    ) = $G_FE.$G_BU.$G_STR.$_C_Z ! [N/m] Transl. stiffness in z
force.par (              10 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in al
force.par (              11 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in be
force.par (              12 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in ga
force.par (              13 ,       $F_STR_BU3                    ) = $G_FE.$G_BU.$G_STR.$_D_X ! [Ns/m] Transl. damping in x
force.par (              14 ,       $F_STR_BU3                    ) = $G_FE.$G_BU.$G_STR.$_D_Y ! [Ns/m] Transl. damping in y
force.par (              15 ,       $F_STR_BU3                    ) = $G_FE.$G_BU.$G_STR.$_D_Z ! [Ns/m] Transl. damping in z
force.par (              16 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in al
force.par (              17 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in be
force.par (              18 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in ga
force.par (              19 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function F_c(x)
force.par (              20 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function F_c(y)
force.par (              21 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function F_c(z)
force.par (              22 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function T_c(al)
force.par (              23 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function T_c(be)
force.par (              24 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function T_c(ga)
force.par (              25 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function F_d(xd)
force.par (              26 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function F_d(yd)
force.par (              27 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function F_d(zd)
force.par (              28 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function T_d(ald)
force.par (              29 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function T_d(bed)
force.par (              30 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function T_d(gad)
force.par (              31 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [-] Mode of angle calculation
force.par (              33 ,       $F_STR_BU3                    ) = null                    ! [-] Expression for force in x
force.par (              34 ,       $F_STR_BU3                    ) = null                    ! [-] Expression for force in y
force.par (              35 ,       $F_STR_BU3                    ) = null                    ! [-] Expression for force in z
force.par (              36 ,       $F_STR_BU3                    ) = null                    ! [-] Expression for torque in al
force.par (              37 ,       $F_STR_BU3                    ) = null                    ! [-] Expression for torque in be
force.par (              38 ,       $F_STR_BU3                    ) = null                    ! [-] Expression for torque in ga
force.par (              39 ,       $F_STR_BU3                    ) = null                    ! [-] Input Function Set
force.par (              40 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in x
force.par (              41 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in y
force.par (              42 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in z
force.par (              43 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in al
force.par (              44 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in be
force.par (              45 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in ga
force.par (              46 ,       $F_STR_BU3                    ) = 0.00000000000000000E+00 ! [-] Output force in To Marker
force.attr.2d.pos.x (     1 ,       $F_STR_BU3                    ) = 20
force.attr.2d.pos.y (     1 ,       $F_STR_BU3                    ) = 120
force.attr.2d.ori (       1 ,       $F_STR_BU3                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU3   ) = 20, 20
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU3   ) = 210, 137
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU3     ) = 20, 20
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU3     ) = 100, 103

force.type (                        $F_STR_BU4                    ) = 43                      ! Type
force.from (                        $F_STR_BU4                    ) = $M_Isys_INTERFACE_MFR_GEN_BU4 ! From Marker
force.to (                          $F_STR_BU4                    ) = $M_STR_BU4              ! To Marker
force.st.intern (                   $F_STR_BU4                    ) = ''                      ! Internal state
force.disabled (                    $F_STR_BU4                    ) = 0                       ! Disabled
force.par (               1 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [N] Nominal force in x
force.par (               2 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [N] Nominal force in y
force.par (               3 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [N] Nominal force in z
force.par (               4 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in al
force.par (               5 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in be
force.par (               6 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in ga
force.par (               7 ,       $F_STR_BU4                    ) = $G_FE.$G_BU.$G_STR.$_C_X ! [N/m] Transl. stiffness in x
force.par (               8 ,       $F_STR_BU4                    ) = $G_FE.$G_BU.$G_STR.$_C_Y ! [N/m] Transl. stiffness in y
force.par (               9 ,       $F_STR_BU4                    ) = $G_FE.$G_BU.$G_STR.$_C_Z ! [N/m] Transl. stiffness in z
force.par (              10 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in al
force.par (              11 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in be
force.par (              12 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in ga
force.par (              13 ,       $F_STR_BU4                    ) = $G_FE.$G_BU.$G_STR.$_D_X ! [Ns/m] Transl. damping in x
force.par (              14 ,       $F_STR_BU4                    ) = $G_FE.$G_BU.$G_STR.$_D_Y ! [Ns/m] Transl. damping in y
force.par (              15 ,       $F_STR_BU4                    ) = $G_FE.$G_BU.$G_STR.$_D_Z ! [Ns/m] Transl. damping in z
force.par (              16 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in al
force.par (              17 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in be
force.par (              18 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in ga
force.par (              19 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function F_c(x)
force.par (              20 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function F_c(y)
force.par (              21 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function F_c(z)
force.par (              22 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function T_c(al)
force.par (              23 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function T_c(be)
force.par (              24 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function T_c(ga)
force.par (              25 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function F_d(xd)
force.par (              26 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function F_d(yd)
force.par (              27 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function F_d(zd)
force.par (              28 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function T_d(ald)
force.par (              29 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function T_d(bed)
force.par (              30 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function T_d(gad)
force.par (              31 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [-] Mode of angle calculation
force.par (              33 ,       $F_STR_BU4                    ) = null                    ! [-] Expression for force in x
force.par (              34 ,       $F_STR_BU4                    ) = null                    ! [-] Expression for force in y
force.par (              35 ,       $F_STR_BU4                    ) = null                    ! [-] Expression for force in z
force.par (              36 ,       $F_STR_BU4                    ) = null                    ! [-] Expression for torque in al
force.par (              37 ,       $F_STR_BU4                    ) = null                    ! [-] Expression for torque in be
force.par (              38 ,       $F_STR_BU4                    ) = null                    ! [-] Expression for torque in ga
force.par (              39 ,       $F_STR_BU4                    ) = null                    ! [-] Input Function Set
force.par (              40 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in x
force.par (              41 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in y
force.par (              42 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [m] Nominal displacement in z
force.par (              43 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in al
force.par (              44 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in be
force.par (              45 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [rad] Nominal angle in ga
force.par (              46 ,       $F_STR_BU4                    ) = 0.00000000000000000E+00 ! [-] Output force in To Marker
force.attr.2d.pos.x (     1 ,       $F_STR_BU4                    ) = 100
force.attr.2d.pos.y (     1 ,       $F_STR_BU4                    ) = 120
force.attr.2d.ori (       1 ,       $F_STR_BU4                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU4   ) = 100, 100, 100, 100, 100, 100
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU4   ) = 210, 177, 167, 157, 147, 137
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_STR_BU4     ) = 100, 100
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_STR_BU4     ) = 100, 103

force.type (                        $F_GEN_TRQ                    ) = 110                     ! Type
force.from (                        $F_GEN_TRQ                    ) = $M_STR_TRQ              ! From Marker
force.to (                          $F_GEN_TRQ                    ) = $M_GRO_TRQ              ! To Marker
force.st.intern (                   $F_GEN_TRQ                    ) = ''                      ! Internal state
force.disabled (                    $F_GEN_TRQ                    ) = 0                       ! Disabled
force.par (               1 ,       $F_GEN_TRQ                    ) = $C_INTERFACE_CTRL_GEN_TRQ ! [-] Input Control Element 1
force.par (               2 ,       $F_GEN_TRQ                    ) = { 1 }                   ! [-] -> Output Value u1
force.par (               3 ,       $F_GEN_TRQ                    ) = null                    ! [-] Input Control Element 2
force.par (               5 ,       $F_GEN_TRQ                    ) = 2.00000000000000000E+00 ! [-] Output type
force.par (               6 ,       $F_GEN_TRQ                    ) = 1.00000000000000000E+00 ! [-] Axis of force
force.par (               7 ,       $F_GEN_TRQ                    ) = 1.00000000000000000E+00 ! [-] Axis of torque
force.par (               8 ,       $F_GEN_TRQ                    ) = -1.00000000000000000E+00 ! [Nm] K: Drive constant L=K*(u1+u2)
force.par (               9 ,       $F_GEN_TRQ                    ) = 1.00000000000000000E+00 ! [m⁻¹] P: Drive constant F=P*L
force.attr.2d.pos.x (     1 ,       $F_GEN_TRQ                    ) = -140
force.attr.2d.pos.y (     1 ,       $F_GEN_TRQ                    ) = 40
force.attr.2d.ori (       1 ,       $F_GEN_TRQ                    ) = 270
force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_GEN_TRQ   ) = -140, -140
force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_GEN_TRQ   ) = 70, 57
force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_GEN_TRQ     ) = -140, -140
force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_GEN_TRQ     ) = 0, 23

!**********************************************************************
! Control Elements
!**********************************************************************
control.type (                      $C_INTERFACE_CTRL_GEN_TRQ     ) = 165                     ! Type
control.st.intern (                 $C_INTERFACE_CTRL_GEN_TRQ     ) = ''                      ! Internal State
control.par (             2 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = $M_Isys                 ! [-] From Marker M_i
control.par (             3 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = $M_Isys                 ! [-] To Marker M_j
control.par (            10 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 1.00000000000000000E+00 ! [-]  Ch 1: Measurement type
control.par (            11 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 1: Meas. reference
control.par (            12 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 1.00000000000000000E+00 ! [-]  Ch 1: Measurement axis
control.par (            13 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 1: Gain factor C
control.par (            14 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = null                    ! [-]  Ch 1: Disturb. Ctrl. Element
control.par (            15 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 1: -> Output value u
control.par (            17 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 1.00000000000000000E+00 ! [-]  Ch 2: Measurement type
control.par (            18 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 2: Meas. reference
control.par (            19 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 1.00000000000000000E+00 ! [-]  Ch 2: Measurement axis
control.par (            20 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 2: Gain factor C
control.par (            21 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = null                    ! [-]  Ch 2: Disturb. Ctrl. Element
control.par (            22 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 2: -> Output value u
control.par (            24 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 1.00000000000000000E+00 ! [-]  Ch 3: Measurement type
control.par (            25 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 3: Meas. reference
control.par (            26 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 1.00000000000000000E+00 ! [-]  Ch 3: Measurement axis
control.par (            27 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 3: Gain factor C
control.par (            28 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = null                    ! [-]  Ch 3: Disturb. Ctrl. Element
control.par (            29 ,       $C_INTERFACE_CTRL_GEN_TRQ     ) = 0.00000000000000000E+00 ! [-]  Ch 3: -> Output value u

!**********************************************************************
! Connection Elements
!**********************************************************************
connect.type (                      $CTN_STR                      ) = 63                      ! Type
connect.st.pos (          1 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          2 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          3 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          4 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          5 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          6 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Position states
connect.st.vel (          1 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          2 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          3 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          4 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          5 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          6 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.equi (         1 ,       $CTN_STR                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         2 ,       $CTN_STR                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         3 ,       $CTN_STR                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         4 ,       $CTN_STR                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         5 ,       $CTN_STR                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         6 ,       $CTN_STR                      ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_STR                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          2 ,       $CTN_STR                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          3 ,       $CTN_STR                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          4 ,       $CTN_STR                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          5 ,       $CTN_STR                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          6 ,       $CTN_STR                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.force (        1 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_STR                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.par (             2 ,   2 , $CTN_STR                      ) = $M_Isys_INTERFACE_MFR_GEN ! [-] From Marker
connect.par (             2 ,   3 , $CTN_STR                      ) = $M_STR_JNT              ! [-] To Marker
connect.par (             3 ,   3 , $CTN_STR                      ) = 0.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             3 ,   5 , $CTN_STR                      ) = 0.00000000000000000E+00 ! [-] Tilting
connect.par (             3 ,   7 , $CTN_STR                      ) = 0.00000000000000000E+00 ! [-] Translation in x
connect.par (             3 ,   8 , $CTN_STR                      ) = 0.00000000000000000E+00 ! [-] Translation in y
connect.par (             3 ,   9 , $CTN_STR                      ) = 0.00000000000000000E+00 ! [-] Translation in z
connect.attr.2d.pos.x (   1 ,       $CTN_STR                      ) = -90
connect.attr.2d.pos.y (   1 ,       $CTN_STR                      ) = 140
connect.attr.2d.ori (     1 ,       $CTN_STR                      ) = 270
connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_STR   ) = -90, -90
connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_STR   ) = 210, 157
connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_STR     ) = -90, -90
connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_STR     ) = 100, 123

connect.type (                      $CTN_GRO                      ) = 63                      ! Type
connect.st.pos (          1 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          2 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          3 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          4 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          5 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Position states
connect.st.pos (          6 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Position states
connect.st.vel (          1 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          2 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          3 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          4 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          5 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.vel (          6 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Velocity states
connect.st.equi (         1 ,       $CTN_GRO                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         2 ,       $CTN_GRO                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         3 ,       $CTN_GRO                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         4 ,       $CTN_GRO                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         5 ,       $CTN_GRO                      ) = 0                       ! Equilibrium calculation flags
connect.st.equi (         6 ,       $CTN_GRO                      ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_GRO                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          2 ,       $CTN_GRO                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          3 ,       $CTN_GRO                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          4 ,       $CTN_GRO                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          5 ,       $CTN_GRO                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.lin (          6 ,       $CTN_GRO                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.force (        1 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_GRO                      ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.par (             2 ,   2 , $CTN_GRO                      ) = $M_STR_GRO              ! [-] From Marker
connect.par (             2 ,   3 , $CTN_GRO                      ) = $M_GRO_STR              ! [-] To Marker
connect.par (             3 ,   3 , $CTN_GRO                      ) = 0.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             3 ,   5 , $CTN_GRO                      ) = 0.00000000000000000E+00 ! [-] Tilting
connect.par (             3 ,   7 , $CTN_GRO                      ) = 0.00000000000000000E+00 ! [-] Translation in x
connect.par (             3 ,   8 , $CTN_GRO                      ) = 0.00000000000000000E+00 ! [-] Translation in y
connect.par (             3 ,   9 , $CTN_GRO                      ) = 0.00000000000000000E+00 ! [-] Translation in z
connect.attr.2d.pos.x (   1 ,       $CTN_GRO                      ) = -90
connect.attr.2d.pos.y (   1 ,       $CTN_GRO                      ) = 30
connect.attr.2d.ori (     1 ,       $CTN_GRO                      ) = 270
connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_GRO   ) = -90, -90
connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_GRO   ) = 70, 47
connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_GRO     ) = -90, -90
connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_GRO     ) = 0, 13

!**********************************************************************
! Initial Conditions
!**********************************************************************
inicon.type (                       $IC_STR                       ) = 2                       ! Type
inicon.par (              1 ,       $IC_STR                       ) = 0.00000000000000000E+00 ! [-] General
inicon.par (              1 ,   2 , $IC_STR                       ) = $CTN_STR                ! [-] Connection
inicon.par (              2 ,       $IC_STR                       ) = 0.00000000000000000E+00 ! [-] States
inicon.par (              2 ,   1 , $IC_STR                       ) = 0.00000000000000000E+00 ! [-] Rotation alpha
inicon.par (              2 ,   1 ,   1 , $IC_STR                 ) = 3.00000000000000000E+00 ! [-] Condition
inicon.par (              2 ,   1 ,   2 , $IC_STR                 ) = 0.00000000000000000E+00 ! [rad] Position
inicon.par (              2 ,   1 ,   3 , $IC_STR                 ) = 0.00000000000000000E+00 ! [rad/s] Velocity
inicon.par (              2 ,   2 , $IC_STR                       ) = 0.00000000000000000E+00 ! [-] Tilting beta
inicon.par (              2 ,   2 ,   1 , $IC_STR                 ) = 3.00000000000000000E+00 ! [-] Condition
inicon.par (              2 ,   2 ,   2 , $IC_STR                 ) = 0.00000000000000000E+00 ! [rad] Position
inicon.par (              2 ,   2 ,   3 , $IC_STR                 ) = 0.00000000000000000E+00 ! [rad/s] Velocity
inicon.par (              2 ,   3 , $IC_STR                       ) = 0.00000000000000000E+00 ! [-] Tilting gamma
inicon.par (              2 ,   3 ,   1 , $IC_STR                 ) = 3.00000000000000000E+00 ! [-] Condition
inicon.par (              2 ,   3 ,   2 , $IC_STR                 ) = 0.00000000000000000E+00 ! [rad] Position
inicon.par (              2 ,   3 ,   3 , $IC_STR                 ) = 0.00000000000000000E+00 ! [rad/s] Velocity
inicon.par (              2 ,   4 , $IC_STR                       ) = 0.00000000000000000E+00 ! [-] Translation in x
inicon.par (              2 ,   4 ,   1 , $IC_STR                 ) = 3.00000000000000000E+00 ! [-] Condition
inicon.par (              2 ,   4 ,   2 , $IC_STR                 ) = 0.00000000000000000E+00 ! [m] Position
inicon.par (              2 ,   4 ,   3 , $IC_STR                 ) = 0.00000000000000000E+00 ! [m/s] Velocity
inicon.par (              2 ,   5 , $IC_STR                       ) = 0.00000000000000000E+00 ! [-] Translation in y
inicon.par (              2 ,   5 ,   1 , $IC_STR                 ) = 3.00000000000000000E+00 ! [-] Condition
inicon.par (              2 ,   5 ,   2 , $IC_STR                 ) = 0.00000000000000000E+00 ! [m] Position
inicon.par (              2 ,   5 ,   3 , $IC_STR                 ) = 0.00000000000000000E+00 ! [m/s] Velocity
inicon.par (              2 ,   6 , $IC_STR                       ) = 0.00000000000000000E+00 ! [-] Translation in z
inicon.par (              2 ,   6 ,   1 , $IC_STR                 ) = 3.00000000000000000E+00 ! [-] Condition
inicon.par (              2 ,   6 ,   2 , $IC_STR                 ) = 0.00000000000000000E+00 ! [m] Position
inicon.par (              2 ,   6 ,   3 , $IC_STR                 ) = 0.00000000000000000E+00 ! [m/s] Velocity

!**********************************************************************
! Input Functions
!**********************************************************************
ifctn.x (                 1 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! X values
ifctn.x (                 2 ,       $I_GEN_TRQ_step               ) = 1.00000000000000000E+00 ! X values
ifctn.x (                 3 ,       $I_GEN_TRQ_step               ) = 2.00000000000000000E+00 ! X values
ifctn.x (                 4 ,       $I_GEN_TRQ_step               ) = 3.00000000000000000E+00 ! X values
ifctn.x (                 5 ,       $I_GEN_TRQ_step               ) = 4.00000000000000000E+00 ! X values
ifctn.x (                 6 ,       $I_GEN_TRQ_step               ) = 5.00000000000000000E+00 ! X values
ifctn.x (                 7 ,       $I_GEN_TRQ_step               ) = 7.01622358500000018E+01 ! X values
ifctn.x (                 8 ,       $I_GEN_TRQ_step               ) = 9.12109099999999984E+01 ! X values
ifctn.x (                 9 ,       $I_GEN_TRQ_step               ) = 9.39911962099999982E+01 ! X values
ifctn.x (                10 ,       $I_GEN_TRQ_step               ) = 9.67714824199999981E+01 ! X values
ifctn.x (                11 ,       $I_GEN_TRQ_step               ) = 9.95517686299999980E+01 ! X values
ifctn.x (                12 ,       $I_GEN_TRQ_step               ) = 1.02332054839999998E+02 ! X values
ifctn.x (                13 ,       $I_GEN_TRQ_step               ) = 1.05112341000000001E+02 ! X values
ifctn.x (                14 ,       $I_GEN_TRQ_step               ) = 1.07892627250000004E+02 ! X values
ifctn.x (                15 ,       $I_GEN_TRQ_step               ) = 1.10672913500000007E+02 ! X values
ifctn.x (                16 ,       $I_GEN_TRQ_step               ) = 1.13453199670000004E+02 ! X values
ifctn.x (                17 ,       $I_GEN_TRQ_step               ) = 1.16233485900000005E+02 ! X values
ifctn.x (                18 ,       $I_GEN_TRQ_step               ) = 1.19013772090000003E+02 ! X values
ifctn.x (                19 ,       $I_GEN_TRQ_step               ) = 1.21680499999999995E+02 ! X values
ifctn.x (                20 ,       $I_GEN_TRQ_step               ) = 1.24722512499999993E+02 ! X values
ifctn.x (                21 ,       $I_GEN_TRQ_step               ) = 1.27764525000000006E+02 ! X values
ifctn.x (                22 ,       $I_GEN_TRQ_step               ) = 1.30806537499999990E+02 ! X values
ifctn.x (                23 ,       $I_GEN_TRQ_step               ) = 1.33848549999999989E+02 ! X values
ifctn.x (                24 ,       $I_GEN_TRQ_step               ) = 1.36890562499999987E+02 ! X values
ifctn.x (                25 ,       $I_GEN_TRQ_step               ) = 1.39932575000000014E+02 ! X values
ifctn.x (                26 ,       $I_GEN_TRQ_step               ) = 1.42974587500000013E+02 ! X values
ifctn.x (                27 ,       $I_GEN_TRQ_step               ) = 1.46016600000000011E+02 ! X values
ifctn.x (                28 ,       $I_GEN_TRQ_step               ) = 1.49058612500000010E+02 ! X values
ifctn.x (                29 ,       $I_GEN_TRQ_step               ) = 1.52100625000000008E+02 ! X values
ifctn.y (                 1 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 2 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 3 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 4 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 5 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 6 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 7 ,       $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! Y values
ifctn.y (                 8 ,       $I_GEN_TRQ_step               ) = 1.94032986799999999E+04 ! Y values
ifctn.y (                 9 ,       $I_GEN_TRQ_step               ) = 2.06042279100000014E+04 ! Y values
ifctn.y (                10 ,       $I_GEN_TRQ_step               ) = 2.18412142700000004E+04 ! Y values
ifctn.y (                11 ,       $I_GEN_TRQ_step               ) = 2.31142577400000009E+04 ! Y values
ifctn.y (                12 ,       $I_GEN_TRQ_step               ) = 2.44233583299999991E+04 ! Y values
ifctn.y (                13 ,       $I_GEN_TRQ_step               ) = 2.57685160399999986E+04 ! Y values
ifctn.y (                14 ,       $I_GEN_TRQ_step               ) = 2.71497308599999997E+04 ! Y values
ifctn.y (                15 ,       $I_GEN_TRQ_step               ) = 2.85670027999999984E+04 ! Y values
ifctn.y (                16 ,       $I_GEN_TRQ_step               ) = 3.00203318599999984E+04 ! Y values
ifctn.y (                17 ,       $I_GEN_TRQ_step               ) = 3.15097180300000000E+04 ! Y values
ifctn.y (                18 ,       $I_GEN_TRQ_step               ) = 3.30351613199999993E+04 ! Y values
ifctn.y (                19 ,       $I_GEN_TRQ_step               ) = 4.35288316500000001E+04 ! Y values
ifctn.y (                20 ,       $I_GEN_TRQ_step               ) = 4.24671528299999991E+04 ! Y values
ifctn.y (                21 ,       $I_GEN_TRQ_step               ) = 4.14560301499999987E+04 ! Y values
ifctn.y (                22 ,       $I_GEN_TRQ_step               ) = 4.04919364199999982E+04 ! Y values
ifctn.y (                23 ,       $I_GEN_TRQ_step               ) = 3.95716651399999973E+04 ! Y values
ifctn.y (                24 ,       $I_GEN_TRQ_step               ) = 3.86922948000000033E+04 ! Y values
ifctn.y (                25 ,       $I_GEN_TRQ_step               ) = 3.78511579599999968E+04 ! Y values
ifctn.y (                26 ,       $I_GEN_TRQ_step               ) = 3.70458141699999978E+04 ! Y values
ifctn.y (                27 ,       $I_GEN_TRQ_step               ) = 3.62740263800000030E+04 ! Y values
ifctn.y (                28 ,       $I_GEN_TRQ_step               ) = 3.55337401299999983E+04 ! Y values
ifctn.y (                29 ,       $I_GEN_TRQ_step               ) = 3.48230653200000015E+04 ! Y values
ifctn.intpol.type (                 $I_GEN_TRQ_step               ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_GEN_TRQ_step               ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_GEN_TRQ_step               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_GEN_TRQ_step               ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_GEN_TRQ_step               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_GEN_TRQ_step         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_GEN_TRQ_step         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_GEN_TRQ_step         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! X values
ifctn.x (                 2 ,       $I_GEN_TRQ_smooth             ) = 2.00000000000000000E+01 ! X values
ifctn.x (                 3 ,       $I_GEN_TRQ_smooth             ) = 3.00000000000000000E+01 ! X values
ifctn.x (                 4 ,       $I_GEN_TRQ_smooth             ) = 4.00000000000000000E+01 ! X values
ifctn.x (                 5 ,       $I_GEN_TRQ_smooth             ) = 4.50000000000000000E+01 ! X values
ifctn.x (                 6 ,       $I_GEN_TRQ_smooth             ) = 5.50000000000000000E+01 ! X values
ifctn.x (                 7 ,       $I_GEN_TRQ_smooth             ) = 6.00000000000000000E+01 ! X values
ifctn.x (                 8 ,       $I_GEN_TRQ_smooth             ) = 6.10000000000000000E+01 ! X values
ifctn.x (                 9 ,       $I_GEN_TRQ_smooth             ) = 6.20000000000000000E+01 ! X values
ifctn.x (                10 ,       $I_GEN_TRQ_smooth             ) = 6.30000000000000000E+01 ! X values
ifctn.x (                11 ,       $I_GEN_TRQ_smooth             ) = 6.37999999999999972E+01 ! X values
ifctn.x (                12 ,       $I_GEN_TRQ_smooth             ) = 6.45000000000000000E+01 ! X values
ifctn.x (                13 ,       $I_GEN_TRQ_smooth             ) = 6.67000000000000028E+01 ! X values
ifctn.x (                14 ,       $I_GEN_TRQ_smooth             ) = 6.90000000000000000E+01 ! X values
ifctn.x (                15 ,       $I_GEN_TRQ_smooth             ) = 7.00000000000000000E+01 ! X values
ifctn.x (                16 ,       $I_GEN_TRQ_smooth             ) = 7.20000000000000000E+01 ! X values
ifctn.x (                17 ,       $I_GEN_TRQ_smooth             ) = 7.40000000000000000E+01 ! X values
ifctn.x (                18 ,       $I_GEN_TRQ_smooth             ) = 7.80000000000000000E+01 ! X values
ifctn.x (                19 ,       $I_GEN_TRQ_smooth             ) = 9.12109099999999984E+01 ! X values
ifctn.x (                20 ,       $I_GEN_TRQ_smooth             ) = 9.39911962099999982E+01 ! X values
ifctn.x (                21 ,       $I_GEN_TRQ_smooth             ) = 9.67714824199999981E+01 ! X values
ifctn.x (                22 ,       $I_GEN_TRQ_smooth             ) = 9.95517686299999980E+01 ! X values
ifctn.x (                23 ,       $I_GEN_TRQ_smooth             ) = 1.02332054839999998E+02 ! X values
ifctn.x (                24 ,       $I_GEN_TRQ_smooth             ) = 1.05112341000000001E+02 ! X values
ifctn.x (                25 ,       $I_GEN_TRQ_smooth             ) = 1.07892627250000004E+02 ! X values
ifctn.x (                26 ,       $I_GEN_TRQ_smooth             ) = 1.10672913500000007E+02 ! X values
ifctn.x (                27 ,       $I_GEN_TRQ_smooth             ) = 1.13453199999999995E+02 ! X values
ifctn.x (                28 ,       $I_GEN_TRQ_smooth             ) = 1.16233485999999999E+02 ! X values
ifctn.x (                29 ,       $I_GEN_TRQ_smooth             ) = 1.19013772000000003E+02 ! X values
ifctn.x (                30 ,       $I_GEN_TRQ_smooth             ) = 1.21680499999999995E+02 ! X values
ifctn.x (                31 ,       $I_GEN_TRQ_smooth             ) = 1.22500000000000000E+02 ! X values
ifctn.x (                32 ,       $I_GEN_TRQ_smooth             ) = 1.23500000000000000E+02 ! X values
ifctn.x (                33 ,       $I_GEN_TRQ_smooth             ) = 1.24722513000000006E+02 ! X values
ifctn.x (                34 ,       $I_GEN_TRQ_smooth             ) = 1.25500000000000000E+02 ! X values
ifctn.x (                35 ,       $I_GEN_TRQ_smooth             ) = 1.26500000000000000E+02 ! X values
ifctn.x (                36 ,       $I_GEN_TRQ_smooth             ) = 1.27764525000000006E+02 ! X values
ifctn.x (                37 ,       $I_GEN_TRQ_smooth             ) = 1.28500000000000000E+02 ! X values
ifctn.x (                38 ,       $I_GEN_TRQ_smooth             ) = 1.29500000000000000E+02 ! X values
ifctn.x (                39 ,       $I_GEN_TRQ_smooth             ) = 1.30806537999999989E+02 ! X values
ifctn.x (                40 ,       $I_GEN_TRQ_smooth             ) = 1.32000000000000000E+02 ! X values
ifctn.x (                41 ,       $I_GEN_TRQ_smooth             ) = 1.33848549999999989E+02 ! X values
ifctn.x (                42 ,       $I_GEN_TRQ_smooth             ) = 1.36890562999999986E+02 ! X values
ifctn.x (                43 ,       $I_GEN_TRQ_smooth             ) = 1.39932575000000014E+02 ! X values
ifctn.x (                44 ,       $I_GEN_TRQ_smooth             ) = 1.42974588000000011E+02 ! X values
ifctn.x (                45 ,       $I_GEN_TRQ_smooth             ) = 1.46016600000000011E+02 ! X values
ifctn.x (                46 ,       $I_GEN_TRQ_smooth             ) = 1.49058613000000008E+02 ! X values
ifctn.x (                47 ,       $I_GEN_TRQ_smooth             ) = 1.52100625000000008E+02 ! X values
ifctn.x (                48 ,       $I_GEN_TRQ_smooth             ) = 1.60000000000000000E+02 ! X values
ifctn.x (                49 ,       $I_GEN_TRQ_smooth             ) = 1.70000000000000000E+02 ! X values
ifctn.x (                50 ,       $I_GEN_TRQ_smooth             ) = 2.00000000000000000E+02 ! X values
ifctn.y (                 1 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 2 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 3 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 4 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 5 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 6 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 7 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+01 ! Y values
ifctn.y (                 8 ,       $I_GEN_TRQ_smooth             ) = 2.00000000000000000E+01 ! Y values
ifctn.y (                 9 ,       $I_GEN_TRQ_smooth             ) = 4.00000000000000000E+01 ! Y values
ifctn.y (                10 ,       $I_GEN_TRQ_smooth             ) = 8.00000000000000000E+01 ! Y values
ifctn.y (                11 ,       $I_GEN_TRQ_smooth             ) = 1.40000000000000000E+02 ! Y values
ifctn.y (                12 ,       $I_GEN_TRQ_smooth             ) = 2.20000000000000000E+02 ! Y values
ifctn.y (                13 ,       $I_GEN_TRQ_smooth             ) = 6.00000000000000000E+02 ! Y values
ifctn.y (                14 ,       $I_GEN_TRQ_smooth             ) = 1.20000000000000000E+03 ! Y values
ifctn.y (                15 ,       $I_GEN_TRQ_smooth             ) = 1.55000000000000000E+03 ! Y values
ifctn.y (                16 ,       $I_GEN_TRQ_smooth             ) = 2.45000000000000000E+03 ! Y values
ifctn.y (                17 ,       $I_GEN_TRQ_smooth             ) = 3.80000000000000000E+03 ! Y values
ifctn.y (                18 ,       $I_GEN_TRQ_smooth             ) = 7.22508589699999993E+03 ! Y values
ifctn.y (                19 ,       $I_GEN_TRQ_smooth             ) = 1.94032986799999999E+04 ! Y values
ifctn.y (                20 ,       $I_GEN_TRQ_smooth             ) = 2.06042279100000014E+04 ! Y values
ifctn.y (                21 ,       $I_GEN_TRQ_smooth             ) = 2.18412142700000004E+04 ! Y values
ifctn.y (                22 ,       $I_GEN_TRQ_smooth             ) = 2.31142577400000009E+04 ! Y values
ifctn.y (                23 ,       $I_GEN_TRQ_smooth             ) = 2.44233583299999991E+04 ! Y values
ifctn.y (                24 ,       $I_GEN_TRQ_smooth             ) = 2.57685160399999986E+04 ! Y values
ifctn.y (                25 ,       $I_GEN_TRQ_smooth             ) = 2.71497308599999997E+04 ! Y values
ifctn.y (                26 ,       $I_GEN_TRQ_smooth             ) = 2.85670027999999984E+04 ! Y values
ifctn.y (                27 ,       $I_GEN_TRQ_smooth             ) = 3.05000000000000000E+04 ! Y values
ifctn.y (                28 ,       $I_GEN_TRQ_smooth             ) = 3.30000000000000000E+04 ! Y values
ifctn.y (                29 ,       $I_GEN_TRQ_smooth             ) = 3.60000000000000000E+04 ! Y values
ifctn.y (                30 ,       $I_GEN_TRQ_smooth             ) = 3.83000000000000000E+04 ! Y values
ifctn.y (                31 ,       $I_GEN_TRQ_smooth             ) = 3.89000000000000000E+04 ! Y values
ifctn.y (                32 ,       $I_GEN_TRQ_smooth             ) = 3.95000000000000000E+04 ! Y values
ifctn.y (                33 ,       $I_GEN_TRQ_smooth             ) = 4.00000000000000000E+04 ! Y values
ifctn.y (                34 ,       $I_GEN_TRQ_smooth             ) = 4.02000000000000000E+04 ! Y values
ifctn.y (                35 ,       $I_GEN_TRQ_smooth             ) = 4.04000000000000000E+04 ! Y values
ifctn.y (                36 ,       $I_GEN_TRQ_smooth             ) = 4.04600000000000000E+04 ! Y values
ifctn.y (                37 ,       $I_GEN_TRQ_smooth             ) = 4.04300000000000000E+04 ! Y values
ifctn.y (                38 ,       $I_GEN_TRQ_smooth             ) = 4.03500000000000000E+04 ! Y values
ifctn.y (                39 ,       $I_GEN_TRQ_smooth             ) = 4.01800000000000000E+04 ! Y values
ifctn.y (                40 ,       $I_GEN_TRQ_smooth             ) = 3.99500000000000000E+04 ! Y values
ifctn.y (                41 ,       $I_GEN_TRQ_smooth             ) = 3.95000000000000000E+04 ! Y values
ifctn.y (                42 ,       $I_GEN_TRQ_smooth             ) = 3.86922948029999970E+04 ! Y values
ifctn.y (                43 ,       $I_GEN_TRQ_smooth             ) = 3.78511579589999965E+04 ! Y values
ifctn.y (                44 ,       $I_GEN_TRQ_smooth             ) = 3.70458141729999988E+04 ! Y values
ifctn.y (                45 ,       $I_GEN_TRQ_smooth             ) = 3.62740263780000023E+04 ! Y values
ifctn.y (                46 ,       $I_GEN_TRQ_smooth             ) = 3.55337401249999966E+04 ! Y values
ifctn.y (                47 ,       $I_GEN_TRQ_smooth             ) = 3.48230653230000025E+04 ! Y values
ifctn.y (                48 ,       $I_GEN_TRQ_smooth             ) = 3.31038125000000000E+04 ! Y values
ifctn.y (                49 ,       $I_GEN_TRQ_smooth             ) = 3.11565294099999992E+04 ! Y values
ifctn.y (                50 ,       $I_GEN_TRQ_smooth             ) = 2.64830499999999993E+04 ! Y values
ifctn.intpol.type (                 $I_GEN_TRQ_smooth             ) = 5                       ! Interpolation type
ifctn.intpol.par (        3 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+00 ! Interpolation parameters
ifctn.disc (              1 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              2 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              3 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              4 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              5 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              6 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              7 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              8 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (              9 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             10 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             11 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             12 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             13 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             14 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             15 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             16 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             17 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             18 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             19 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             20 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             21 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             22 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             23 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             24 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             25 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             26 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             27 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             28 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             29 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             30 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             31 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             32 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             33 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             34 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             35 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             36 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             37 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             38 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             39 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             40 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             41 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             42 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             43 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             44 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             45 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             46 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             47 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             48 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             49 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.disc (             50 ,       $I_GEN_TRQ_smooth             ) = 0                       ! Discontinuity
ifctn.range.handling (              $I_GEN_TRQ_smooth             ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_GEN_TRQ_smooth             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_GEN_TRQ_smooth             ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 ,   1 , $I_GEN_TRQ_smooth       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_GEN_TRQ_smooth             ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_GEN_TRQ_smooth       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_GEN_TRQ_smooth       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_GEN_TRQ_smooth       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

!**********************************************************************
! Senders
!**********************************************************************
sender.ref (                        $COM_S_________MARKER         ) = null                    ! Source object
sender.alias (                      $COM_S_________MARKER         ) = 'COM_S_________SUBVARS' ! Alias

sender.ref (                        $COM_M_INTERFACE_GEN_CPL      ) = $M_GRO_INTERFACE_GEN_CPL ! Source object

sender.ref (                        $COM_M_INTERFACE_CTRL_GEN_STR ) = $M_STR_INTERFACE_CTRL_STR ! Source object

sender.ref (                        $COM_M_INTERFACE_CTRL_GEN_GRO ) = $M_GRO_INTERFACE_CTRL_GRO ! Source object

!**********************************************************************
! Receivers
!**********************************************************************
receiver.ref (                      $COM_R_________SUBVARS        ) = null                    ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_01__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_01__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_01__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Z ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_02__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_02__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_02__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Z ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_03__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_03__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_03__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Z ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_04__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_04__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_04__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Z ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_034_CPL_G_PA_G_SCN__CPL_2_GEN_X) = $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN.$_CPL_2_GEN_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_GEN__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__R) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__ang) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_STR_G_BU__X) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_STR_G_BU__Y) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_STR_G_BU__Z) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Z ! Destination object

receiver.ref (                      $COM_R_________MARKER         ) = null                    ! Destination object
receiver.priolist (       1 ,       $COM_R_________MARKER         ) = 'COM_R_________SUBVARS' ! Sender priority list

receiver.ref (                      $COM_M_INTERFACE_MFR_GEN      ) = $M_Isys_INTERFACE_MFR_GEN ! Destination object

receiver.ref (                      $COM_M_INTERFACE_MFR_GEN_BU1  ) = $M_Isys_INTERFACE_MFR_GEN_BU1 ! Destination object

receiver.ref (                      $COM_M_INTERFACE_MFR_GEN_BU2  ) = $M_Isys_INTERFACE_MFR_GEN_BU2 ! Destination object
receiver.disabled (                 $COM_M_INTERFACE_MFR_GEN_BU2  ) = 0                       ! Disabled

receiver.ref (                      $COM_M_INTERFACE_MFR_GEN_BU3  ) = $M_Isys_INTERFACE_MFR_GEN_BU3 ! Destination object

receiver.ref (                      $COM_M_INTERFACE_MFR_GEN_BU4  ) = $M_Isys_INTERFACE_MFR_GEN_BU4 ! Destination object

receiver.ref (                      $COM_R_________CONTROL_ELEMENTS) = null                   ! Destination object
receiver.priolist (       1 ,       $COM_R_________CONTROL_ELEMENTS) = 'COM_R_________SUBVARS' ! Sender priority list

receiver.ref (                      $COM_C_INTERFACE_GEN_TRQ      ) = $C_INTERFACE_CTRL_GEN_TRQ ! Destination object
receiver.priolist (       1 ,       $COM_C_INTERFACE_GEN_TRQ      ) = '$COM_C_INTERFACE_CTRL_GEN_TRQ' ! Sender priority list
receiver.priolist (       2 ,       $COM_C_INTERFACE_GEN_TRQ      ) = '$COM_C_INTERFACE_TRG_GEN_TRQ' ! Sender priority list

                                                                                                                                                                    
