!file.version=3.3! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20200100
version.desc   = ''
version.build  = 82

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
glob.rhs.tuning.type                                                = 0                       ! Formalism Tuning Type
glob.rhs.tuning.flags (   1                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   2                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   3                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   4                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   5                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   6                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   7                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   8                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   9                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  10                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  11                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  12                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  13                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  14                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  15                                       ) = 1                       ! Formalism Tuning Flags
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
model.txt                                                           = 'Gear box#Gear box (detailed) for drivetrain analysis.[br]Switchable between basic and advanced gear pair foce elements.[br]Switchable between rigid and flexible bodies. [br]Adjustable connection\'s degrees of freedom.[br]Automatic drivetrain assembly with initial conditions.' ! Comment
glob.ifctn.bounds                                                   = 1                       ! Cubic spline boundary conditions
prop3d.bg.base.color.r                                              = 9.90000000000000000E+01 ! Background color (red component)
prop3d.bg.base.color.g                                              = 1.84000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.55000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = -3.64662575721740723E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -1.12558822631835938E+01 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 3.27886176109313965E+00 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 5.98538339138031006E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = -1.13521769642829895E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -1.60114407539367676E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = 7.76677608489990234E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 3.14159274101257324E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 1.00000001490000004E-01 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 1.00000000000000000E+03 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved
view.stereo.active (                $V_WorkingView                ) = 0                       ! Stereo enabled
view.stereo.balance (               $V_WorkingView                ) = 1.00000000000000000E+00 ! Stereo balance
view.stereo.offset (                $V_WorkingView                ) = 1.00000000000000000E+00 ! Stereo offset

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

view.type (                         $V_perspective                ) = 0                       ! Projection type
view.pos (                1 ,       $V_perspective                ) = -3.64662575721740723E+00 ! Position
view.pos (                2 ,       $V_perspective                ) = -1.12558822631835938E+01 ! Position
view.pos (                3 ,       $V_perspective                ) = 3.27886176109313965E+00 ! Position
view.orient (             1 ,       $V_perspective                ) = 5.98538339138031006E-01 ! Orientation
view.orient (             2 ,       $V_perspective                ) = -1.13521769642829895E-01 ! Orientation
view.orient (             3 ,       $V_perspective                ) = -1.60114407539367676E-01 ! Orientation
view.orient (             4 ,       $V_perspective                ) = 7.76677608489990234E-01 ! Orientation
view.angle (                        $V_perspective                ) = 3.14159274101257324E-01 ! Lens angle
view.fclip.auto (                   $V_perspective                ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_perspective                ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_perspective                ) = 1.00000001490000004E-01 ! Front clipping plane value
view.bclip.value (                  $V_perspective                ) = 1.00000000000000000E+03 ! Back clipping plane value
view.rotcenter.type (               $V_perspective                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_perspective                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_perspective                ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 0.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 50 Hz }               ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = 1.00000000000000000E+03 ! TIME_INTEG_TIMEPAR_END_TIME
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.prec.dbl (                 $SLV_SolverSettings           ) = 0                       ! Result file in double precision
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force outpur values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.force.st.desc (            $SLV_SolverSettings           ) = 0                       ! Force descriptive states to result file
slv.meas.force.st.root (            $SLV_SolverSettings           ) = 0                       ! Force root states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.uvector (                  $SLV_SolverSettings           ) = 0                       ! u-Vector to result file
slv.meas.ifctn.fx (                 $SLV_SolverSettings           ) = 0                       ! Input Function fx to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.online.active (            $SLV_SolverSettings           ) = 0                       ! MEAS_BOOLPAR_ONLINE
slv.meas.online.merge0dof (         $SLV_SolverSettings           ) = 0                       ! MEAS_BOOLPAR_ONLINE_MERGE0DOF
slv.compat.solver (                 $SLV_SolverSettings           ) = 1                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.equi.st.meth (                  $SLV_SolverSettings           ) = 2                       ! EQUI_STATIC_INTPAR_METHOD
slv.init.task (                     $SLV_SolverSettings           ) = 2                       ! Task: 0 = No initialization; 1 = Assemble System; 2 = Apply Initial Conditions and Assemble System
slv.init.meth (                     $SLV_SolverSettings           ) = 1                       ! Algorithm: 0 = Nonlinear solver; 1 = Projection

!**********************************************************************
! SubVars
!**********************************************************************
subvargroup.begin (                 $G_PA                         )                           ! $G_PA
   subvargroup.begin (              $G_GER                        )                           ! $G_PA.$G_GER
      subvargroup.begin (           $G_ALL                        )                           ! $G_PA.$G_GER.$G_ALL
         subvar.str (               $_TPD                         ) = '2'                     ! $G_PA.$G_GER.$G_ALL.$_TPD, Definition
         subvar.intent (            $_TPD                         ) = 1                       ! Intent
         subvar.status (            $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TPD                         ) = 'TiP Discretization'    ! Comment

         subvar.str (               $_FLD                         ) = '15'                    ! $G_PA.$G_GER.$G_ALL.$_FLD, Definition
         subvar.intent (            $_FLD                         ) = 1                       ! Intent
         subvar.status (            $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_FLD                         ) = 'FLank Discretization'  ! Comment

         subvar.str (               $_RTD                         ) = '3'                     ! $G_PA.$G_GER.$G_ALL.$_RTD, Definition
         subvar.intent (            $_RTD                         ) = 1                       ! Intent
         subvar.status (            $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_RTD                         ) = 'RooT Discretization'   ! Comment

         subvar.str (               $_FCD                         ) = '5'                     ! $G_PA.$G_GER.$G_ALL.$_FCD, Definition
         subvar.intent (            $_FCD                         ) = 1                       ! Intent
         subvar.status (            $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_FCD                         ) = 'FaCe Discretization'   ! Comment

         subvar.str (               $_BRD                         ) = '3'                     ! $G_PA.$G_GER.$G_ALL.$_BRD, Definition
         subvar.intent (            $_BRD                         ) = 1                       ! Intent
         subvar.status (            $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BRD                         ) = 'BoRe Discretization'   ! Comment

      subvargroup.end (             $G_ALL                        )                           ! $G_PA.$G_GER.$G_ALL
      subvargroup.txt (             $G_ALL                        ) = 'ALL gears'             ! Comment
      subvargroup.begin (           $G_LSS                        )                           ! $G_PA.$G_GER.$G_LSS
         subvargroup.begin (        $G_ALL                        )                           ! $G_PA.$G_GER.$G_LSS.$G_ALL
            subvar.str (            $_NM                          ) = '0.025'                 ! $G_PA.$G_GER.$G_LSS.$G_ALL.$_NM, Definition
            subvar.intent (         $_NM                          ) = 0                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '20 deg'                ! $G_PA.$G_GER.$G_LSS.$G_ALL.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 0                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '7 deg'                 ! $G_PA.$G_GER.$G_LSS.$G_ALL.$_HA, Definition
            subvar.intent (         $_HA                          ) = 0                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

         subvargroup.end (          $G_ALL                        )                           ! $G_PA.$G_GER.$G_LSS.$G_ALL
         subvargroup.txt (          $G_ALL                        ) = 'ALL low speed stage gears' ! Comment
         subvargroup.begin (        $G_RNG                        )                           ! $G_PA.$G_GER.$G_LSS.$G_RNG
            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_SF                          ) = '0.4937'                ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_HA                          ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = ' 2.26778'              ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '2.38028'               ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0006'                ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '93'                    ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.52'                  ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_RD                          ) = '2.68'                  ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_RD, Definition
            subvar.intent (         $_RD                          ) = 0                       ! Intent
            subvar.status (         $_RD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RD                          ) = 'Ring Diameter'         ! Comment

            subvar.str (            $_FND                         ) = '2.370708 m'            ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_FND, Definition
            subvar.intent (         $_FND                         ) = 1                       ! Intent
            subvar.status (         $_FND                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FND                         ) = 'Flexible Node reference Diameter' ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

            subvar.str (            $_GW_FLX_MARKER_TYPE          ) = 'SWITCH($G_FE.$G_GPA.$G_LSS.$_CLC_RNG_PLT)\n{\n   CASE         1:   4 ;\n   CASE         2:   0 ;\n   CASE         3:   4 ;\n   CASE         4:   4 ;\n   CASE         5:   0 ;\n   CASE         6:   4 ;\n\n   DEFAULT      :   0 ;\n}' ! $G_PA.$G_GER.$G_LSS.$G_RNG.$_GW_FLX_MARKER_TYPE, Definition
            subvar.intent (         $_GW_FLX_MARKER_TYPE          ) = 2                       ! Intent
            subvar.status (         $_GW_FLX_MARKER_TYPE          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_GW_FLX_MARKER_TYPE          ) = 'Gear Wheel FLeX Marker Type (when primitive is located on a flexible body) --------------------------------------- Classci Connection - rigid gear pair Undeformed - flexible gear pair' ! Comment

         subvargroup.end (          $G_RNG                        )                           ! $G_PA.$G_GER.$G_LSS.$G_RNG
         subvargroup.txt (          $G_RNG                        ) = 'RiNG'                  ! Comment
         subvargroup.begin (        $G_PLT                        )                           ! $G_PA.$G_GER.$G_LSS.$G_PLT
            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_SF                          ) = '0.156'                 ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_HA                          ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = '0.913672'              ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '0.801683'              ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0006'                ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '34'                    ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.52'                  ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_BD                          ) = '0.43'                  ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_BD, Definition
            subvar.intent (         $_BD                          ) = 0                       ! Intent
            subvar.status (         $_BD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BD                          ) = 'Bore Diameter'         ! Comment

            subvar.str (            $_FND                         ) = '0.8107348 m'           ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_FND, Definition
            subvar.intent (         $_FND                         ) = 1                       ! Intent
            subvar.status (         $_FND                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FND                         ) = 'Flexible Node reference Diameter' ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

            subvar.str (            $_GW_FLX_MARKER_TYPE          ) = 'max(\n\n   SWITCH($G_FE.$G_GPA.$G_LSS.$_CLC_RNG_PLT)\n   {\n      CASE         1:   4 ;\n      CASE         2:   4 ;\n      CASE         3:   0 ;\n      CASE         4:   4 ;\n      CASE         5:   4 ;\n      CASE         6:   0 ;\n\n      DEFAULT      :   0 ;\n   }\n,\n   SWITCH($G_FE.$G_GPA.$G_LSS.$_CLC_SUN_PLT)\n   {\n      CASE         1:   4 ;\n      CASE         2:   4 ;\n      CASE         3:   0 ;\n      CASE         4:   4 ;\n      CASE         5:   4 ;\n      CASE         6:   0 ;\n\n      DEFAULT      :   0 ;\n   }\n)' ! $G_PA.$G_GER.$G_LSS.$G_PLT.$_GW_FLX_MARKER_TYPE, Definition
            subvar.intent (         $_GW_FLX_MARKER_TYPE          ) = 2                       ! Intent
            subvar.status (         $_GW_FLX_MARKER_TYPE          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_GW_FLX_MARKER_TYPE          ) = 'Gear Wheel FLeX Marker Type (when primitive is located on a flexible body) --------------------------------------- Classci Connection - rigid gear pair Undeformed - flexible gear pair' ! Comment

         subvargroup.end (          $G_PLT                        )                           ! $G_PA.$G_GER.$G_LSS.$G_PLT
         subvargroup.txt (          $G_PLT                        ) = 'PLaneTs'               ! Comment
         subvargroup.begin (        $G_SUN                        )                           ! $G_PA.$G_GER.$G_LSS.$G_SUN
            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_LSS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '- $G_PA.$G_GER.$G_LSS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_SF                          ) = '0.14'                  ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = '0.6354807'             ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '0.523818'              ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0006'                ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '23'                    ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.54'                  ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_BD                          ) = '0.2'                   ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_BD, Definition
            subvar.intent (         $_BD                          ) = 0                       ! Intent
            subvar.status (         $_BD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BD                          ) = 'Bore Diameter'         ! Comment

            subvar.str (            $_FND                         ) = '0.5356306 m'           ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_FND, Definition
            subvar.intent (         $_FND                         ) = 1                       ! Intent
            subvar.status (         $_FND                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FND                         ) = 'Flexible Node reference Diameter' ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

            subvar.str (            $_GW_FLX_MARKER_TYPE          ) = 'SWITCH($G_FE.$G_GPA.$G_LSS.$_CLC_SUN_PLT)\n{\n   CASE         1:   4 ;\n   CASE         2:   0 ;\n   CASE         3:   4 ;\n   CASE         4:   4 ;\n   CASE         5:   0 ;\n   CASE         6:   4 ;\n\n   DEFAULT      :   0 ;\n}' ! $G_PA.$G_GER.$G_LSS.$G_SUN.$_GW_FLX_MARKER_TYPE, Definition
            subvar.intent (         $_GW_FLX_MARKER_TYPE          ) = 2                       ! Intent
            subvar.status (         $_GW_FLX_MARKER_TYPE          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_GW_FLX_MARKER_TYPE          ) = 'Gear Wheel FLeX Marker Type (when primitive is located on a flexible body) --------------------------------------- Classci Connection - rigid gear pair Undeformed - flexible gear pair' ! Comment

         subvargroup.end (          $G_SUN                        )                           ! $G_PA.$G_GER.$G_LSS.$G_SUN
         subvargroup.txt (          $G_SUN                        ) = 'SUN'                   ! Comment
      subvargroup.end (             $G_LSS                        )                           ! $G_PA.$G_GER.$G_LSS
      subvargroup.desc (   1 ,      $G_LSS                        ) = 'low speed stage'       ! Description
      subvargroup.txt (             $G_LSS                        ) = 'Low Speed Stage'       ! Comment
      subvargroup.begin (           $G_IMS                        )                           ! $G_PA.$G_GER.$G_IMS
         subvargroup.begin (        $G_ALL                        )                           ! $G_PA.$G_GER.$G_IMS.$G_ALL
            subvar.str (            $_NM                          ) = '0.018\n'               ! $G_PA.$G_GER.$G_IMS.$G_ALL.$_NM, Definition
            subvar.intent (         $_NM                          ) = 0                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '20 deg'                ! $G_PA.$G_GER.$G_IMS.$G_ALL.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 0                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '7 deg'                 ! $G_PA.$G_GER.$G_IMS.$G_ALL.$_HA, Definition
            subvar.intent (         $_HA                          ) = 0                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

         subvargroup.end (          $G_ALL                        )                           ! $G_PA.$G_GER.$G_IMS.$G_ALL
         subvargroup.txt (          $G_ALL                        ) = 'ALL intermediate speed stage gears' ! Comment
         subvargroup.begin (        $G_RNG                        )                           ! $G_PA.$G_GER.$G_IMS.$G_RNG
            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_SF                          ) = '0.3237'                ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = ' 1.71146'              ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '1.79246'               ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0004'                ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '97'                    ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.39'                  ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_RD                          ) = '1.995'                 ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_RD, Definition
            subvar.intent (         $_RD                          ) = 0                       ! Intent
            subvar.status (         $_RD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RD                          ) = 'Ring Diameter'         ! Comment

            subvar.str (            $_FND                         ) = '1.792452 m'            ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_FND, Definition
            subvar.intent (         $_FND                         ) = 1                       ! Intent
            subvar.status (         $_FND                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FND                         ) = 'Flexible Node reference Diameter' ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'Tip Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'Flank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'Root Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'Face Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'Bore Discretization'   ! Comment

            subvar.str (            $_GW_FLX_MARKER_TYPE          ) = 'SWITCH($G_FE.$G_GPA.$G_IMS.$_CLC_RNG_PLT)\n{\n   CASE         1:   4 ;\n   CASE         2:   0 ;\n   CASE         3:   4 ;\n   CASE         4:   4 ;\n   CASE         5:   0 ;\n   CASE         6:   4 ;\n\n   DEFAULT      :   0 ;\n}' ! $G_PA.$G_GER.$G_IMS.$G_RNG.$_GW_FLX_MARKER_TYPE, Definition
            subvar.intent (         $_GW_FLX_MARKER_TYPE          ) = 2                       ! Intent
            subvar.status (         $_GW_FLX_MARKER_TYPE          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_GW_FLX_MARKER_TYPE          ) = 'Gear Wheel FLeX Marker Type (when primitive is located on a flexible body) --------------------------------------- Classci Connection - rigid gear pair Undeformed - flexible gear pair' ! Comment

         subvargroup.end (          $G_RNG                        )                           ! $G_PA.$G_GER.$G_IMS.$G_RNG
         subvargroup.txt (          $G_RNG                        ) = 'RiNG'                  ! Comment
         subvargroup.begin (        $G_PLT                        )                           ! $G_PA.$G_GER.$G_IMS.$G_PLT
            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_SF                          ) = '0.3741'                ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = '0.718176'              ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '0.639471'              ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0004'                ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '37'                    ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.39'                  ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_BD                          ) = '0.42'                  ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_BD, Definition
            subvar.intent (         $_BD                          ) = 0                       ! Intent
            subvar.status (         $_BD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BD                          ) = 'Bore Diameter'         ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_IMS.$G_PLT.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

         subvargroup.end (          $G_PLT                        )                           ! $G_PA.$G_GER.$G_IMS.$G_PLT
         subvargroup.txt (          $G_PLT                        ) = 'PLaneTs'               ! Comment
         subvargroup.begin (        $G_SUN                        )                           ! $G_PA.$G_GER.$G_IMS.$G_SUN
            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '- $G_PA.$G_GER.$G_IMS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_IMS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_SF                          ) = '0.42'                  ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = '0.411529'              ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '0.332824'              ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0004'                ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '20'                    ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.41'                  ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_BD                          ) = '0.2'                   ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_BD, Definition
            subvar.intent (         $_BD                          ) = 0                       ! Intent
            subvar.status (         $_BD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BD                          ) = 'Bore Diameter'         ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_IMS.$G_SUN.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

         subvargroup.end (          $G_SUN                        )                           ! $G_PA.$G_GER.$G_IMS.$G_SUN
         subvargroup.txt (          $G_SUN                        ) = 'SUN'                   ! Comment
      subvargroup.end (             $G_IMS                        )                           ! $G_PA.$G_GER.$G_IMS
      subvargroup.txt (             $G_IMS                        ) = 'InterMediate speed Stage' ! Comment
      subvargroup.begin (           $G_HSS                        )                           ! $G_PA.$G_GER.$G_HSS
         subvargroup.begin (        $G_ALL                        )                           ! $G_PA.$G_GER.$G_HSS.$G_ALL
            subvar.str (            $_NM                          ) = '0.016'                 ! $G_PA.$G_GER.$G_HSS.$G_ALL.$_NM, Definition
            subvar.intent (         $_NM                          ) = 0                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '20 deg    '            ! $G_PA.$G_GER.$G_HSS.$G_ALL.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 0                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '7 deg'                 ! $G_PA.$G_GER.$G_HSS.$G_ALL.$_HA, Definition
            subvar.intent (         $_HA                          ) = 0                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

         subvargroup.end (          $G_ALL                        )                           ! $G_PA.$G_GER.$G_HSS.$G_ALL
         subvargroup.txt (          $G_ALL                        ) = 'ALL high speed stage gears' ! Comment
         subvargroup.begin (        $G_BGR                        )                           ! $G_PA.$G_GER.$G_HSS.$G_BGR
            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_HSS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_SF                          ) = '0.789'                 ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_HSS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_HA                          ) = '- $G_PA.$G_GER.$G_HSS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = '1.06908'               ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '1.0082'                ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0003'                ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '63'                    ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.28'                  ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_BD                          ) = '0.52'                  ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_BD, Definition
            subvar.intent (         $_BD                          ) = 0                       ! Intent
            subvar.status (         $_BD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BD                          ) = 'Bore Diameter'         ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_HSS.$G_BGR.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

         subvargroup.end (          $G_BGR                        )                           ! $G_PA.$G_GER.$G_HSS.$G_BGR
         subvargroup.txt (          $G_BGR                        ) = 'Bull GeaR'             ! Comment
         subvargroup.begin (        $G_PIN                        )                           ! $G_PA.$G_GER.$G_HSS.$G_PIN
            subvar.str (            $_NM                          ) = '$G_PA.$G_GER.$G_HSS.$G_ALL.$_NM' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_NM, Definition
            subvar.intent (         $_NM                          ) = 1                       ! Intent
            subvar.status (         $_NM                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NM                          ) = 'Normal Module'         ! Comment

            subvar.str (            $_NPA                         ) = '$G_PA.$G_GER.$G_HSS.$G_ALL.$_NPA' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_NPA, Definition
            subvar.intent (         $_NPA                         ) = 1                       ! Intent
            subvar.status (         $_NPA                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NPA                         ) = 'Normal Pressure Angle' ! Comment

            subvar.str (            $_SF                          ) = '0.52'                  ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_SF, Definition
            subvar.intent (         $_SF                          ) = 0                       ! Intent
            subvar.status (         $_SF                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_SF                          ) = 'Shift Factor'          ! Comment

            subvar.str (            $_HA                          ) = '$G_PA.$G_GER.$G_HSS.$G_ALL.$_HA' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_HA, Definition
            subvar.intent (         $_HA                          ) = 1                       ! Intent
            subvar.status (         $_HA                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_HA                          ) = 'Helix Angle'           ! Comment

            subvar.str (            $_ADT                         ) = '2'                     ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_ADT, Definition
            subvar.intent (         $_ADT                         ) = 0                       ! Intent
            subvar.status (         $_ADT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADT                         ) = 'ADdendum/dedendum Type' ! Comment

            subvar.str (            $_ADD                         ) = '0.35118'               ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_ADD, Definition
            subvar.intent (         $_ADD                         ) = 0                       ! Intent
            subvar.status (         $_ADD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_ADD                         ) = 'ADDendum'              ! Comment

            subvar.str (            $_DED                         ) = '0.28292'               ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_DED, Definition
            subvar.intent (         $_DED                         ) = 0                       ! Intent
            subvar.status (         $_DED                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_DED                         ) = 'DEDendum'              ! Comment

            subvar.str (            $_BLT                         ) = '1'                     ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_BLT, Definition
            subvar.intent (         $_BLT                         ) = 0                       ! Intent
            subvar.status (         $_BLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BLT                         ) = 'BackLash Type'         ! Comment

            subvar.str (            $_BL                          ) = '0.0003'                ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_BL, Definition
            subvar.intent (         $_BL                          ) = 0                       ! Intent
            subvar.status (         $_BL                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BL                          ) = 'BackLash'              ! Comment

            subvar.str (            $_NT                          ) = '19'                    ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_NT, Definition
            subvar.intent (         $_NT                          ) = 0                       ! Intent
            subvar.status (         $_NT                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NT                          ) = 'Number of Teeth'       ! Comment

            subvar.str (            $_NHT                         ) = '1'                     ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_NHT, Definition
            subvar.intent (         $_NHT                         ) = 1                       ! Intent
            subvar.status (         $_NHT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_NHT                         ) = 'Number of Highlighted Teeth' ! Comment

            subvar.str (            $_FW                          ) = '0.3'                   ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_FW, Definition
            subvar.intent (         $_FW                          ) = 0                       ! Intent
            subvar.status (         $_FW                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FW                          ) = 'Face Width'            ! Comment

            subvar.str (            $_BD                          ) = '0.001'                 ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_BD, Definition
            subvar.intent (         $_BD                          ) = 0                       ! Intent
            subvar.status (         $_BD                          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BD                          ) = 'Ring Diameter'         ! Comment

            subvar.str (            $_TPD                         ) = '$G_PA.$G_GER.$G_ALL.$_TPD' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_TPD, Definition
            subvar.intent (         $_TPD                         ) = 1                       ! Intent
            subvar.status (         $_TPD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_TPD                         ) = 'TiP Discretization'    ! Comment

            subvar.str (            $_FLD                         ) = '$G_PA.$G_GER.$G_ALL.$_FLD' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_FLD, Definition
            subvar.intent (         $_FLD                         ) = 1                       ! Intent
            subvar.status (         $_FLD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FLD                         ) = 'FLank Discretization'  ! Comment

            subvar.str (            $_RTD                         ) = '$G_PA.$G_GER.$G_ALL.$_RTD' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_RTD, Definition
            subvar.intent (         $_RTD                         ) = 1                       ! Intent
            subvar.status (         $_RTD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_RTD                         ) = 'RooT Discretization'   ! Comment

            subvar.str (            $_FCD                         ) = '$G_PA.$G_GER.$G_ALL.$_FCD' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_FCD, Definition
            subvar.intent (         $_FCD                         ) = 1                       ! Intent
            subvar.status (         $_FCD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_FCD                         ) = 'FaCe Discretization'   ! Comment

            subvar.str (            $_BRD                         ) = '$G_PA.$G_GER.$G_ALL.$_BRD' ! $G_PA.$G_GER.$G_HSS.$G_PIN.$_BRD, Definition
            subvar.intent (         $_BRD                         ) = 1                       ! Intent
            subvar.status (         $_BRD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_BRD                         ) = 'BoRe Discretization'   ! Comment

         subvargroup.end (          $G_PIN                        )                           ! $G_PA.$G_GER.$G_HSS.$G_PIN
         subvargroup.txt (          $G_PIN                        ) = 'PINion'                ! Comment
      subvargroup.end (             $G_HSS                        )                           ! $G_PA.$G_GER.$G_HSS
      subvargroup.desc (   1 ,      $G_HSS                        ) = 'high speed stage'      ! Description
      subvargroup.txt (             $G_HSS                        ) = 'High Speed Stage'      ! Comment
   subvargroup.end (                $G_GER                        )                           ! $G_PA.$G_GER
   subvargroup.txt (                $G_GER                        ) = 'GEaRs'                 ! Comment
   subvargroup.begin (              $G_BR                         )                           ! $G_PA.$G_BR
      subvargroup.begin (           $G_LSS                        )                           ! $G_PA.$G_BR.$G_LSS
         subvargroup.begin (        $G_PLC                        )                           ! $G_PA.$G_BR.$G_LSS.$G_PLC
            subvar.str (            $_1_X                         ) = '-0.5175 m'             ! $G_PA.$G_BR.$G_LSS.$G_PLC.$_1_X, Definition
            subvar.status (         $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_X                         ) = 'x-pos. Low Speed Stage Planet Carrier Bearing 1 (wrt. Low Speed Stage reference frame)' ! Comment

            subvar.str (            $_2_X                         ) = '0.5075 m'              ! $G_PA.$G_BR.$G_LSS.$G_PLC.$_2_X, Definition
            subvar.status (         $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_X                         ) = 'x-pos. Low Speed Stage Planet Carrier Bearing 2 (wrt. Low Speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_PLC                        )                           ! $G_PA.$G_BR.$G_LSS.$G_PLC
         subvargroup.txt (          $G_PLC                        ) = 'PLanet Carrier'        ! Comment
         subvargroup.begin (        $G_PLT                        )                           ! $G_PA.$G_BR.$G_LSS.$G_PLT
            subvar.str (            $_1_X                         ) = '-0.1385 m'             ! $G_PA.$G_BR.$G_LSS.$G_PLT.$_1_X, Definition
            subvar.status (         $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_X                         ) = 'x-pos. Low Speed Stage PLaneT Bearing 1 (wrt. Low Speed Stage reference frame)' ! Comment

            subvar.str (            $_2_X                         ) = '0.1385 m'              ! $G_PA.$G_BR.$G_LSS.$G_PLT.$_2_X, Definition
            subvar.status (         $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_X                         ) = 'x-pos. Low Speed Stage PLaneT Bearing 2 (wrt. Low Speed Stage reference frame)' ! Comment

            subvar.str (            $_R                           ) = '0.725 m'               ! $G_PA.$G_BR.$G_LSS.$G_PLT.$_R, Definition
            subvar.status (         $_R                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_R                           ) = 'radial pos. Low Speed Stage PLaneT Bearings (wrt. Low Speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_PLT                        )                           ! $G_PA.$G_BR.$G_LSS.$G_PLT
         subvargroup.txt (          $G_PLT                        ) = 'PLaneTs'               ! Comment
      subvargroup.end (             $G_LSS                        )                           ! $G_PA.$G_BR.$G_LSS
      subvargroup.txt (             $G_LSS                        ) = 'Low Speed Stage'       ! Comment
      subvargroup.begin (           $G_IMS                        )                           ! $G_PA.$G_BR.$G_IMS
         subvargroup.begin (        $G_PLC                        )                           ! $G_PA.$G_BR.$G_IMS.$G_PLC
            subvar.str (            $_1_X                         ) = '-0.405 m'              ! $G_PA.$G_BR.$G_IMS.$G_PLC.$_1_X, Definition
            subvar.status (         $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_X                         ) = 'x-pos. InterMediate speed Stage Planet Carrier Bearing 1 (wrt. InterMediate speed Stage reference frame)' ! Comment

            subvar.str (            $_2_X                         ) = '0.4 m'                 ! $G_PA.$G_BR.$G_IMS.$G_PLC.$_2_X, Definition
            subvar.status (         $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_X                         ) = 'x-pos. InterMediate speed Stage Planet Carrier Bearing 2 (wrt. InterMediate speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_PLC                        )                           ! $G_PA.$G_BR.$G_IMS.$G_PLC
         subvargroup.txt (          $G_PLC                        ) = 'PLanet Carrier'        ! Comment
         subvargroup.begin (        $G_PLT                        )                           ! $G_PA.$G_BR.$G_IMS.$G_PLT
            subvar.str (            $_1_X                         ) = '-0.1 m'                ! $G_PA.$G_BR.$G_IMS.$G_PLT.$_1_X, Definition
            subvar.status (         $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_X                         ) = 'x-pos. InterMediate speed Stage PLaneT Bearing 1 (wrt. InterMediate speed Stage reference frame)' ! Comment

            subvar.str (            $_2_X                         ) = '0.1 m'                 ! $G_PA.$G_BR.$G_IMS.$G_PLT.$_2_X, Definition
            subvar.status (         $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_X                         ) = 'x-pos. InterMediate speed Stage PLaneT Bearing 2 (wrt. InterMediate speed Stage reference frame)' ! Comment

            subvar.str (            $_R                           ) = '0.53 m'                ! $G_PA.$G_BR.$G_IMS.$G_PLT.$_R, Definition
            subvar.status (         $_R                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_R                           ) = 'radial pos. InterMediate speed Stage PLaneT Bearings (wrt. InterMediate speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_PLT                        )                           ! $G_PA.$G_BR.$G_IMS.$G_PLT
         subvargroup.txt (          $G_PLT                        ) = 'PLaneTs'               ! Comment
      subvargroup.end (             $G_IMS                        )                           ! $G_PA.$G_BR.$G_IMS
      subvargroup.txt (             $G_IMS                        ) = 'InterMediate speed Stage' ! Comment
      subvargroup.begin (           $G_HSS                        )                           ! $G_PA.$G_BR.$G_HSS
         subvargroup.begin (        $G_BGR                        )                           ! $G_PA.$G_BR.$G_HSS.$G_BGR
            subvar.str (            $_1_X                         ) = '-0.28 m'               ! $G_PA.$G_BR.$G_HSS.$G_BGR.$_1_X, Definition
            subvar.status (         $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_X                         ) = 'x-pos. of Bull GeaR BeaRing 1 (wrt. High Speed Stage reference frame)' ! Comment

            subvar.str (            $_2_X                         ) = '0.23 m'                ! $G_PA.$G_BR.$G_HSS.$G_BGR.$_2_X, Definition
            subvar.status (         $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_X                         ) = 'x-pos. of Bull GeaR BeaRing 2 (wrt. High Speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_BGR                        )                           ! $G_PA.$G_BR.$G_HSS.$G_BGR
         subvargroup.txt (          $G_BGR                        ) = 'Bull GeaR'             ! Comment
         subvargroup.begin (        $G_HSH                        )                           ! $G_PA.$G_BR.$G_HSS.$G_HSH
            subvar.str (            $_1_X                         ) = '-0.287 m'              ! $G_PA.$G_BR.$G_HSS.$G_HSH.$_1_X, Definition
            subvar.status (         $_1_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_X                         ) = 'x-pos. of High speed SHaft BeaRing 1 (wrt. High Speed Stage reference frame)' ! Comment

            subvar.str (            $_2_X                         ) = '0.285 m'               ! $G_PA.$G_BR.$G_HSS.$G_HSH.$_2_X, Definition
            subvar.status (         $_2_X                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_X                         ) = 'x-pos. of High speed SHaft BeaRing 2 (wrt. High Speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_HSH                        )                           ! $G_PA.$G_BR.$G_HSS.$G_HSH
         subvargroup.txt (          $G_HSH                        ) = 'High speed SHaft'      ! Comment
      subvargroup.end (             $G_HSS                        )                           ! $G_PA.$G_BR.$G_HSS
      subvargroup.txt (             $G_HSS                        ) = 'High Speed Stage'      ! Comment
   subvargroup.end (                $G_BR                         )                           ! $G_PA.$G_BR
   subvargroup.txt (                $G_BR                         ) = 'BeaRing'               ! Comment
   subvargroup.begin (              $G_SPB                        )                           ! $G_PA.$G_SPB
      subvargroup.begin (           $G_GBX                        )                           ! $G_PA.$G_SPB.$G_GBX
         subvargroup.begin (        $G_01                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_01
            subvar.str (            $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_X' ! $G_PA.$G_SPB.$G_GBX.$G_01.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Y' ! $G_PA.$G_SPB.$G_GBX.$G_01.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Z' ! $G_PA.$G_SPB.$G_GBX.$G_01.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_01
         subvargroup.txt (          $G_01                         ) = 'SuPport Bolt 1'        ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_02
            subvar.str (            $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_X' ! $G_PA.$G_SPB.$G_GBX.$G_02.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Y' ! $G_PA.$G_SPB.$G_GBX.$G_02.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Z' ! $G_PA.$G_SPB.$G_GBX.$G_02.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_02
         subvargroup.txt (          $G_02                         ) = 'SuPport Bolt 2'        ! Comment
      subvargroup.end (             $G_GBX                        )                           ! $G_PA.$G_SPB.$G_GBX
      subvargroup.txt (             $G_GBX                        ) = 'GearBoX'               ! Comment
   subvargroup.end (                $G_SPB                        )                           ! $G_PA.$G_SPB
   subvargroup.txt (                $G_SPB                        ) = 'SuPport Bolts'         ! Comment
   subvargroup.begin (              $G_SCN                        )                           ! $G_PA.$G_SCN
      subvar.str (                  $_MSH_2_LSS_X                 ) = '-0.86 m'               ! $G_PA.$G_SCN.$_MSH_2_LSS_X, Definition
      subvar.status (               $_MSH_2_LSS_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_MSH_2_LSS_X                 ) = 'x-pos. of connection Low Speed Stage PLanet Carrier to Main SHaft (wrt. Low Speed Stage reference frame)' ! Comment

      subvar.str (                  $_LSS_2_IMS_X                 ) = '0.765 m'               ! $G_PA.$G_SCN.$_LSS_2_IMS_X, Definition
      subvar.status (               $_LSS_2_IMS_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_LSS_2_IMS_X                 ) = 'x-pos. of connection InterMediate speed Stage PLanet Carrier to Low Speed Stage SUN (wrt. Low Speed Stage reference frame)' ! Comment

      subvar.str (                  $_IMS_2_HSS_X                 ) = '0.94 m'                ! $G_PA.$G_SCN.$_IMS_2_HSS_X, Definition
      subvar.status (               $_IMS_2_HSS_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IMS_2_HSS_X                 ) = 'x-pos. of connection High Speed Stage Bull Gear to InterMediate Speed stage SUN (wrt. InterMediate Speed stage reference frame)' ! Comment

      subvar.str (                  $_GBX_2_CPL_X                 ) = '$G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN.$_GBX_2_CPL_X' ! $G_PA.$G_SCN.$_GBX_2_CPL_X, Definition
      subvar.intent (               $_GBX_2_CPL_X                 ) = 2                       ! Intent
      subvar.status (               $_GBX_2_CPL_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_GBX_2_CPL_X                 ) = 'x-pos. of connection High speed SHaft to CouPLing (wrt. CouPLing reference frame)' ! Comment

   subvargroup.end (                $G_SCN                        )                           ! $G_PA.$G_SCN
   subvargroup.txt (                $G_SCN                        ) = 'Shaft CoNnections'     ! Comment
subvargroup.end (                   $G_PA                         )                           ! $G_PA
subvargroup.txt (                   $G_PA                         ) = 'PArameter'             ! Comment

subvargroup.begin (                 $G_HP                         )                           ! $G_HP
   subvargroup.begin (              $G_GBX                        )                           ! $G_HP.$G_GBX
      subvar.str (                  $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX.$_X' ! $G_HP.$G_GBX.$_X, Definition
      subvar.intent (               $_X                           ) = 2                       ! Intent
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of GearBoX reference frame, HP 4 (wrt. DriveTRain reference frame, HP 0)' ! Comment

      subvargroup.begin (           $G_LSS                        )                           ! $G_HP.$G_GBX.$G_LSS
         subvar.str (               $_X                           ) = '0 m'                   ! $G_HP.$G_GBX.$G_LSS.$_X, Definition
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of Low Speed Stage reference marker, HP 4a (wrt. GearBoX reference frame, HP 4)' ! Comment

      subvargroup.end (             $G_LSS                        )                           ! $G_HP.$G_GBX.$G_LSS
      subvargroup.txt (             $G_LSS                        ) = 'Low Speed Stage'       ! Comment
      subvargroup.begin (           $G_IMS                        )                           ! $G_HP.$G_GBX.$G_IMS
         subvar.str (               $_X                           ) = '1.16 m'                ! $G_HP.$G_GBX.$G_IMS.$_X, Definition
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of InterMediate Speed stage reference marker, HP 4b (wrt. GearBoX reference frame, HP 4)' ! Comment

      subvargroup.end (             $G_IMS                        )                           ! $G_HP.$G_GBX.$G_IMS
      subvargroup.txt (             $G_IMS                        ) = 'InterMediate Speed stage' ! Comment
      subvargroup.begin (           $G_HSS                        )                           ! $G_HP.$G_GBX.$G_HSS
         subvar.str (               $_X                           ) = '2.1 m'                 ! $G_HP.$G_GBX.$G_HSS.$_X, Definition
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of High Speed Stage reference marker, HP 4c (wrt. GearBox reference marker, HP 4)' ! Comment

      subvargroup.end (             $G_HSS                        )                           ! $G_HP.$G_GBX.$G_HSS
      subvargroup.txt (             $G_HSS                        ) = 'High Speed Stage'      ! Comment
   subvargroup.end (                $G_GBX                        )                           ! $G_HP.$G_GBX
   subvargroup.txt (                $G_GBX                        ) = 'GearBoX'               ! Comment
   subvargroup.begin (              $G_CPL                        )                           ! $G_HP.$G_CPL
      subvar.str (                  $_X                           ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X' ! $G_HP.$G_CPL.$_X, Definition
      subvar.intent (               $_X                           ) = 2                       ! Intent
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of CouPLing reference marker, HP 5 (wrt. to DRiveTrain reference frame, HP 0)' ! Comment

      subvar.str (                  $_R                           ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R' ! $G_HP.$G_CPL.$_R, Definition
      subvar.intent (               $_R                           ) = 2                       ! Intent
      subvar.status (               $_R                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_R                           ) = 'radial offset of CouPLing reference marker, HP 5 (wrt. to DRiveTrain reference frame, HP 0)' ! Comment

      subvar.str (                  $_ang                         ) = '$G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang' ! $G_HP.$G_CPL.$_ang, Definition
      subvar.intent (               $_ang                         ) = 2                       ! Intent
      subvar.status (               $_ang                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_ang                         ) = 'offset angle (around alpha) of CouPLing reference marker, HP 5 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

   subvargroup.end (                $G_CPL                        )                           ! $G_HP.$G_CPL
   subvargroup.txt (                $G_CPL                        ) = 'CouPLing'              ! Comment
   subvargroup.begin (              $G_BRK                        )                           ! $G_HP.$G_BRK
      subvar.str (                  $_X                           ) = '2.77 m'                ! $G_HP.$G_BRK.$_X, Definition
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. BRaKe reference marker, HP 7 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

      subvar.str (                  $_Y                           ) = '-0.136646 m'           ! $G_HP.$G_BRK.$_Y, Definition
      subvar.status (               $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_Y                           ) = 'y-pos. BRaKe reference marker, HP 7 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

      subvar.str (                  $_Z                           ) = '0.701112 m'            ! $G_HP.$G_BRK.$_Z, Definition
      subvar.status (               $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_Z                           ) = 'z-pos. BRaKe reference marker, HP 7 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

   subvargroup.end (                $G_BRK                        )                           ! $G_HP.$G_BRK
   subvargroup.txt (                $G_BRK                        ) = 'BRaKe'                 ! Comment
subvargroup.end (                   $G_HP                         )                           ! $G_HP
subvargroup.desc (        1 ,       $G_HP                         ) = ''                      ! Description
subvargroup.txt (                   $G_HP                         ) = 'Hard Points[br]0: DriveTRain[br]1: HouSinG[br]2: HUB[br]3: MainSHaft[br]4: GearBoX[br]4a: Low Speed Stage[br]4b: InterMediate Speed Stage[br]4c: High Speed Stage[br]5: CouPLing[br]6: GENerator[br]7: BRaKe' ! Comment

subvargroup.begin (                 $G_IC                         )                           ! $G_IC
   subvar.str (                     $_LSS_PLC_ANG                 ) = '0 deg'                 ! $G_IC.$_LSS_PLC_ANG, Definition
   subvar.txt (                     $_LSS_PLC_ANG                 ) = 'initial angle (about alpha) of Low Speed Stage PLanet Carrier (wrt. Gear BoX reference frame)' ! Comment

   subvar.str (                     $_LSS_PLC_VEL                 ) = '0 rpm'                 ! $G_IC.$_LSS_PLC_VEL, Definition
   subvar.txt (                     $_LSS_PLC_VEL                 ) = 'initial velocity (about alpha) of Low Speed Stage PLanet Carrier (wrt. Gear BoX reference frame)' ! Comment

   subvar.str (                     $_GP_TTH_MATCHING             ) = '0'                     ! $G_IC.$_GP_TTH_MATCHING, Definition
   subvar.discr.desc (    1 ,       $_GP_TTH_MATCHING             ) = 'Arbitrary'             ! Description of discrete values
   subvar.discr.desc (    2 ,       $_GP_TTH_MATCHING             ) = 'Nearest'               ! Description of discrete values
   subvar.discr.str (     1 ,       $_GP_TTH_MATCHING             ) = '0'                     ! Discrete values
   subvar.discr.str (     2 ,       $_GP_TTH_MATCHING             ) = '1'                     ! Discrete values
   subvar.txt (                     $_GP_TTH_MATCHING             ) = 'Gear Pair TooTH MATCHING mode: 0:Arbitrary/ 1:Nearest [br](used only for Gear Pair advanced)' ! Comment

subvargroup.end (                   $G_IC                         )                           ! $G_IC
subvargroup.txt (                   $G_IC                         ) = 'Initial Conditions'    ! Comment

subvargroup.begin (                 $G_KP                         )                           ! $G_KP
   subvargroup.begin (              $G_HSG                        )                           ! $G_KP.$G_HSG
      subvargroup.begin (           $G_LSS                        )                           ! $G_KP.$G_HSG.$G_LSS
         subvar.str (               $_RNG_X                       ) = '$G_HP.$G_GBX.$G_LSS.$_X' ! $G_KP.$G_HSG.$G_LSS.$_RNG_X, Definition
         subvar.intent (            $_RNG_X                       ) = 2                       ! Intent
         subvar.status (            $_RNG_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_RNG_X                       ) = 'x-pos. of Low Speed Stage RiNG (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_SUN_X                       ) = '$G_HP.$G_GBX.$G_LSS.$_X' ! $G_KP.$G_HSG.$G_LSS.$_SUN_X, Definition
         subvar.intent (            $_SUN_X                       ) = 2                       ! Intent
         subvar.status (            $_SUN_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_SUN_X                       ) = 'x-pos. of Low Speed Stage SUN (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_PLC_X                       ) = '$G_HP.$G_GBX.$G_LSS.$_X' ! $G_KP.$G_HSG.$G_LSS.$_PLC_X, Definition
         subvar.intent (            $_PLC_X                       ) = 2                       ! Intent
         subvar.status (            $_PLC_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLC_X                       ) = 'x-pos. of Low Speed Stage PLanet Carrier (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_PLC_BR1_X                   ) = '$G_HP.$G_GBX.$G_LSS.$_X \n+ $G_PA.$G_BR.$G_LSS.$G_PLC.$_1_X' ! $G_KP.$G_HSG.$G_LSS.$_PLC_BR1_X, Definition
         subvar.intent (            $_PLC_BR1_X                   ) = 2                       ! Intent
         subvar.status (            $_PLC_BR1_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLC_BR1_X                   ) = 'x-pos. of Low Speed Stage PLanet Carrier BeaRing 1 (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_PLC_BR2_X                   ) = '$G_HP.$G_GBX.$G_LSS.$_X \n+ $G_PA.$G_BR.$G_LSS.$G_PLC.$_2_X' ! $G_KP.$G_HSG.$G_LSS.$_PLC_BR2_X, Definition
         subvar.intent (            $_PLC_BR2_X                   ) = 2                       ! Intent
         subvar.status (            $_PLC_BR2_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLC_BR2_X                   ) = 'x-pos. of Low Speed Stage PLanet Carrier BeaRing 2 (wrt. GearBoX reference frame)' ! Comment

      subvargroup.end (             $G_LSS                        )                           ! $G_KP.$G_HSG.$G_LSS
      subvargroup.txt (             $G_LSS                        ) = 'Low Speed Stage'       ! Comment
      subvargroup.begin (           $G_IMS                        )                           ! $G_KP.$G_HSG.$G_IMS
         subvar.str (               $_RNG_X                       ) = '$G_HP.$G_GBX.$G_IMS.$_X' ! $G_KP.$G_HSG.$G_IMS.$_RNG_X, Definition
         subvar.intent (            $_RNG_X                       ) = 2                       ! Intent
         subvar.status (            $_RNG_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_RNG_X                       ) = 'x-pos. of InterMediate Speed stage RiNG (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_SUN_X                       ) = '$G_HP.$G_GBX.$G_IMS.$_X' ! $G_KP.$G_HSG.$G_IMS.$_SUN_X, Definition
         subvar.intent (            $_SUN_X                       ) = 2                       ! Intent
         subvar.status (            $_SUN_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_SUN_X                       ) = 'x-pos. of InterMediate Speed stage SUN (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_PLC_X                       ) = '$G_HP.$G_GBX.$G_IMS.$_X' ! $G_KP.$G_HSG.$G_IMS.$_PLC_X, Definition
         subvar.intent (            $_PLC_X                       ) = 2                       ! Intent
         subvar.status (            $_PLC_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLC_X                       ) = 'x-pos. of InterMediate Speed stage PLanet Carrier (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_PLC_BR1_X                   ) = '$G_HP.$G_GBX.$G_IMS.$_X \n+ $G_PA.$G_BR.$G_IMS.$G_PLC.$_1_X' ! $G_KP.$G_HSG.$G_IMS.$_PLC_BR1_X, Definition
         subvar.intent (            $_PLC_BR1_X                   ) = 2                       ! Intent
         subvar.status (            $_PLC_BR1_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLC_BR1_X                   ) = 'x-pos. of InterMediate Speed stage PLanet Carrier BeaRing 1 (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_PLC_BR2_X                   ) = '$G_HP.$G_GBX.$G_IMS.$_X \n+ $G_PA.$G_BR.$G_IMS.$G_PLC.$_2_X' ! $G_KP.$G_HSG.$G_IMS.$_PLC_BR2_X, Definition
         subvar.intent (            $_PLC_BR2_X                   ) = 2                       ! Intent
         subvar.status (            $_PLC_BR2_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLC_BR2_X                   ) = 'x-pos. of InterMediate Speed stage PLanet Carrier BeaRing 2 (wrt. GearBoX reference frame)' ! Comment

      subvargroup.end (             $G_IMS                        )                           ! $G_KP.$G_HSG.$G_IMS
      subvargroup.begin (           $G_HSS                        )                           ! $G_KP.$G_HSG.$G_HSS
         subvar.str (               $_BGR_X                       ) = '$G_HP.$G_GBX.$G_HSS.$_X' ! $G_KP.$G_HSG.$G_HSS.$_BGR_X, Definition
         subvar.intent (            $_BGR_X                       ) = 2                       ! Intent
         subvar.status (            $_BGR_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BGR_X                       ) = 'x-pos. of Bull GeaR (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_BGR_BR1_X                   ) = '$G_HP.$G_GBX.$G_HSS.$_X \n+ $G_PA.$G_BR.$G_HSS.$G_BGR.$_1_X' ! $G_KP.$G_HSG.$G_HSS.$_BGR_BR1_X, Definition
         subvar.intent (            $_BGR_BR1_X                   ) = 2                       ! Intent
         subvar.status (            $_BGR_BR1_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BGR_BR1_X                   ) = 'x-pos. Bull GeaR BeaRing 1 (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_BGR_BR2_X                   ) = '$G_HP.$G_GBX.$G_HSS.$_X \n+ $G_PA.$G_BR.$G_HSS.$G_BGR.$_2_X' ! $G_KP.$G_HSG.$G_HSS.$_BGR_BR2_X, Definition
         subvar.intent (            $_BGR_BR2_X                   ) = 2                       ! Intent
         subvar.status (            $_BGR_BR2_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BGR_BR2_X                   ) = 'x-pos. Bull GeaR BeaRing 2 (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_HSH_X                       ) = '$G_HP.$G_GBX.$G_HSS.$_X' ! $G_KP.$G_HSG.$G_HSS.$_HSH_X, Definition
         subvar.intent (            $_HSH_X                       ) = 2                       ! Intent
         subvar.status (            $_HSH_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_HSH_X                       ) = 'x-pos. of High speed SHaft (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_HSH_Y                       ) = '$G_HP.$G_CPL.$_R*cos($G_HP.$G_CPL.$_ang)' ! $G_KP.$G_HSG.$G_HSS.$_HSH_Y, Definition
         subvar.intent (            $_HSH_Y                       ) = 2                       ! Intent
         subvar.status (            $_HSH_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_HSH_Y                       ) = 'y-pos. of High speed SHaft (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_HSH_Z                       ) = '$G_HP.$G_CPL.$_R*sin($G_HP.$G_CPL.$_ang)' ! $G_KP.$G_HSG.$G_HSS.$_HSH_Z, Definition
         subvar.txt (               $_HSH_Z                       ) = 'z-pos. of High speed SHaft (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_HSH_BR1_X                   ) = '$G_HP.$G_GBX.$G_HSS.$_X \n+ $G_PA.$G_BR.$G_HSS.$G_HSH.$_1_X' ! $G_KP.$G_HSG.$G_HSS.$_HSH_BR1_X, Definition
         subvar.intent (            $_HSH_BR1_X                   ) = 2                       ! Intent
         subvar.status (            $_HSH_BR1_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_HSH_BR1_X                   ) = 'x-pos. of High speed SHaft BeaRing 1 (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_HSH_BR2_X                   ) = '$G_HP.$G_GBX.$G_HSS.$_X  + \n$G_PA.$G_BR.$G_HSS.$G_HSH.$_2_X ' ! $G_KP.$G_HSG.$G_HSS.$_HSH_BR2_X, Definition
         subvar.intent (            $_HSH_BR2_X                   ) = 2                       ! Intent
         subvar.status (            $_HSH_BR2_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_HSH_BR2_X                   ) = 'x-pos. High speed SHaft BeaRing 2 (wrt. GearBoX reference frame)' ! Comment

      subvargroup.end (             $G_HSS                        )                           ! $G_KP.$G_HSG.$G_HSS
      subvargroup.txt (             $G_HSS                        ) = 'High Speed Stage'      ! Comment
      subvargroup.begin (           $G_SPB                        )                           ! $G_KP.$G_HSG.$G_SPB
         subvargroup.begin (        $G_01                         )                           ! $G_KP.$G_HSG.$G_SPB.$G_01
            subvar.str (            $_X                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_X' ! $G_KP.$G_HSG.$G_SPB.$G_01.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_Y' ! $G_KP.$G_HSG.$G_SPB.$G_01.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_Z' ! $G_KP.$G_HSG.$G_SPB.$G_01.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_KP.$G_HSG.$G_SPB.$G_01
         subvargroup.txt (          $G_01                         ) = 'SuPport Bolt 1'        ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_KP.$G_HSG.$G_SPB.$G_02
            subvar.str (            $_X                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_X' ! $G_KP.$G_HSG.$G_SPB.$G_02.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_Y' ! $G_KP.$G_HSG.$G_SPB.$G_02.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_Z' ! $G_KP.$G_HSG.$G_SPB.$G_02.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.txt (            $_Z                           ) = 'z-pos SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_KP.$G_HSG.$G_SPB.$G_02
         subvargroup.txt (          $G_02                         ) = 'SuPport Bolt 2'        ! Comment
      subvargroup.end (             $G_SPB                        )                           ! $G_KP.$G_HSG.$G_SPB
      subvargroup.txt (             $G_SPB                        ) = 'SuPport Bolts'         ! Comment
      subvargroup.begin (           $G_BRK                        )                           ! $G_KP.$G_HSG.$G_BRK
         subvar.str (               $_X                           ) = '$G_HP.$G_BRK.$_X\n- $G_HP.$G_GBX.$_X' ! $G_KP.$G_HSG.$G_BRK.$_X, Definition
         subvar.intent (            $_X                           ) = 2                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. BRaKe reference marker (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_Y                           ) = '$G_HP.$G_BRK.$_Y'      ! $G_KP.$G_HSG.$G_BRK.$_Y, Definition
         subvar.intent (            $_Y                           ) = 2                       ! Intent
         subvar.status (            $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Y                           ) = 'y-pos. BRaKe reference marker (wrt. GearBoX reference frame)' ! Comment

         subvar.str (               $_Z                           ) = '$G_HP.$G_BRK.$_Z'      ! $G_KP.$G_HSG.$G_BRK.$_Z, Definition
         subvar.intent (            $_Z                           ) = 2                       ! Intent
         subvar.status (            $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Z                           ) = 'z-pos. BRaKe reference marker (wrt. GearBoX reference frame)' ! Comment

      subvargroup.end (             $G_BRK                        )                           ! $G_KP.$G_HSG.$G_BRK
      subvargroup.txt (             $G_BRK                        ) = 'BRaKe'                 ! Comment
   subvargroup.end (                $G_HSG                        )                           ! $G_KP.$G_HSG
   subvargroup.txt (                $G_HSG                        ) = 'HouSinG'               ! Comment
   subvargroup.begin (              $G_LSS                        )                           ! $G_KP.$G_LSS
      subvargroup.begin (           $G_PLC                        )                           ! $G_KP.$G_LSS.$G_PLC
         subvar.str (               $_PLT_R                       ) = '$G_PA.$G_BR.$G_LSS.$G_PLT.$_R' ! $G_KP.$G_LSS.$G_PLC.$_PLT_R, Definition
         subvar.intent (            $_PLT_R                       ) = 2                       ! Intent
         subvar.status (            $_PLT_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLT_R                       ) = 'radial pos. Low Speed Stage PLaneTs (wrt. Low Speed Stage reference frame)' ! Comment

         subvar.str (               $_BR1_X                       ) = '$G_PA.$G_BR.$G_LSS.$G_PLC.$_1_X' ! $G_KP.$G_LSS.$G_PLC.$_BR1_X, Definition
         subvar.intent (            $_BR1_X                       ) = 2                       ! Intent
         subvar.status (            $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR1_X                       ) = 'x-pos. Low Speed Stage Planet Carrier Bearing 1 (wrt. Low Speed Stage reference frame)' ! Comment

         subvar.str (               $_BR2_X                       ) = '$G_PA.$G_BR.$G_LSS.$G_PLC.$_2_X' ! $G_KP.$G_LSS.$G_PLC.$_BR2_X, Definition
         subvar.intent (            $_BR2_X                       ) = 2                       ! Intent
         subvar.status (            $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR2_X                       ) = 'x-pos. Low Speed Stage Planet Carrier Bearing 2 (wrt. Low Speed Stage reference frame)' ! Comment

         subvar.str (               $_MSH_X                       ) = '$G_PA.$G_SCN.$_MSH_2_LSS_X \n' ! $G_KP.$G_LSS.$G_PLC.$_MSH_X, Definition
         subvar.intent (            $_MSH_X                       ) = 2                       ! Intent
         subvar.status (            $_MSH_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_MSH_X                       ) = 'x-pos. of connection Low Speed Stage PLanet Carrier to Main Shaft (wrt. Low Speed Stage reference frame)' ! Comment

      subvargroup.end (             $G_PLC                        )                           ! $G_KP.$G_LSS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_KP.$G_LSS.$G_PLT
         subvar.str (               $_BR1_X                       ) = '$G_PA.$G_BR.$G_LSS.$G_PLT.$_1_X' ! $G_KP.$G_LSS.$G_PLT.$_BR1_X, Definition
         subvar.intent (            $_BR1_X                       ) = 2                       ! Intent
         subvar.status (            $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR1_X                       ) = 'x-pos. of Low Speed Stage Planet BeaRing 1 (wrt. Low Speed Stage reference frame)' ! Comment

         subvar.str (               $_BR2_X                       ) = '$G_PA.$G_BR.$G_LSS.$G_PLT.$_2_X' ! $G_KP.$G_LSS.$G_PLT.$_BR2_X, Definition
         subvar.intent (            $_BR2_X                       ) = 2                       ! Intent
         subvar.status (            $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR2_X                       ) = 'x-pos. of Low Speed Stage Planet BeaRing 2 (wrt. Low Speed Stage reference frame)' ! Comment

      subvargroup.end (             $G_PLT                        )                           ! $G_KP.$G_LSS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLanets'               ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_KP.$G_LSS.$G_SUN
         subvar.str (               $_IMS_PLC_X                   ) = '$G_PA.$G_SCN.$_LSS_2_IMS_X' ! $G_KP.$G_LSS.$G_SUN.$_IMS_PLC_X, Definition
         subvar.intent (            $_IMS_PLC_X                   ) = 2                       ! Intent
         subvar.status (            $_IMS_PLC_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IMS_PLC_X                   ) = 'x-pos. of connection InterMediate speed Stage PLanet Carrier to Low Speed Stage SUN (wrt. Low Speed Stage reference frame)' ! Comment

      subvargroup.end (             $G_SUN                        )                           ! $G_KP.$G_LSS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
   subvargroup.end (                $G_LSS                        )                           ! $G_KP.$G_LSS
   subvargroup.txt (                $G_LSS                        ) = 'Low Speed Stage'       ! Comment
   subvargroup.begin (              $G_IMS                        )                           ! $G_KP.$G_IMS
      subvargroup.begin (           $G_PLC                        )                           ! $G_KP.$G_IMS.$G_PLC
         subvar.str (               $_PLT_R                       ) = '$G_PA.$G_BR.$G_IMS.$G_PLT.$_R' ! $G_KP.$G_IMS.$G_PLC.$_PLT_R, Definition
         subvar.intent (            $_PLT_R                       ) = 2                       ! Intent
         subvar.status (            $_PLT_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PLT_R                       ) = 'radial pos. InterMediate speed Stage PLaneTs (wrt. InterMediate speed Stage reference frame)' ! Comment

         subvar.str (               $_BR1_X                       ) = '$G_PA.$G_BR.$G_IMS.$G_PLC.$_1_X' ! $G_KP.$G_IMS.$G_PLC.$_BR1_X, Definition
         subvar.intent (            $_BR1_X                       ) = 2                       ! Intent
         subvar.status (            $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR1_X                       ) = 'x-pos. InterMediate speed Stage PLaneT Bearing 1 (wrt. InterMediate speed Stage reference frame)' ! Comment

         subvar.str (               $_BR2_X                       ) = '$G_PA.$G_BR.$G_IMS.$G_PLC.$_2_X' ! $G_KP.$G_IMS.$G_PLC.$_BR2_X, Definition
         subvar.intent (            $_BR2_X                       ) = 2                       ! Intent
         subvar.status (            $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR2_X                       ) = 'x-pos. InterMediate speed Stage PLaneT Bearing 2 (wrt. InterMediate speed Stage reference frame)' ! Comment

         subvar.str (               $_LSS_SUN_X                   ) = '$G_HP.$G_GBX.$G_LSS.$_X\n- $G_HP.$G_GBX.$G_IMS.$_X\n+ $G_PA.$G_SCN.$_LSS_2_IMS_X' ! $G_KP.$G_IMS.$G_PLC.$_LSS_SUN_X, Definition
         subvar.intent (            $_LSS_SUN_X                   ) = 2                       ! Intent
         subvar.status (            $_LSS_SUN_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_LSS_SUN_X                   ) = 'x-pos. of connection InterMediate Speed stage PLanet Carrier to Low Speed Stage SUN (wrt. InterMediate Speed stage reference frame)' ! Comment

      subvargroup.end (             $G_PLC                        )                           ! $G_KP.$G_IMS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_KP.$G_IMS.$G_PLT
         subvar.str (               $_BR1_X                       ) = '$G_PA.$G_BR.$G_IMS.$G_PLT.$_1_X' ! $G_KP.$G_IMS.$G_PLT.$_BR1_X, Definition
         subvar.intent (            $_BR1_X                       ) = 2                       ! Intent
         subvar.status (            $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR1_X                       ) = 'x-pos. InterMediate speed Stage PLaneT Bearing 1 (wrt. InterMediate speed Stage reference frame)' ! Comment

         subvar.str (               $_BR2_X                       ) = '$G_PA.$G_BR.$G_IMS.$G_PLT.$_2_X' ! $G_KP.$G_IMS.$G_PLT.$_BR2_X, Definition
         subvar.intent (            $_BR2_X                       ) = 2                       ! Intent
         subvar.status (            $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR2_X                       ) = 'x-pos. InterMediate speed Stage PLaneT Bearing 2 (wrt. InterMediate speed Stage reference frame)' ! Comment

      subvargroup.end (             $G_PLT                        )                           ! $G_KP.$G_IMS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLanets'               ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_KP.$G_IMS.$G_SUN
         subvar.str (               $_HSS_BGR_X                   ) = '$G_PA.$G_SCN.$_IMS_2_HSS_X' ! $G_KP.$G_IMS.$G_SUN.$_HSS_BGR_X, Definition
         subvar.intent (            $_HSS_BGR_X                   ) = 2                       ! Intent
         subvar.status (            $_HSS_BGR_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_HSS_BGR_X                   ) = 'x-pos. of connection High Speed Stage Bull Gear to InterMediate Speed stage SUN (wrt. InterMediate Speed stage reference frame)' ! Comment

      subvargroup.end (             $G_SUN                        )                           ! $G_KP.$G_IMS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
   subvargroup.end (                $G_IMS                        )                           ! $G_KP.$G_IMS
   subvargroup.txt (                $G_IMS                        ) = 'InterMediate Speed Stage' ! Comment
   subvargroup.begin (              $G_HSS                        )                           ! $G_KP.$G_HSS
      subvargroup.begin (           $G_BGR                        )                           ! $G_KP.$G_HSS.$G_BGR
         subvar.str (               $_BR1_X                       ) = '$G_PA.$G_BR.$G_HSS.$G_BGR.$_1_X' ! $G_KP.$G_HSS.$G_BGR.$_BR1_X, Definition
         subvar.intent (            $_BR1_X                       ) = 2                       ! Intent
         subvar.status (            $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR1_X                       ) = 'x-pos. of Bull GeaR BeaRing 1 (wrt. High Speed Stage reference frame)' ! Comment

         subvar.str (               $_BR2_X                       ) = '$G_PA.$G_BR.$G_HSS.$G_BGR.$_2_X' ! $G_KP.$G_HSS.$G_BGR.$_BR2_X, Definition
         subvar.intent (            $_BR2_X                       ) = 2                       ! Intent
         subvar.status (            $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR2_X                       ) = 'x-pos. of Bull GeaR BeaRing 2 (wrt. High Speed Stage reference frame)' ! Comment

         subvar.str (               $_IMS_SUN_X                   ) = '$G_HP.$G_GBX.$G_IMS.$_X\n- $G_HP.$G_GBX.$G_HSS.$_X\n+ $G_PA.$G_SCN.$_IMS_2_HSS_X\n' ! $G_KP.$G_HSS.$G_BGR.$_IMS_SUN_X, Definition
         subvar.intent (            $_IMS_SUN_X                   ) = 2                       ! Intent
         subvar.status (            $_IMS_SUN_X                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IMS_SUN_X                   ) = 'x-pos. of connection High speed stage Bull GeaR to InnterMediate speed Stage SUN (wrt. High Speed Stage reference frame)' ! Comment

      subvargroup.end (             $G_BGR                        )                           ! $G_KP.$G_HSS.$G_BGR
      subvargroup.txt (             $G_BGR                        ) = 'Bull GeaR'             ! Comment
      subvargroup.begin (           $G_HSH                        )                           ! $G_KP.$G_HSS.$G_HSH
         subvar.str (               $_BR1_X                       ) = '$G_PA.$G_BR.$G_HSS.$G_HSH.$_1_X' ! $G_KP.$G_HSS.$G_HSH.$_BR1_X, Definition
         subvar.intent (            $_BR1_X                       ) = 2                       ! Intent
         subvar.status (            $_BR1_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR1_X                       ) = 'x-pos. of High speed SHaft BeaRing 1 (wrt. High Speed Stage reference frame)' ! Comment

         subvar.str (               $_BR2_X                       ) = '$G_PA.$G_BR.$G_HSS.$G_HSH.$_2_X' ! $G_KP.$G_HSS.$G_HSH.$_BR2_X, Definition
         subvar.intent (            $_BR2_X                       ) = 2                       ! Intent
         subvar.status (            $_BR2_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_BR2_X                       ) = 'x-pos. of High speed SHaft BeaRing 2 (wrt. High Speed Stage reference frame)' ! Comment

         subvar.str (               $_CPL_X                       ) = '$G_HP.$G_CPL.$_X - $G_HP.$G_GBX.$_X\n- $G_HP.$G_GBX.$G_HSS.$_X\n+ $G_PA.$G_SCN.$_GBX_2_CPL_X' ! $G_KP.$G_HSS.$G_HSH.$_CPL_X, Definition
         subvar.intent (            $_CPL_X                       ) = 2                       ! Intent
         subvar.status (            $_CPL_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CPL_X                       ) = 'x-pos. of connection High speed SHaft to CouPLing (wrt. High Speed Stage reference frame)' ! Comment

      subvargroup.end (             $G_HSH                        )                           ! $G_KP.$G_HSS.$G_HSH
      subvargroup.txt (             $G_HSH                        ) = 'High speed SHaft'      ! Comment
   subvargroup.end (                $G_HSS                        )                           ! $G_KP.$G_HSS
   subvargroup.txt (                $G_HSS                        ) = 'High Speed Stage'      ! Comment
subvargroup.end (                   $G_KP                         )                           ! $G_KP
subvargroup.txt (                   $G_KP                         ) = 'Kinematic Points'      ! Comment

subvargroup.begin (                 $G_HL                         )                           ! $G_HL
   subvar.str (                     $_GBX_I                       ) = '($G_PA.$G_GER.$G_LSS.$G_RNG.$_NT/$G_PA.$G_GER.$G_LSS.$G_SUN.$_NT + 1) \n* ($G_PA.$G_GER.$G_IMS.$G_RNG.$_NT/$G_PA.$G_GER.$G_IMS.$G_SUN.$_NT + 1)\n*($G_PA.$G_GER.$G_HSS.$G_BGR.$_NT/$G_PA.$G_GER.$G_HSS.$G_PIN.$_NT)' ! $G_HL.$_GBX_I, Definition
   subvar.intent (                  $_GBX_I                       ) = 2                       ! Intent
   subvar.txt (                     $_GBX_I                       ) = 'Gear box ratio; [br]I = (NT_LSS_RNG / NT_LSS_SUN + 1)[br]*(NT_IMS_RNG / NT_IMS_SUN + 1)[br]*(NT_HSS_BGR/NT_HSS_PIN);' ! Comment

   subvar.str (                     $_TLT_ANG                     ) = '$G_INTERFACE.$G_031_MFR.$G_HL.$_TLT_ANG' ! $G_HL.$_TLT_ANG, Definition
   subvar.intent (                  $_TLT_ANG                     ) = 2                       ! Intent
   subvar.status (                  $_TLT_ANG                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
   subvar.txt (                     $_TLT_ANG                     ) = 'relative angle (about beta) between DriveTRain and HouSinG reference marker (TiLT angle)' ! Comment

subvargroup.end (                   $G_HL                         )                           ! $G_HL
subvargroup.txt (                   $G_HL                         ) = 'Help Values'           ! Comment

subvargroup.begin (                 $G_BP                         )                           ! $G_BP
   subvargroup.begin (              $G_HSG                        )                           ! $G_BP.$G_HSG
      subvar.str (                  $_M                           ) = '25801.62234198219 kg'  ! $G_BP.$G_HSG.$_M, Definition
      subvar.intent (               $_M                           ) = 0                       ! Intent
      subvar.status (               $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_M                           ) = 'Mass'                  ! Comment

      subvar.str (                  $_CM_X                        ) = '0.7313660751626986 m'  ! $G_BP.$G_HSG.$_CM_X, Definition
      subvar.intent (               $_CM_X                        ) = 0                       ! Intent
      subvar.status (               $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

      subvar.str (                  $_CM_Y                        ) = '0.01095648032646533 m' ! $G_BP.$G_HSG.$_CM_Y, Definition
      subvar.intent (               $_CM_Y                        ) = 0                       ! Intent
      subvar.status (               $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

      subvar.str (                  $_CM_Z                        ) = '0.04612264143208118 m' ! $G_BP.$G_HSG.$_CM_Z, Definition
      subvar.intent (               $_CM_Z                        ) = 0                       ! Intent
      subvar.status (               $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

      subvar.str (                  $_IXX                         ) = '31100.46123529516 kgm^2' ! $G_BP.$G_HSG.$_IXX, Definition
      subvar.intent (               $_IXX                         ) = 0                       ! Intent
      subvar.status (               $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IYY                         ) = '41903.18149850657 kgm^2' ! $G_BP.$G_HSG.$_IYY, Definition
      subvar.intent (               $_IYY                         ) = 0                       ! Intent
      subvar.status (               $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IZZ                         ) = '44840.13548065814 kgm^2' ! $G_BP.$G_HSG.$_IZZ, Definition
      subvar.intent (               $_IZZ                         ) = 0                       ! Intent
      subvar.status (               $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_HSG.$_BODY_TYPE, Definition
      subvar.intent (               $_BODY_TYPE                   ) = 0                       ! Intent
      subvar.status (               $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.desc (       1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
      subvar.desc (       2 ,       $_BODY_TYPE                   ) = ''                      ! Description
      subvar.desc (       3 ,       $_BODY_TYPE                   ) = ''                      ! Description
      subvar.discr.desc (   1 ,     $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
      subvar.discr.desc (   2 ,     $_BODY_TYPE                   ) = 'Flexible (modal)'      ! Description of discrete values
      subvar.discr.str (   1 ,      $_BODY_TYPE                   ) = '0'                     ! Discrete values
      subvar.discr.str (   2 ,      $_BODY_TYPE                   ) = '1'                     ! Discrete values
      subvar.txt (                  $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

      subvargroup.begin (           $G_FLX                        )                           ! $G_BP.$G_HSG.$G_FLX
         subvargroup.begin (        $G_FBI                        )                           ! $G_BP.$G_HSG.$G_FLX.$G_FBI
            subvar.str (            $_FILE_ID                     ) = '"032_GBX_HSG_wo_GW.fbi"' ! $G_BP.$G_HSG.$G_FLX.$G_FBI.$_FILE_ID, Definition
            subvar.intent (         $_FILE_ID                     ) = 0                       ! Intent
            subvar.status (         $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_FILE_ID                     ) = 'FBI file reference'    ! Description
            subvar.desc (   2 ,     $_FILE_ID                     ) = ''                      ! Description
            subvar.desc (   3 ,     $_FILE_ID                     ) = ''                      ! Description
            subvar.txt (            $_FILE_ID                     ) = 'FBI file reference'    ! Comment

         subvargroup.end (          $G_FBI                        )                           ! $G_BP.$G_HSG.$G_FLX.$G_FBI
         subvargroup.desc (   1 ,   $G_FBI                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FBI                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FBI                        ) = ''                      ! Description
         subvargroup.txt (          $G_FBI                        ) = 'FBI - flex modal'      ! Comment
         subvargroup.begin (        $G_MOD                        )                           ! $G_BP.$G_HSG.$G_FLX.$G_MOD
            subvar.str (            $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
            subvar.intent (         $_EMO_SELECTION               ) = 1                       ! Intent
            subvar.status (         $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
            subvar.desc (   2 ,     $_EMO_SELECTION               ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_SELECTION               ) = ''                      ! Description
            subvar.discr.desc (   1 , $_EMO_SELECTION             ) = 'none'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_EMO_SELECTION             ) = 'f-min,f-max'           ! Description of discrete values
            subvar.discr.desc (   3 , $_EMO_SELECTION             ) = 'f-min,n-modes'         ! Description of discrete values
            subvar.discr.desc (   4 , $_EMO_SELECTION             ) = 'f-min,all modes'       ! Description of discrete values
            subvar.discr.str (   1 , $_EMO_SELECTION              ) = '0'                     ! Discrete values
            subvar.discr.str (   2 , $_EMO_SELECTION              ) = '1'                     ! Discrete values
            subvar.discr.str (   3 , $_EMO_SELECTION              ) = '2'                     ! Discrete values
            subvar.discr.str (   4 , $_EMO_SELECTION              ) = '3'                     ! Discrete values
            subvar.txt (            $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

            subvar.str (            $_EMO_F_DESIRED               ) = '1250 Hz'               ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
            subvar.intent (         $_EMO_F_DESIRED               ) = 1                       ! Intent
            subvar.status (         $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
            subvar.desc (   2 ,     $_EMO_F_DESIRED               ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_F_DESIRED               ) = ''                      ! Description
            subvar.txt (            $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

            subvar.str (            $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
            subvar.intent (         $_EMO_F_MIN                   ) = 1                       ! Intent
            subvar.status (         $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
            subvar.desc (   2 ,     $_EMO_F_MIN                   ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_F_MIN                   ) = ''                      ! Description
            subvar.txt (            $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

            subvar.str (            $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
            subvar.intent (         $_EMO_F_MAX                   ) = 1                       ! Intent
            subvar.status (         $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
            subvar.desc (   2 ,     $_EMO_F_MAX                   ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_F_MAX                   ) = ''                      ! Description
            subvar.txt (            $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

            subvar.str (            $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
            subvar.intent (         $_EMO_N_MODES                 ) = 1                       ! Intent
            subvar.status (         $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
            subvar.desc (   2 ,     $_EMO_N_MODES                 ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_N_MODES                 ) = ''                      ! Description
            subvar.txt (            $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

            subvar.str (            $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
            subvar.intent (         $_IMO_SELECTION               ) = 1                       ! Intent
            subvar.status (         $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
            subvar.desc (   2 ,     $_IMO_SELECTION               ) = ''                      ! Description
            subvar.desc (   3 ,     $_IMO_SELECTION               ) = ''                      ! Description
            subvar.discr.desc (   1 , $_IMO_SELECTION             ) = 'None'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_IMO_SELECTION             ) = 'IRM'                   ! Description of discrete values
            subvar.discr.desc (   3 , $_IMO_SELECTION             ) = 'FRM Auto'              ! Description of discrete values
            subvar.discr.str (   1 , $_IMO_SELECTION              ) = '-1'                    ! Discrete values
            subvar.discr.str (   2 , $_IMO_SELECTION              ) = '0'                     ! Discrete values
            subvar.discr.str (   3 , $_IMO_SELECTION              ) = '1'                     ! Discrete values
            subvar.txt (            $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

            subvar.str (            $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
            subvar.intent (         $_TRANS_F_SWITCH              ) = 1                       ! Intent
            subvar.status (         $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
            subvar.desc (   2 ,     $_TRANS_F_SWITCH              ) = ''                      ! Description
            subvar.desc (   3 ,     $_TRANS_F_SWITCH              ) = ''                      ! Description
            subvar.discr.desc (   1 , $_TRANS_F_SWITCH            ) = 'None'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_TRANS_F_SWITCH            ) = 'Manual'                ! Description of discrete values
            subvar.discr.str (   1 , $_TRANS_F_SWITCH             ) = '0'                     ! Discrete values
            subvar.discr.str (   2 , $_TRANS_F_SWITCH             ) = '1'                     ! Discrete values
            subvar.txt (            $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

            subvar.str (            $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
            subvar.intent (         $_TRANS_F_LIMIT               ) = 1                       ! Intent
            subvar.status (         $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
            subvar.desc (   2 ,     $_TRANS_F_LIMIT               ) = ''                      ! Description
            subvar.desc (   3 ,     $_TRANS_F_LIMIT               ) = ''                      ! Description
            subvar.txt (            $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

            subvar.str (            $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
            subvar.intent (         $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
            subvar.status (         $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
            subvar.desc (   2 ,     $_CUTOFF_F_SWITCH             ) = ''                      ! Description
            subvar.desc (   3 ,     $_CUTOFF_F_SWITCH             ) = ''                      ! Description
            subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH           ) = 'None'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH           ) = 'Auto'                  ! Description of discrete values
            subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH           ) = 'Manual'                ! Description of discrete values
            subvar.discr.str (   1 , $_CUTOFF_F_SWITCH            ) = '0'                     ! Discrete values
            subvar.discr.str (   2 , $_CUTOFF_F_SWITCH            ) = '1'                     ! Discrete values
            subvar.discr.str (   3 , $_CUTOFF_F_SWITCH            ) = '2'                     ! Discrete values
            subvar.txt (            $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

            subvar.str (            $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_HSG.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
            subvar.intent (         $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
            subvar.status (         $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
            subvar.desc (   2 ,     $_CUTOFF_F_LIMIT              ) = ''                      ! Description
            subvar.desc (   3 ,     $_CUTOFF_F_LIMIT              ) = ''                      ! Description
            subvar.txt (            $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

         subvargroup.end (          $G_MOD                        )                           ! $G_BP.$G_HSG.$G_FLX.$G_MOD
         subvargroup.desc (   1 ,   $G_MOD                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_MOD                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_MOD                        ) = ''                      ! Description
         subvargroup.txt (          $G_MOD                        ) = 'MODes'                 ! Comment
         subvargroup.begin (        $G_DMP                        )                           ! $G_BP.$G_HSG.$G_FLX.$G_DMP
            subvar.str (            $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_LOW, Definition
            subvar.intent (         $_D_LOW                       ) = 1                       ! Intent
            subvar.status (         $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
            subvar.desc (   2 ,     $_D_LOW                       ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_LOW                       ) = ''                      ! Description
            subvar.txt (            $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

            subvar.str (            $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_HIGH, Definition
            subvar.intent (         $_D_HIGH                      ) = 1                       ! Intent
            subvar.status (         $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
            subvar.desc (   2 ,     $_D_HIGH                      ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_HIGH                      ) = ''                      ! Description
            subvar.txt (            $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

            subvar.str (            $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_1, Definition
            subvar.intent (         $_F_1                         ) = 1                       ! Intent
            subvar.status (         $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_1                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_1                         ) = ''                      ! Description
            subvar.txt (            $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_2                         ) = '0.5 * $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_2, Definition
            subvar.intent (         $_F_2                         ) = 1                       ! Intent
            subvar.status (         $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_2                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_2                         ) = ''                      ! Description
            subvar.txt (            $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_3                         ) = '1.0 * $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_3, Definition
            subvar.intent (         $_F_3                         ) = 1                       ! Intent
            subvar.status (         $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_3                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_3                         ) = ''                      ! Description
            subvar.txt (            $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_4                         ) = '1.5 * $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_4, Definition
            subvar.intent (         $_F_4                         ) = 1                       ! Intent
            subvar.status (         $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_4                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_4                         ) = ''                      ! Description
            subvar.txt (            $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_5                         ) = '2.0 * $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_5, Definition
            subvar.intent (         $_F_5                         ) = 1                       ! Intent
            subvar.status (         $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_5                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_5                         ) = ''                      ! Description
            subvar.txt (            $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_6                         ) = '6.0 * $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_6, Definition
            subvar.intent (         $_F_6                         ) = 1                       ! Intent
            subvar.status (         $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_6                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_6                         ) = ''                      ! Description
            subvar.txt (            $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_1                         ) = '$G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_1, Definition
            subvar.intent (         $_D_1                         ) = 1                       ! Intent
            subvar.status (         $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_1                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_1                         ) = ''                      ! Description
            subvar.txt (            $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_2                         ) = '$G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_2, Definition
            subvar.intent (         $_D_2                         ) = 1                       ! Intent
            subvar.status (         $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_2                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_2                         ) = ''                      ! Description
            subvar.txt (            $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_3                         ) = '$G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_3, Definition
            subvar.intent (         $_D_3                         ) = 1                       ! Intent
            subvar.status (         $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_3                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_3                         ) = ''                      ! Description
            subvar.txt (            $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_4                         ) = '$G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_4, Definition
            subvar.intent (         $_D_4                         ) = 1                       ! Intent
            subvar.status (         $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_4                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_4                         ) = ''                      ! Description
            subvar.txt (            $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_5                         ) = '$G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_5, Definition
            subvar.intent (         $_D_5                         ) = 1                       ! Intent
            subvar.status (         $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_5                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_5                         ) = ''                      ! Description
            subvar.txt (            $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_6                         ) = '$G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_6, Definition
            subvar.intent (         $_D_6                         ) = 1                       ! Intent
            subvar.status (         $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_6                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_6                         ) = ''                      ! Description
            subvar.txt (            $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

         subvargroup.end (          $G_DMP                        )                           ! $G_BP.$G_HSG.$G_FLX.$G_DMP
         subvargroup.desc (   1 ,   $G_DMP                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_DMP                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_DMP                        ) = ''                      ! Description
         subvargroup.txt (          $G_DMP                        ) = 'DaMPing'               ! Comment
      subvargroup.end (             $G_FLX                        )                           ! $G_BP.$G_HSG.$G_FLX
      subvargroup.desc (   1 ,      $G_FLX                        ) = ''                      ! Description
      subvargroup.desc (   2 ,      $G_FLX                        ) = ''                      ! Description
      subvargroup.desc (   3 ,      $G_FLX                        ) = ''                      ! Description
      subvargroup.txt (             $G_FLX                        ) = 'FLeXible body properties' ! Comment
   subvargroup.end (                $G_HSG                        )                           ! $G_BP.$G_HSG
   subvargroup.txt (                $G_HSG                        ) = 'HouSinG'               ! Comment
   subvargroup.begin (              $G_LSS                        )                           ! $G_BP.$G_LSS
      subvargroup.begin (           $G_PLC                        )                           ! $G_BP.$G_LSS.$G_PLC
         subvar.str (               $_M                           ) = '7743.2875059 kg'       ! $G_BP.$G_LSS.$G_PLC.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '-0.1020889 m'          ! $G_BP.$G_LSS.$G_PLC.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_PLC.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_PLC.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '3665.0308275 kgm^2'    ! $G_BP.$G_LSS.$G_PLC.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '3206.0445988 kgm^2'    ! $G_BP.$G_LSS.$G_PLC.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '3206.0445988 kgm^2'    ! $G_BP.$G_LSS.$G_PLC.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_LSS.$G_PLC.$_BODY_TYPE, Definition
         subvar.intent (            $_BODY_TYPE                   ) = 0                       ! Intent
         subvar.status (            $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.desc (    1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
         subvar.desc (    2 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.desc (    3 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.discr.desc (   1 ,  $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_BODY_TYPE                   ) = 'Flexible (modal)'      ! Description of discrete values
         subvar.discr.str (   1 ,   $_BODY_TYPE                   ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_BODY_TYPE                   ) = '1'                     ! Discrete values
         subvar.txt (               $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

         subvargroup.begin (        $G_FLX                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX
            subvargroup.begin (     $G_FBI                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_FBI
               subvar.str (         $_FILE_ID                     ) = '"032_GBX_LSS_PLC.fbi"' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_FBI.$_FILE_ID, Definition
               subvar.intent (      $_FILE_ID                     ) = 0                       ! Intent
               subvar.status (      $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_FILE_ID                     ) = 'FBI file reference'    ! Description
               subvar.desc (   2 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.desc (   3 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.txt (         $_FILE_ID                     ) = 'FBI file reference'    ! Comment

            subvargroup.end (       $G_FBI                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_FBI
            subvargroup.desc (   1 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_FBI                       ) = ''                      ! Description
            subvargroup.txt (       $G_FBI                        ) = 'FBI - flex modal'      ! Comment
            subvargroup.begin (     $G_MOD                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD
               subvar.str (         $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
               subvar.intent (      $_EMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
               subvar.desc (   2 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_EMO_SELECTION          ) = 'none'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_EMO_SELECTION          ) = 'f-min,f-max'           ! Description of discrete values
               subvar.discr.desc (   3 , $_EMO_SELECTION          ) = 'f-min,n-modes'         ! Description of discrete values
               subvar.discr.desc (   4 , $_EMO_SELECTION          ) = 'f-min,all modes'       ! Description of discrete values
               subvar.discr.str (   1 , $_EMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_EMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_EMO_SELECTION           ) = '2'                     ! Discrete values
               subvar.discr.str (   4 , $_EMO_SELECTION           ) = '3'                     ! Discrete values
               subvar.txt (         $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

               subvar.str (         $_EMO_F_DESIRED               ) = '65 Hz'                 ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
               subvar.intent (      $_EMO_F_DESIRED               ) = 1                       ! Intent
               subvar.status (      $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
               subvar.desc (   2 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.txt (         $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

               subvar.str (         $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
               subvar.intent (      $_EMO_F_MIN                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
               subvar.intent (      $_EMO_F_MAX                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
               subvar.intent (      $_EMO_N_MODES                 ) = 1                       ! Intent
               subvar.status (      $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
               subvar.desc (   2 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.txt (         $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

               subvar.str (         $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
               subvar.intent (      $_IMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
               subvar.desc (   2 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_IMO_SELECTION          ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_IMO_SELECTION          ) = 'IRM'                   ! Description of discrete values
               subvar.discr.desc (   3 , $_IMO_SELECTION          ) = 'FRM Auto'              ! Description of discrete values
               subvar.discr.str (   1 , $_IMO_SELECTION           ) = '-1'                    ! Discrete values
               subvar.discr.str (   2 , $_IMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   3 , $_IMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.txt (         $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

               subvar.str (         $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
               subvar.intent (      $_TRANS_F_SWITCH              ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.discr.desc (   1 , $_TRANS_F_SWITCH         ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_TRANS_F_SWITCH         ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_TRANS_F_SWITCH          ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_TRANS_F_SWITCH          ) = '1'                     ! Discrete values
               subvar.txt (         $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

               subvar.str (         $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
               subvar.intent (      $_TRANS_F_LIMIT               ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
               subvar.desc (   2 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.txt (         $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

               subvar.str (         $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
               subvar.intent (      $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH        ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH        ) = 'Auto'                  ! Description of discrete values
               subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH        ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_CUTOFF_F_SWITCH         ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_CUTOFF_F_SWITCH         ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_CUTOFF_F_SWITCH         ) = '2'                     ! Discrete values
               subvar.txt (         $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

               subvar.str (         $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
               subvar.intent (      $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.txt (         $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

            subvargroup.end (       $G_MOD                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD
            subvargroup.desc (   1 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_MOD                       ) = ''                      ! Description
            subvargroup.txt (       $G_MOD                        ) = 'MODes'                 ! Comment
            subvargroup.begin (     $G_DMP                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP
               subvar.str (         $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW, Definition
               subvar.intent (      $_D_LOW                       ) = 1                       ! Intent
               subvar.status (      $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
               subvar.desc (   2 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.txt (         $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

               subvar.str (         $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_HIGH, Definition
               subvar.intent (      $_D_HIGH                      ) = 1                       ! Intent
               subvar.status (      $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
               subvar.desc (   2 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.txt (         $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

               subvar.str (         $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_1, Definition
               subvar.intent (      $_F_1                         ) = 1                       ! Intent
               subvar.status (      $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_1                         ) = ''                      ! Description
               subvar.txt (         $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_2                         ) = '0.5 * $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_2, Definition
               subvar.intent (      $_F_2                         ) = 1                       ! Intent
               subvar.status (      $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_2                         ) = ''                      ! Description
               subvar.txt (         $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_3                         ) = '1.0 * $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_3, Definition
               subvar.intent (      $_F_3                         ) = 1                       ! Intent
               subvar.status (      $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_3                         ) = ''                      ! Description
               subvar.txt (         $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_4                         ) = '1.5 * $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_4, Definition
               subvar.intent (      $_F_4                         ) = 1                       ! Intent
               subvar.status (      $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_4                         ) = ''                      ! Description
               subvar.txt (         $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_5                         ) = '2.0 * $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_5, Definition
               subvar.intent (      $_F_5                         ) = 1                       ! Intent
               subvar.status (      $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_5                         ) = ''                      ! Description
               subvar.txt (         $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_6                         ) = '6.0 * $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_6, Definition
               subvar.intent (      $_F_6                         ) = 1                       ! Intent
               subvar.status (      $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_6                         ) = ''                      ! Description
               subvar.txt (         $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_1                         ) = '$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_1, Definition
               subvar.intent (      $_D_1                         ) = 1                       ! Intent
               subvar.status (      $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_1                         ) = ''                      ! Description
               subvar.txt (         $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_2                         ) = '$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_2, Definition
               subvar.intent (      $_D_2                         ) = 1                       ! Intent
               subvar.status (      $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_2                         ) = ''                      ! Description
               subvar.txt (         $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_3                         ) = '$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_3, Definition
               subvar.intent (      $_D_3                         ) = 1                       ! Intent
               subvar.status (      $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_3                         ) = ''                      ! Description
               subvar.txt (         $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_4                         ) = '$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_4, Definition
               subvar.intent (      $_D_4                         ) = 1                       ! Intent
               subvar.status (      $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_4                         ) = ''                      ! Description
               subvar.txt (         $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_5                         ) = '$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_5, Definition
               subvar.intent (      $_D_5                         ) = 1                       ! Intent
               subvar.status (      $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_5                         ) = ''                      ! Description
               subvar.txt (         $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_6                         ) = '$G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_6, Definition
               subvar.intent (      $_D_6                         ) = 1                       ! Intent
               subvar.status (      $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_6                         ) = ''                      ! Description
               subvar.txt (         $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

            subvargroup.end (       $G_DMP                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP
            subvargroup.desc (   1 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_DMP                       ) = ''                      ! Description
            subvargroup.txt (       $G_DMP                        ) = 'DaMPing'               ! Comment
         subvargroup.end (          $G_FLX                        )                           ! $G_BP.$G_LSS.$G_PLC.$G_FLX
         subvargroup.desc (   1 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.txt (          $G_FLX                        ) = 'FLeXible body properties' ! Comment
      subvargroup.end (             $G_PLC                        )                           ! $G_BP.$G_LSS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_BP.$G_LSS.$G_PLT
         subvar.str (               $_M                           ) = '1780.200111345054 kg'  ! $G_BP.$G_LSS.$G_PLT.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_PLT.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_PLT.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_PLT.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '208.3090195355559 kgm^2' ! $G_BP.$G_LSS.$G_PLT.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '145.2588176558727 kgm^2' ! $G_BP.$G_LSS.$G_PLT.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '145.2588176558727 kgm^2' ! $G_BP.$G_LSS.$G_PLT.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_LSS.$G_PLT.$_BODY_TYPE, Definition
         subvar.intent (            $_BODY_TYPE                   ) = 0                       ! Intent
         subvar.status (            $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.desc (    1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
         subvar.desc (    2 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.desc (    3 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.discr.desc (   1 ,  $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_BODY_TYPE                   ) = 'Flexible (modal)'      ! Description of discrete values
         subvar.discr.str (   1 ,   $_BODY_TYPE                   ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_BODY_TYPE                   ) = '1'                     ! Discrete values
         subvar.txt (               $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

         subvargroup.begin (        $G_FLX                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX
            subvargroup.begin (     $G_FBI                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI
               subvar.str (         $_FILE_ID                     ) = '"032_GBX_LSS_PLT.fbi"' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI.$_FILE_ID, Definition
               subvar.intent (      $_FILE_ID                     ) = 0                       ! Intent
               subvar.status (      $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_FILE_ID                     ) = 'FBI file reference'    ! Description
               subvar.desc (   2 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.desc (   3 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.txt (         $_FILE_ID                     ) = 'FBI file reference'    ! Comment

            subvargroup.end (       $G_FBI                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI
            subvargroup.desc (   1 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_FBI                       ) = ''                      ! Description
            subvargroup.txt (       $G_FBI                        ) = 'FBI - flex modal'      ! Comment
            subvargroup.begin (     $G_MOD                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD
               subvar.str (         $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
               subvar.intent (      $_EMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
               subvar.desc (   2 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_EMO_SELECTION          ) = 'none'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_EMO_SELECTION          ) = 'f-min,f-max'           ! Description of discrete values
               subvar.discr.desc (   3 , $_EMO_SELECTION          ) = 'f-min,n-modes'         ! Description of discrete values
               subvar.discr.desc (   4 , $_EMO_SELECTION          ) = 'f-min,all modes'       ! Description of discrete values
               subvar.discr.str (   1 , $_EMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_EMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_EMO_SELECTION           ) = '2'                     ! Discrete values
               subvar.discr.str (   4 , $_EMO_SELECTION           ) = '3'                     ! Discrete values
               subvar.txt (         $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

               subvar.str (         $_EMO_F_DESIRED               ) = '65 Hz'                 ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
               subvar.intent (      $_EMO_F_DESIRED               ) = 1                       ! Intent
               subvar.status (      $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
               subvar.desc (   2 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.txt (         $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

               subvar.str (         $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
               subvar.intent (      $_EMO_F_MIN                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
               subvar.intent (      $_EMO_F_MAX                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
               subvar.intent (      $_EMO_N_MODES                 ) = 1                       ! Intent
               subvar.status (      $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
               subvar.desc (   2 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.txt (         $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

               subvar.str (         $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
               subvar.intent (      $_IMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
               subvar.desc (   2 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_IMO_SELECTION          ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_IMO_SELECTION          ) = 'IRM'                   ! Description of discrete values
               subvar.discr.desc (   3 , $_IMO_SELECTION          ) = 'FRM Auto'              ! Description of discrete values
               subvar.discr.str (   1 , $_IMO_SELECTION           ) = '-1'                    ! Discrete values
               subvar.discr.str (   2 , $_IMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   3 , $_IMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.txt (         $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

               subvar.str (         $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
               subvar.intent (      $_TRANS_F_SWITCH              ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.discr.desc (   1 , $_TRANS_F_SWITCH         ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_TRANS_F_SWITCH         ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_TRANS_F_SWITCH          ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_TRANS_F_SWITCH          ) = '1'                     ! Discrete values
               subvar.txt (         $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

               subvar.str (         $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
               subvar.intent (      $_TRANS_F_LIMIT               ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
               subvar.desc (   2 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.txt (         $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

               subvar.str (         $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
               subvar.intent (      $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH        ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH        ) = 'Auto'                  ! Description of discrete values
               subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH        ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_CUTOFF_F_SWITCH         ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_CUTOFF_F_SWITCH         ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_CUTOFF_F_SWITCH         ) = '2'                     ! Discrete values
               subvar.txt (         $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

               subvar.str (         $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
               subvar.intent (      $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.txt (         $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

            subvargroup.end (       $G_MOD                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD
            subvargroup.desc (   1 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_MOD                       ) = ''                      ! Description
            subvargroup.txt (       $G_MOD                        ) = 'MODes'                 ! Comment
            subvargroup.begin (     $G_DMP                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP
               subvar.str (         $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_LOW, Definition
               subvar.intent (      $_D_LOW                       ) = 1                       ! Intent
               subvar.status (      $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
               subvar.desc (   2 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.txt (         $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

               subvar.str (         $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_HIGH, Definition
               subvar.intent (      $_D_HIGH                      ) = 1                       ! Intent
               subvar.status (      $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
               subvar.desc (   2 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.txt (         $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

               subvar.str (         $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_1, Definition
               subvar.intent (      $_F_1                         ) = 1                       ! Intent
               subvar.status (      $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_1                         ) = ''                      ! Description
               subvar.txt (         $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_2                         ) = '0.5 * $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_2, Definition
               subvar.intent (      $_F_2                         ) = 1                       ! Intent
               subvar.status (      $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_2                         ) = ''                      ! Description
               subvar.txt (         $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_3                         ) = '1.0 * $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_3, Definition
               subvar.intent (      $_F_3                         ) = 1                       ! Intent
               subvar.status (      $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_3                         ) = ''                      ! Description
               subvar.txt (         $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_4                         ) = '1.5 * $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_4, Definition
               subvar.intent (      $_F_4                         ) = 1                       ! Intent
               subvar.status (      $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_4                         ) = ''                      ! Description
               subvar.txt (         $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_5                         ) = '2.0 * $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_5, Definition
               subvar.intent (      $_F_5                         ) = 1                       ! Intent
               subvar.status (      $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_5                         ) = ''                      ! Description
               subvar.txt (         $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_6                         ) = '6.0 * $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_6, Definition
               subvar.intent (      $_F_6                         ) = 1                       ! Intent
               subvar.status (      $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_6                         ) = ''                      ! Description
               subvar.txt (         $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_1                         ) = '$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_1, Definition
               subvar.intent (      $_D_1                         ) = 1                       ! Intent
               subvar.status (      $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_1                         ) = ''                      ! Description
               subvar.txt (         $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_2                         ) = '$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_2, Definition
               subvar.intent (      $_D_2                         ) = 1                       ! Intent
               subvar.status (      $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_2                         ) = ''                      ! Description
               subvar.txt (         $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_3                         ) = '$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_3, Definition
               subvar.intent (      $_D_3                         ) = 1                       ! Intent
               subvar.status (      $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_3                         ) = ''                      ! Description
               subvar.txt (         $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_4                         ) = '$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_4, Definition
               subvar.intent (      $_D_4                         ) = 1                       ! Intent
               subvar.status (      $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_4                         ) = ''                      ! Description
               subvar.txt (         $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_5                         ) = '$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_5, Definition
               subvar.intent (      $_D_5                         ) = 1                       ! Intent
               subvar.status (      $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_5                         ) = ''                      ! Description
               subvar.txt (         $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_6                         ) = '$G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_6, Definition
               subvar.intent (      $_D_6                         ) = 1                       ! Intent
               subvar.status (      $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_6                         ) = ''                      ! Description
               subvar.txt (         $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

            subvargroup.end (       $G_DMP                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP
            subvargroup.desc (   1 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_DMP                       ) = ''                      ! Description
            subvargroup.txt (       $G_DMP                        ) = 'DaMPing'               ! Comment
         subvargroup.end (          $G_FLX                        )                           ! $G_BP.$G_LSS.$G_PLT.$G_FLX
         subvargroup.desc (   1 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.txt (          $G_FLX                        ) = 'FLeXible body properties' ! Comment
      subvargroup.end (             $G_PLT                        )                           ! $G_BP.$G_LSS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLaneT'                ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_BP.$G_LSS.$G_SUN
         subvar.str (               $_M                           ) = '1610.296280671487 kg'  ! $G_BP.$G_LSS.$G_SUN.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '0.2269281910014236 m'  ! $G_BP.$G_LSS.$G_SUN.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_SUN.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_LSS.$G_SUN.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '66.46889944714881 kgm^2' ! $G_BP.$G_LSS.$G_SUN.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '213.4393071805063 kgm^2' ! $G_BP.$G_LSS.$G_SUN.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '213.4393071805063 kgm^2' ! $G_BP.$G_LSS.$G_SUN.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_LSS.$G_SUN.$_BODY_TYPE, Definition
         subvar.intent (            $_BODY_TYPE                   ) = 0                       ! Intent
         subvar.status (            $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.desc (    1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
         subvar.desc (    2 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.desc (    3 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.discr.desc (   1 ,  $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_BODY_TYPE                   ) = 'Flexible (modal)'      ! Description of discrete values
         subvar.discr.desc (   3 ,  $_BODY_TYPE                   ) = 'SIMBEAM'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_BODY_TYPE                   ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_BODY_TYPE                   ) = '1'                     ! Discrete values
         subvar.discr.str (   3 ,   $_BODY_TYPE                   ) = '2'                     ! Discrete values
         subvar.txt (               $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

         subvargroup.begin (        $G_FLX                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX
            subvargroup.begin (     $G_FBI                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_FBI
               subvar.str (         $_FILE_ID                     ) = '"032_GBX_LSS_SUN.fbi"' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_FBI.$_FILE_ID, Definition
               subvar.intent (      $_FILE_ID                     ) = 0                       ! Intent
               subvar.status (      $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_FILE_ID                     ) = 'FBI file reference'    ! Description
               subvar.desc (   2 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.desc (   3 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.txt (         $_FILE_ID                     ) = 'FBI file reference'    ! Comment

            subvargroup.end (       $G_FBI                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_FBI
            subvargroup.desc (   1 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_FBI                       ) = ''                      ! Description
            subvargroup.txt (       $G_FBI                        ) = 'FBI - flex modal'      ! Comment
            subvargroup.begin (     $G_SBM                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM
               subvargroup.begin (  $G_MAT                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT
                  subvar.str (      $_DEN                         ) = '7850 kg/m^3'           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_DEN, Definition
                  subvar.intent (   $_DEN                         ) = 0                       ! Intent
                  subvar.status (   $_DEN                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_DEN                       ) = ''                      ! Description
                  subvar.desc (   2 , $_DEN                       ) = ''                      ! Description
                  subvar.desc (   3 , $_DEN                       ) = ''                      ! Description
                  subvar.txt (      $_DEN                         ) = 'DENsity'               ! Comment

                  subvar.str (      $_YMD                         ) = '2.1e11 N/m^2'          ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_YMD, Definition
                  subvar.intent (   $_YMD                         ) = 0                       ! Intent
                  subvar.status (   $_YMD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_YMD                       ) = ''                      ! Description
                  subvar.desc (   2 , $_YMD                       ) = ''                      ! Description
                  subvar.desc (   3 , $_YMD                       ) = ''                      ! Description
                  subvar.txt (      $_YMD                         ) = 'Young\'s MoDulus'      ! Comment

                  subvar.str (      $_PRT                         ) = '0.3'                   ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_PRT, Definition
                  subvar.intent (   $_PRT                         ) = 0                       ! Intent
                  subvar.status (   $_PRT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_PRT                       ) = ''                      ! Description
                  subvar.desc (   2 , $_PRT                       ) = ''                      ! Description
                  subvar.desc (   3 , $_PRT                       ) = ''                      ! Description
                  subvar.txt (      $_PRT                         ) = 'Poisson\'s RaTio'      ! Comment

               subvargroup.end (    $G_MAT                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT
               subvargroup.desc (   1 , $G_MAT                    ) = ''                      ! Description
               subvargroup.desc (   2 , $G_MAT                    ) = ''                      ! Description
               subvargroup.desc (   3 , $G_MAT                    ) = ''                      ! Description
               subvargroup.txt (    $G_MAT                        ) = 'MATerial'              ! Comment
               subvargroup.begin (  $G_XSC                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC
                  subvar.str (      $_D_I                         ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_I' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I, Definition
                  subvar.intent (   $_D_I                         ) = 1                       ! Intent
                  subvar.status (   $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_I                         ) = 'Diameter In'           ! Comment

                  subvar.str (      $_D_O_1                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_1' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_1, Definition
                  subvar.intent (   $_D_O_1                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_1                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_1                       ) = 'Diameter Out 1'        ! Comment

                  subvar.str (      $_D_O_2                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_1' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_2, Definition
                  subvar.intent (   $_D_O_2                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_2                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_2                       ) = 'Diameter Out 2'        ! Comment

                  subvar.str (      $_D_O_3                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_3, Definition
                  subvar.intent (   $_D_O_3                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_3                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_3                       ) = 'Diameter Out 3'        ! Comment

                  subvar.str (      $_D_O_4                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_4, Definition
                  subvar.intent (   $_D_O_4                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_4                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_4                       ) = 'Diameter Out 4'        ! Comment

                  subvar.str (      $_D_O_5                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_5, Definition
                  subvar.intent (   $_D_O_5                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_5                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_5                       ) = 'Diameter Out 5'        ! Comment

                  subvar.str (      $_D_O_6                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_6, Definition
                  subvar.intent (   $_D_O_6                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_6                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_6                       ) = 'Diameter Out 6'        ! Comment

                  subvar.str (      $_D_O_7                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_7, Definition
                  subvar.intent (   $_D_O_7                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_7                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_7                       ) = 'Diameter Out 7'        ! Comment

                  subvar.str (      $_D_O_8                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_8, Definition
                  subvar.intent (   $_D_O_8                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_8                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_8                       ) = 'Diameter Out 8'        ! Comment

                  subvar.str (      $_D_O_9                       ) = '$G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_4' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_9, Definition
                  subvar.intent (   $_D_O_9                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_9                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_9                       ) = 'Diameter Out 9'        ! Comment

               subvargroup.end (    $G_XSC                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC
               subvargroup.txt (    $G_XSC                        ) = 'X-SeCtion'             ! Comment
            subvargroup.end (       $G_SBM                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM
            subvargroup.txt (       $G_SBM                        ) = 'SimBeaM'               ! Comment
            subvargroup.begin (     $G_MOD                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD
               subvar.str (         $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
               subvar.intent (      $_EMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
               subvar.desc (   2 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_EMO_SELECTION          ) = 'none'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_EMO_SELECTION          ) = 'f-min,f-max'           ! Description of discrete values
               subvar.discr.desc (   3 , $_EMO_SELECTION          ) = 'f-min,n-modes'         ! Description of discrete values
               subvar.discr.desc (   4 , $_EMO_SELECTION          ) = 'f-min,all modes'       ! Description of discrete values
               subvar.discr.str (   1 , $_EMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_EMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_EMO_SELECTION           ) = '2'                     ! Discrete values
               subvar.discr.str (   4 , $_EMO_SELECTION           ) = '3'                     ! Discrete values
               subvar.txt (         $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

               subvar.str (         $_EMO_F_DESIRED               ) = '330 Hz'                ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
               subvar.intent (      $_EMO_F_DESIRED               ) = 1                       ! Intent
               subvar.status (      $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
               subvar.desc (   2 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.txt (         $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

               subvar.str (         $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
               subvar.intent (      $_EMO_F_MIN                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
               subvar.intent (      $_EMO_F_MAX                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
               subvar.intent (      $_EMO_N_MODES                 ) = 1                       ! Intent
               subvar.status (      $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
               subvar.desc (   2 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.txt (         $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

               subvar.str (         $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
               subvar.intent (      $_IMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
               subvar.desc (   2 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_IMO_SELECTION          ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_IMO_SELECTION          ) = 'IRM'                   ! Description of discrete values
               subvar.discr.desc (   3 , $_IMO_SELECTION          ) = 'FRM Auto'              ! Description of discrete values
               subvar.discr.str (   1 , $_IMO_SELECTION           ) = '-1'                    ! Discrete values
               subvar.discr.str (   2 , $_IMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   3 , $_IMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.txt (         $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

               subvar.str (         $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
               subvar.intent (      $_TRANS_F_SWITCH              ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.discr.desc (   1 , $_TRANS_F_SWITCH         ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_TRANS_F_SWITCH         ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_TRANS_F_SWITCH          ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_TRANS_F_SWITCH          ) = '1'                     ! Discrete values
               subvar.txt (         $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

               subvar.str (         $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
               subvar.intent (      $_TRANS_F_LIMIT               ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
               subvar.desc (   2 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.txt (         $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

               subvar.str (         $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
               subvar.intent (      $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH        ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH        ) = 'Auto'                  ! Description of discrete values
               subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH        ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_CUTOFF_F_SWITCH         ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_CUTOFF_F_SWITCH         ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_CUTOFF_F_SWITCH         ) = '2'                     ! Discrete values
               subvar.txt (         $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

               subvar.str (         $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
               subvar.intent (      $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.txt (         $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

            subvargroup.end (       $G_MOD                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD
            subvargroup.desc (   1 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_MOD                       ) = ''                      ! Description
            subvargroup.txt (       $G_MOD                        ) = 'MODes'                 ! Comment
            subvargroup.begin (     $G_DMP                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP
               subvar.str (         $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW, Definition
               subvar.intent (      $_D_LOW                       ) = 1                       ! Intent
               subvar.status (      $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
               subvar.desc (   2 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.txt (         $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

               subvar.str (         $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_HIGH, Definition
               subvar.intent (      $_D_HIGH                      ) = 1                       ! Intent
               subvar.status (      $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
               subvar.desc (   2 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.txt (         $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

               subvar.str (         $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_1, Definition
               subvar.intent (      $_F_1                         ) = 1                       ! Intent
               subvar.status (      $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_1                         ) = ''                      ! Description
               subvar.txt (         $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_2                         ) = '0.5 * $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_2, Definition
               subvar.intent (      $_F_2                         ) = 1                       ! Intent
               subvar.status (      $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_2                         ) = ''                      ! Description
               subvar.txt (         $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_3                         ) = '1.0 * $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_3, Definition
               subvar.intent (      $_F_3                         ) = 1                       ! Intent
               subvar.status (      $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_3                         ) = ''                      ! Description
               subvar.txt (         $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_4                         ) = '1.5 * $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_4, Definition
               subvar.intent (      $_F_4                         ) = 1                       ! Intent
               subvar.status (      $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_4                         ) = ''                      ! Description
               subvar.txt (         $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_5                         ) = '2.0 * $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_5, Definition
               subvar.intent (      $_F_5                         ) = 1                       ! Intent
               subvar.status (      $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_5                         ) = ''                      ! Description
               subvar.txt (         $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_6                         ) = '6.0 * $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_6, Definition
               subvar.intent (      $_F_6                         ) = 1                       ! Intent
               subvar.status (      $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_6                         ) = ''                      ! Description
               subvar.txt (         $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_1                         ) = '$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_1, Definition
               subvar.intent (      $_D_1                         ) = 1                       ! Intent
               subvar.status (      $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_1                         ) = ''                      ! Description
               subvar.txt (         $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_2                         ) = '$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_2, Definition
               subvar.intent (      $_D_2                         ) = 1                       ! Intent
               subvar.status (      $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_2                         ) = ''                      ! Description
               subvar.txt (         $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_3                         ) = '$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_3, Definition
               subvar.intent (      $_D_3                         ) = 1                       ! Intent
               subvar.status (      $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_3                         ) = ''                      ! Description
               subvar.txt (         $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_4                         ) = '$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_4, Definition
               subvar.intent (      $_D_4                         ) = 1                       ! Intent
               subvar.status (      $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_4                         ) = ''                      ! Description
               subvar.txt (         $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_5                         ) = '$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_5, Definition
               subvar.intent (      $_D_5                         ) = 1                       ! Intent
               subvar.status (      $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_5                         ) = ''                      ! Description
               subvar.txt (         $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_6                         ) = '$G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_6, Definition
               subvar.intent (      $_D_6                         ) = 1                       ! Intent
               subvar.status (      $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_6                         ) = ''                      ! Description
               subvar.txt (         $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

            subvargroup.end (       $G_DMP                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP
            subvargroup.desc (   1 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_DMP                       ) = ''                      ! Description
            subvargroup.txt (       $G_DMP                        ) = 'DaMPing'               ! Comment
         subvargroup.end (          $G_FLX                        )                           ! $G_BP.$G_LSS.$G_SUN.$G_FLX
         subvargroup.desc (   1 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.txt (          $G_FLX                        ) = 'FLeXible body properties' ! Comment
      subvargroup.end (             $G_SUN                        )                           ! $G_BP.$G_LSS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
   subvargroup.end (                $G_LSS                        )                           ! $G_BP.$G_LSS
   subvargroup.txt (                $G_LSS                        ) = 'Low Speed Stage'       ! Comment
   subvargroup.begin (              $G_IMS                        )                           ! $G_BP.$G_IMS
      subvargroup.begin (           $G_PLC                        )                           ! $G_BP.$G_IMS.$G_PLC
         subvar.str (               $_M                           ) = '2449.972597015598 kg'  ! $G_BP.$G_IMS.$G_PLC.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '-0.004117070263840794 m' ! $G_BP.$G_IMS.$G_PLC.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_PLC.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_PLC.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '656.4956581359766 kgm^2' ! $G_BP.$G_IMS.$G_PLC.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '467.1213244148785 kgm^2' ! $G_BP.$G_IMS.$G_PLC.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '467.1213244148785 kgm^2' ! $G_BP.$G_IMS.$G_PLC.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_IMS.$G_PLC.$_BODY_TYPE, Definition
         subvar.intent (            $_BODY_TYPE                   ) = 0                       ! Intent
         subvar.status (            $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.desc (    1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
         subvar.desc (    2 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.desc (    3 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.discr.desc (   1 ,  $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_BODY_TYPE                   ) = 'Flexible (modal)'      ! Description of discrete values
         subvar.discr.str (   1 ,   $_BODY_TYPE                   ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_BODY_TYPE                   ) = '1'                     ! Discrete values
         subvar.txt (               $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

         subvargroup.begin (        $G_FLX                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX
            subvargroup.begin (     $G_FBI                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_FBI
               subvar.str (         $_FILE_ID                     ) = '"032_GBX_IMS_PLC.fbi"' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_FBI.$_FILE_ID, Definition
               subvar.intent (      $_FILE_ID                     ) = 0                       ! Intent
               subvar.status (      $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_FILE_ID                     ) = 'FBI file reference'    ! Description
               subvar.desc (   2 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.desc (   3 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.txt (         $_FILE_ID                     ) = 'FBI file reference'    ! Comment

            subvargroup.end (       $G_FBI                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_FBI
            subvargroup.desc (   1 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_FBI                       ) = ''                      ! Description
            subvargroup.txt (       $G_FBI                        ) = 'FBI - flex modal'      ! Comment
            subvargroup.begin (     $G_MOD                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD
               subvar.str (         $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
               subvar.intent (      $_EMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
               subvar.desc (   2 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_EMO_SELECTION          ) = 'none'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_EMO_SELECTION          ) = 'f-min,f-max'           ! Description of discrete values
               subvar.discr.desc (   3 , $_EMO_SELECTION          ) = 'f-min,n-modes'         ! Description of discrete values
               subvar.discr.desc (   4 , $_EMO_SELECTION          ) = 'f-min,all modes'       ! Description of discrete values
               subvar.discr.str (   1 , $_EMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_EMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_EMO_SELECTION           ) = '2'                     ! Discrete values
               subvar.discr.str (   4 , $_EMO_SELECTION           ) = '3'                     ! Discrete values
               subvar.txt (         $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

               subvar.str (         $_EMO_F_DESIRED               ) = '330 Hz'                ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
               subvar.intent (      $_EMO_F_DESIRED               ) = 1                       ! Intent
               subvar.status (      $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
               subvar.desc (   2 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.txt (         $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

               subvar.str (         $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
               subvar.intent (      $_EMO_F_MIN                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
               subvar.intent (      $_EMO_F_MAX                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
               subvar.intent (      $_EMO_N_MODES                 ) = 1                       ! Intent
               subvar.status (      $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
               subvar.desc (   2 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.txt (         $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

               subvar.str (         $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
               subvar.intent (      $_IMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
               subvar.desc (   2 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_IMO_SELECTION          ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_IMO_SELECTION          ) = 'IRM'                   ! Description of discrete values
               subvar.discr.desc (   3 , $_IMO_SELECTION          ) = 'FRM Auto'              ! Description of discrete values
               subvar.discr.str (   1 , $_IMO_SELECTION           ) = '-1'                    ! Discrete values
               subvar.discr.str (   2 , $_IMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   3 , $_IMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.txt (         $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

               subvar.str (         $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
               subvar.intent (      $_TRANS_F_SWITCH              ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.discr.desc (   1 , $_TRANS_F_SWITCH         ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_TRANS_F_SWITCH         ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_TRANS_F_SWITCH          ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_TRANS_F_SWITCH          ) = '1'                     ! Discrete values
               subvar.txt (         $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

               subvar.str (         $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
               subvar.intent (      $_TRANS_F_LIMIT               ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
               subvar.desc (   2 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.txt (         $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

               subvar.str (         $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
               subvar.intent (      $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH        ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH        ) = 'Auto'                  ! Description of discrete values
               subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH        ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_CUTOFF_F_SWITCH         ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_CUTOFF_F_SWITCH         ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_CUTOFF_F_SWITCH         ) = '2'                     ! Discrete values
               subvar.txt (         $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

               subvar.str (         $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
               subvar.intent (      $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.txt (         $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

            subvargroup.end (       $G_MOD                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD
            subvargroup.desc (   1 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_MOD                       ) = ''                      ! Description
            subvargroup.txt (       $G_MOD                        ) = 'MODes'                 ! Comment
            subvargroup.begin (     $G_DMP                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP
               subvar.str (         $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW, Definition
               subvar.intent (      $_D_LOW                       ) = 1                       ! Intent
               subvar.status (      $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
               subvar.desc (   2 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.txt (         $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

               subvar.str (         $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_HIGH, Definition
               subvar.intent (      $_D_HIGH                      ) = 1                       ! Intent
               subvar.status (      $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
               subvar.desc (   2 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.txt (         $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

               subvar.str (         $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_1, Definition
               subvar.intent (      $_F_1                         ) = 1                       ! Intent
               subvar.status (      $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_1                         ) = ''                      ! Description
               subvar.txt (         $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_2                         ) = '0.5 * $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_2, Definition
               subvar.intent (      $_F_2                         ) = 1                       ! Intent
               subvar.status (      $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_2                         ) = ''                      ! Description
               subvar.txt (         $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_3                         ) = '1.0 * $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_3, Definition
               subvar.intent (      $_F_3                         ) = 1                       ! Intent
               subvar.status (      $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_3                         ) = ''                      ! Description
               subvar.txt (         $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_4                         ) = '1.5 * $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_4, Definition
               subvar.intent (      $_F_4                         ) = 1                       ! Intent
               subvar.status (      $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_4                         ) = ''                      ! Description
               subvar.txt (         $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_5                         ) = '2.0 * $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_5, Definition
               subvar.intent (      $_F_5                         ) = 1                       ! Intent
               subvar.status (      $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_5                         ) = ''                      ! Description
               subvar.txt (         $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_6                         ) = '6.0 * $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_6, Definition
               subvar.intent (      $_F_6                         ) = 1                       ! Intent
               subvar.status (      $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_6                         ) = ''                      ! Description
               subvar.txt (         $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_1                         ) = '$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_1, Definition
               subvar.intent (      $_D_1                         ) = 1                       ! Intent
               subvar.status (      $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_1                         ) = ''                      ! Description
               subvar.txt (         $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_2                         ) = '$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_2, Definition
               subvar.intent (      $_D_2                         ) = 1                       ! Intent
               subvar.status (      $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_2                         ) = ''                      ! Description
               subvar.txt (         $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_3                         ) = '$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_3, Definition
               subvar.intent (      $_D_3                         ) = 1                       ! Intent
               subvar.status (      $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_3                         ) = ''                      ! Description
               subvar.txt (         $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_4                         ) = '$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_4, Definition
               subvar.intent (      $_D_4                         ) = 1                       ! Intent
               subvar.status (      $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_4                         ) = ''                      ! Description
               subvar.txt (         $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_5                         ) = '$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_5, Definition
               subvar.intent (      $_D_5                         ) = 1                       ! Intent
               subvar.status (      $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_5                         ) = ''                      ! Description
               subvar.txt (         $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_6                         ) = '$G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_6, Definition
               subvar.intent (      $_D_6                         ) = 1                       ! Intent
               subvar.status (      $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_6                         ) = ''                      ! Description
               subvar.txt (         $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

            subvargroup.end (       $G_DMP                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP
            subvargroup.desc (   1 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_DMP                       ) = ''                      ! Description
            subvargroup.txt (       $G_DMP                        ) = 'DaMPing'               ! Comment
         subvargroup.end (          $G_FLX                        )                           ! $G_BP.$G_IMS.$G_PLC.$G_FLX
         subvargroup.desc (   1 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.txt (          $G_FLX                        ) = 'FLeXible body properties' ! Comment
      subvargroup.end (             $G_PLC                        )                           ! $G_BP.$G_IMS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_BP.$G_IMS.$G_PLT
         subvar.str (               $_M                           ) = '658.455 kg'            ! $G_BP.$G_IMS.$G_PLT.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_PLT.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_PLT.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_PLT.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '51.577 kgm^2'          ! $G_BP.$G_IMS.$G_PLT.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '34.1344 kgm^2'         ! $G_BP.$G_IMS.$G_PLT.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '34.1344 kgm^2'         ! $G_BP.$G_IMS.$G_PLT.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvargroup.end (             $G_PLT                        )                           ! $G_BP.$G_IMS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLaneT'                ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_BP.$G_IMS.$G_SUN
         subvar.str (               $_M                           ) = '711.4775275863631 kg'  ! $G_BP.$G_IMS.$G_SUN.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '0.4900729897866236 m'  ! $G_BP.$G_IMS.$G_SUN.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_SUN.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_IMS.$G_SUN.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '14.40929570469476 kgm^2' ! $G_BP.$G_IMS.$G_SUN.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '133.1094560388961 kgm^2' ! $G_BP.$G_IMS.$G_SUN.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '133.1094560388961 kgm^2' ! $G_BP.$G_IMS.$G_SUN.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_IMS.$G_SUN.$_BODY_TYPE, Definition
         subvar.intent (            $_BODY_TYPE                   ) = 0                       ! Intent
         subvar.status (            $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.desc (    1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
         subvar.desc (    2 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.desc (    3 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.discr.desc (   1 ,  $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_BODY_TYPE                   ) = 'SIMBEAM'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_BODY_TYPE                   ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_BODY_TYPE                   ) = '2'                     ! Discrete values
         subvar.txt (               $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

         subvargroup.begin (        $G_FLX                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX
            subvargroup.begin (     $G_FBI                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_FBI
               subvar.str (         $_FILE_ID                     ) = '"spck_demo_empty.fbi"' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_FBI.$_FILE_ID, Definition
               subvar.intent (      $_FILE_ID                     ) = 0                       ! Intent
               subvar.status (      $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_FILE_ID                     ) = 'FBI file reference'    ! Description
               subvar.desc (   2 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.desc (   3 ,  $_FILE_ID                     ) = ''                      ! Description
               subvar.txt (         $_FILE_ID                     ) = 'FBI file reference'    ! Comment

            subvargroup.end (       $G_FBI                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_FBI
            subvargroup.desc (   1 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_FBI                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_FBI                       ) = ''                      ! Description
            subvargroup.txt (       $G_FBI                        ) = 'FBI - flex modal'      ! Comment
            subvargroup.begin (     $G_SBM                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM
               subvargroup.begin (  $G_MAT                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT
                  subvar.str (      $_DEN                         ) = '7850 kg/m^3'           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_DEN, Definition
                  subvar.intent (   $_DEN                         ) = 0                       ! Intent
                  subvar.status (   $_DEN                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_DEN                       ) = ''                      ! Description
                  subvar.desc (   2 , $_DEN                       ) = ''                      ! Description
                  subvar.desc (   3 , $_DEN                       ) = ''                      ! Description
                  subvar.txt (      $_DEN                         ) = 'DENsity'               ! Comment

                  subvar.str (      $_YMD                         ) = '2.1e11 N/m^2'          ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_YMD, Definition
                  subvar.intent (   $_YMD                         ) = 0                       ! Intent
                  subvar.status (   $_YMD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_YMD                       ) = ''                      ! Description
                  subvar.desc (   2 , $_YMD                       ) = ''                      ! Description
                  subvar.desc (   3 , $_YMD                       ) = ''                      ! Description
                  subvar.txt (      $_YMD                         ) = 'Young\'s MoDulus'      ! Comment

                  subvar.str (      $_PRT                         ) = '0.3'                   ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_PRT, Definition
                  subvar.intent (   $_PRT                         ) = 0                       ! Intent
                  subvar.status (   $_PRT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_PRT                       ) = ''                      ! Description
                  subvar.desc (   2 , $_PRT                       ) = ''                      ! Description
                  subvar.desc (   3 , $_PRT                       ) = ''                      ! Description
                  subvar.txt (      $_PRT                         ) = 'Poisson\'s RaTio'      ! Comment

               subvargroup.end (    $G_MAT                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT
               subvargroup.desc (   1 , $G_MAT                    ) = ''                      ! Description
               subvargroup.desc (   2 , $G_MAT                    ) = ''                      ! Description
               subvargroup.desc (   3 , $G_MAT                    ) = ''                      ! Description
               subvargroup.txt (    $G_MAT                        ) = 'MATerial'              ! Comment
               subvargroup.begin (  $G_XSC                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC
                  subvar.str (      $_D_I                         ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_I' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I, Definition
                  subvar.intent (   $_D_I                         ) = 1                       ! Intent
                  subvar.status (   $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_I                         ) = 'Diameter In'           ! Comment

                  subvar.str (      $_D_O_1                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_1' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_1, Definition
                  subvar.intent (   $_D_O_1                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_1                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_1                       ) = 'Diameter Out 1'        ! Comment

                  subvar.str (      $_D_O_2                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_1' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_2, Definition
                  subvar.intent (   $_D_O_2                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_2                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_2                       ) = 'Diameter Out 2'        ! Comment

                  subvar.str (      $_D_O_3                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_2' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_3, Definition
                  subvar.intent (   $_D_O_3                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_3                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_3                       ) = 'Diameter Out 3'        ! Comment

                  subvar.str (      $_D_O_4                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_4, Definition
                  subvar.intent (   $_D_O_4                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_4                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_4                       ) = 'Diameter Out 4'        ! Comment

                  subvar.str (      $_D_O_5                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_5, Definition
                  subvar.intent (   $_D_O_5                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_5                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_5                       ) = 'Diameter Out 5'        ! Comment

                  subvar.str (      $_D_O_6                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_6, Definition
                  subvar.intent (   $_D_O_6                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_6                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_6                       ) = 'Diameter Out 6'        ! Comment

                  subvar.str (      $_D_O_7                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_7, Definition
                  subvar.intent (   $_D_O_7                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_7                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_7                       ) = 'Diameter Out 7'        ! Comment

                  subvar.str (      $_D_O_8                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_8, Definition
                  subvar.intent (   $_D_O_8                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_8                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_8                       ) = 'Diameter Out 8'        ! Comment

                  subvar.str (      $_D_O_9                       ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_4' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_9, Definition
                  subvar.intent (   $_D_O_9                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_9                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_9                       ) = 'Diameter Out 9'        ! Comment

                  subvar.str (      $_D_O_10                      ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_4' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_10, Definition
                  subvar.intent (   $_D_O_10                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_10                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_10                      ) = 'Diameter Out 10'       ! Comment

                  subvar.str (      $_D_O_11                      ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_11, Definition
                  subvar.intent (   $_D_O_11                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_11                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_11                      ) = 'Diameter Out 11'       ! Comment

                  subvar.str (      $_D_O_12                      ) = '$G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_12, Definition
                  subvar.intent (   $_D_O_12                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_12                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_12                      ) = 'Diameter Out 12'       ! Comment

               subvargroup.end (    $G_XSC                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC
               subvargroup.txt (    $G_XSC                        ) = 'X-SeCtion'             ! Comment
            subvargroup.end (       $G_SBM                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM
            subvargroup.txt (       $G_SBM                        ) = 'SimBeaM'               ! Comment
            subvargroup.begin (     $G_MOD                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD
               subvar.str (         $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
               subvar.intent (      $_EMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
               subvar.desc (   2 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_EMO_SELECTION          ) = 'none'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_EMO_SELECTION          ) = 'f-min,f-max'           ! Description of discrete values
               subvar.discr.desc (   3 , $_EMO_SELECTION          ) = 'f-min,n-modes'         ! Description of discrete values
               subvar.discr.desc (   4 , $_EMO_SELECTION          ) = 'f-min,all modes'       ! Description of discrete values
               subvar.discr.str (   1 , $_EMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_EMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_EMO_SELECTION           ) = '2'                     ! Discrete values
               subvar.discr.str (   4 , $_EMO_SELECTION           ) = '3'                     ! Discrete values
               subvar.txt (         $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

               subvar.str (         $_EMO_F_DESIRED               ) = '1250 Hz'               ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
               subvar.intent (      $_EMO_F_DESIRED               ) = 1                       ! Intent
               subvar.status (      $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
               subvar.desc (   2 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.txt (         $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

               subvar.str (         $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
               subvar.intent (      $_EMO_F_MIN                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
               subvar.intent (      $_EMO_F_MAX                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
               subvar.intent (      $_EMO_N_MODES                 ) = 1                       ! Intent
               subvar.status (      $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
               subvar.desc (   2 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.txt (         $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

               subvar.str (         $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
               subvar.intent (      $_IMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
               subvar.desc (   2 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_IMO_SELECTION          ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_IMO_SELECTION          ) = 'IRM'                   ! Description of discrete values
               subvar.discr.desc (   3 , $_IMO_SELECTION          ) = 'FRM Auto'              ! Description of discrete values
               subvar.discr.str (   1 , $_IMO_SELECTION           ) = '-1'                    ! Discrete values
               subvar.discr.str (   2 , $_IMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   3 , $_IMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.txt (         $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

               subvar.str (         $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
               subvar.intent (      $_TRANS_F_SWITCH              ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.discr.desc (   1 , $_TRANS_F_SWITCH         ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_TRANS_F_SWITCH         ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_TRANS_F_SWITCH          ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_TRANS_F_SWITCH          ) = '1'                     ! Discrete values
               subvar.txt (         $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

               subvar.str (         $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
               subvar.intent (      $_TRANS_F_LIMIT               ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
               subvar.desc (   2 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.txt (         $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

               subvar.str (         $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
               subvar.intent (      $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH        ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH        ) = 'Auto'                  ! Description of discrete values
               subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH        ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_CUTOFF_F_SWITCH         ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_CUTOFF_F_SWITCH         ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_CUTOFF_F_SWITCH         ) = '2'                     ! Discrete values
               subvar.txt (         $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

               subvar.str (         $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
               subvar.intent (      $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.txt (         $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

            subvargroup.end (       $G_MOD                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD
            subvargroup.desc (   1 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_MOD                       ) = ''                      ! Description
            subvargroup.txt (       $G_MOD                        ) = 'MODes'                 ! Comment
            subvargroup.begin (     $G_DMP                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP
               subvar.str (         $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW, Definition
               subvar.intent (      $_D_LOW                       ) = 1                       ! Intent
               subvar.status (      $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
               subvar.desc (   2 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.txt (         $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

               subvar.str (         $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_HIGH, Definition
               subvar.intent (      $_D_HIGH                      ) = 1                       ! Intent
               subvar.status (      $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
               subvar.desc (   2 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.txt (         $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

               subvar.str (         $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_1, Definition
               subvar.intent (      $_F_1                         ) = 1                       ! Intent
               subvar.status (      $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_1                         ) = ''                      ! Description
               subvar.txt (         $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_2                         ) = '0.5 * $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_2, Definition
               subvar.intent (      $_F_2                         ) = 1                       ! Intent
               subvar.status (      $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_2                         ) = ''                      ! Description
               subvar.txt (         $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_3                         ) = '1.0 * $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_3, Definition
               subvar.intent (      $_F_3                         ) = 1                       ! Intent
               subvar.status (      $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_3                         ) = ''                      ! Description
               subvar.txt (         $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_4                         ) = '1.5 * $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_4, Definition
               subvar.intent (      $_F_4                         ) = 1                       ! Intent
               subvar.status (      $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_4                         ) = ''                      ! Description
               subvar.txt (         $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_5                         ) = '2.0 * $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_5, Definition
               subvar.intent (      $_F_5                         ) = 1                       ! Intent
               subvar.status (      $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_5                         ) = ''                      ! Description
               subvar.txt (         $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_6                         ) = '6.0 * $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_6, Definition
               subvar.intent (      $_F_6                         ) = 1                       ! Intent
               subvar.status (      $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_6                         ) = ''                      ! Description
               subvar.txt (         $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_1                         ) = '$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_1, Definition
               subvar.intent (      $_D_1                         ) = 1                       ! Intent
               subvar.status (      $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_1                         ) = ''                      ! Description
               subvar.txt (         $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_2                         ) = '$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_2, Definition
               subvar.intent (      $_D_2                         ) = 1                       ! Intent
               subvar.status (      $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_2                         ) = ''                      ! Description
               subvar.txt (         $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_3                         ) = '$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_3, Definition
               subvar.intent (      $_D_3                         ) = 1                       ! Intent
               subvar.status (      $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_3                         ) = ''                      ! Description
               subvar.txt (         $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_4                         ) = '$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_4, Definition
               subvar.intent (      $_D_4                         ) = 1                       ! Intent
               subvar.status (      $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_4                         ) = ''                      ! Description
               subvar.txt (         $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_5                         ) = '$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_5, Definition
               subvar.intent (      $_D_5                         ) = 1                       ! Intent
               subvar.status (      $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_5                         ) = ''                      ! Description
               subvar.txt (         $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_6                         ) = '$G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_6, Definition
               subvar.intent (      $_D_6                         ) = 1                       ! Intent
               subvar.status (      $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_6                         ) = ''                      ! Description
               subvar.txt (         $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

            subvargroup.end (       $G_DMP                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP
            subvargroup.desc (   1 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_DMP                       ) = ''                      ! Description
            subvargroup.txt (       $G_DMP                        ) = 'DaMPing'               ! Comment
         subvargroup.end (          $G_FLX                        )                           ! $G_BP.$G_IMS.$G_SUN.$G_FLX
         subvargroup.desc (   1 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.txt (          $G_FLX                        ) = 'FLeXible body properties' ! Comment
      subvargroup.end (             $G_SUN                        )                           ! $G_BP.$G_IMS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
   subvargroup.end (                $G_IMS                        )                           ! $G_BP.$G_IMS
   subvargroup.txt (                $G_IMS                        ) = 'InterMediate speed Stage' ! Comment
   subvargroup.begin (              $G_HSS                        )                           ! $G_BP.$G_HSS
      subvargroup.begin (           $G_BGR                        )                           ! $G_BP.$G_HSS.$G_BGR
         subvar.str (               $_M                           ) = '1953.55006 kg'         ! $G_BP.$G_HSS.$G_BGR.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '-0.00723323 m'         ! $G_BP.$G_HSS.$G_BGR.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_HSS.$G_BGR.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_HSS.$G_BGR.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '270.99938 kgm^2'       ! $G_BP.$G_HSS.$G_BGR.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '160.9858 kgm^2'        ! $G_BP.$G_HSS.$G_BGR.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '160.9858 kgm^2'        ! $G_BP.$G_HSS.$G_BGR.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvargroup.end (             $G_BGR                        )                           ! $G_BP.$G_HSS.$G_BGR
      subvargroup.txt (             $G_BGR                        ) = 'Bull GeaR'             ! Comment
      subvargroup.begin (           $G_HSH                        )                           ! $G_BP.$G_HSS.$G_HSH
         subvar.str (               $_M                           ) = '434.4264380389216 kg'  ! $G_BP.$G_HSS.$G_HSH.$_M, Definition
         subvar.intent (            $_M                           ) = 0                       ! Intent
         subvar.status (            $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_M                           ) = 'Mass'                  ! Comment

         subvar.str (               $_CM_X                        ) = '0.08886443922630505 m' ! $G_BP.$G_HSS.$G_HSH.$_CM_X, Definition
         subvar.intent (            $_CM_X                        ) = 0                       ! Intent
         subvar.status (            $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Y                        ) = '0 m'                   ! $G_BP.$G_HSS.$G_HSH.$_CM_Y, Definition
         subvar.intent (            $_CM_Y                        ) = 0                       ! Intent
         subvar.status (            $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_CM_Z                        ) = '0 m'                   ! $G_BP.$G_HSS.$G_HSH.$_CM_Z, Definition
         subvar.intent (            $_CM_Z                        ) = 0                       ! Intent
         subvar.status (            $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

         subvar.str (               $_IXX                         ) = '3.718788883279712 kgm^2' ! $G_BP.$G_HSS.$G_HSH.$_IXX, Definition
         subvar.intent (            $_IXX                         ) = 0                       ! Intent
         subvar.status (            $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IYY                         ) = '43.77279963900736 kgm^2' ! $G_BP.$G_HSS.$G_HSH.$_IYY, Definition
         subvar.intent (            $_IYY                         ) = 0                       ! Intent
         subvar.status (            $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_IZZ                         ) = '43.77279963900736 kgm^2' ! $G_BP.$G_HSS.$G_HSH.$_IZZ, Definition
         subvar.intent (            $_IZZ                         ) = 0                       ! Intent
         subvar.status (            $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

         subvar.str (               $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_HSS.$G_HSH.$_BODY_TYPE, Definition
         subvar.intent (            $_BODY_TYPE                   ) = 0                       ! Intent
         subvar.status (            $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.desc (    1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
         subvar.desc (    2 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.desc (    3 ,       $_BODY_TYPE                   ) = ''                      ! Description
         subvar.discr.desc (   1 ,  $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_BODY_TYPE                   ) = 'SIMBEAM'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_BODY_TYPE                   ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_BODY_TYPE                   ) = '2'                     ! Discrete values
         subvar.txt (               $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

         subvargroup.begin (        $G_FLX                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX
            subvargroup.begin (     $G_SBM                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM
               subvargroup.begin (  $G_MAT                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT
                  subvar.str (      $_DEN                         ) = '7850 kg/m^3'           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT.$_DEN, Definition
                  subvar.intent (   $_DEN                         ) = 0                       ! Intent
                  subvar.status (   $_DEN                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_DEN                       ) = ''                      ! Description
                  subvar.desc (   2 , $_DEN                       ) = ''                      ! Description
                  subvar.desc (   3 , $_DEN                       ) = ''                      ! Description
                  subvar.txt (      $_DEN                         ) = 'DENsity'               ! Comment

                  subvar.str (      $_YMD                         ) = '2.1e11 N/m^2'          ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT.$_YMD, Definition
                  subvar.intent (   $_YMD                         ) = 0                       ! Intent
                  subvar.status (   $_YMD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_YMD                       ) = ''                      ! Description
                  subvar.desc (   2 , $_YMD                       ) = ''                      ! Description
                  subvar.desc (   3 , $_YMD                       ) = ''                      ! Description
                  subvar.txt (      $_YMD                         ) = 'Young\'s MoDulus'      ! Comment

                  subvar.str (      $_PRT                         ) = '0.3'                   ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT.$_PRT, Definition
                  subvar.intent (   $_PRT                         ) = 0                       ! Intent
                  subvar.status (   $_PRT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.desc (   1 , $_PRT                       ) = ''                      ! Description
                  subvar.desc (   2 , $_PRT                       ) = ''                      ! Description
                  subvar.desc (   3 , $_PRT                       ) = ''                      ! Description
                  subvar.txt (      $_PRT                         ) = 'Poisson\'s RaTio'      ! Comment

               subvargroup.end (    $G_MAT                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT
               subvargroup.desc (   1 , $G_MAT                    ) = ''                      ! Description
               subvargroup.desc (   2 , $G_MAT                    ) = ''                      ! Description
               subvargroup.desc (   3 , $G_MAT                    ) = ''                      ! Description
               subvargroup.txt (    $G_MAT                        ) = 'MATerial'              ! Comment
               subvargroup.begin (  $G_XSC                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC
                  subvar.str (      $_D_I                         ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_I' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I, Definition
                  subvar.intent (   $_D_I                         ) = 1                       ! Intent
                  subvar.status (   $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_I                         ) = 'Diameter In'           ! Comment

                  subvar.str (      $_D_O_1                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_1, Definition
                  subvar.intent (   $_D_O_1                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_1                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_1                       ) = 'Diameter Out 1'        ! Comment

                  subvar.str (      $_D_O_2                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_2, Definition
                  subvar.intent (   $_D_O_2                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_2                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_2                       ) = 'Diameter Out 2'        ! Comment

                  subvar.str (      $_D_O_3                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_3, Definition
                  subvar.intent (   $_D_O_3                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_3                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_3                       ) = 'Diameter Out 3'        ! Comment

                  subvar.str (      $_D_O_4                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_4, Definition
                  subvar.intent (   $_D_O_4                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_4                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_4                       ) = 'Diameter Out 4'        ! Comment

                  subvar.str (      $_D_O_5                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_2' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_5, Definition
                  subvar.intent (   $_D_O_5                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_5                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_5                       ) = 'Diameter Out 5'        ! Comment

                  subvar.str (      $_D_O_6                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_2' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_6, Definition
                  subvar.intent (   $_D_O_6                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_6                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_6                       ) = 'Diameter Out 6'        ! Comment

                  subvar.str (      $_D_O_7                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_7, Definition
                  subvar.intent (   $_D_O_7                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_7                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_7                       ) = 'Diameter Out 7'        ! Comment

                  subvar.str (      $_D_O_8                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_8, Definition
                  subvar.intent (   $_D_O_8                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_8                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_8                       ) = 'Diameter Out 8'        ! Comment

                  subvar.str (      $_D_O_9                       ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_9, Definition
                  subvar.intent (   $_D_O_9                       ) = 1                       ! Intent
                  subvar.status (   $_D_O_9                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_9                       ) = 'Diameter Out 9'        ! Comment

                  subvar.str (      $_D_O_10                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_10, Definition
                  subvar.intent (   $_D_O_10                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_10                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_10                      ) = 'Diameter Out 10'       ! Comment

                  subvar.str (      $_D_O_11                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_11, Definition
                  subvar.intent (   $_D_O_11                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_11                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_11                      ) = 'Diameter Out 11'       ! Comment

                  subvar.str (      $_D_O_12                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_4' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_12, Definition
                  subvar.intent (   $_D_O_12                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_12                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_12                      ) = 'Diameter Out 12'       ! Comment

                  subvar.str (      $_D_O_13                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_13, Definition
                  subvar.intent (   $_D_O_13                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_13                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_13                      ) = 'Diameter Out 13'       ! Comment

                  subvar.str (      $_D_O_14                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_14, Definition
                  subvar.intent (   $_D_O_14                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_14                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_14                      ) = 'Diameter Out 14'       ! Comment

                  subvar.str (      $_D_O_15                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_15, Definition
                  subvar.intent (   $_D_O_15                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_15                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_15                      ) = 'Diameter Out 15'       ! Comment

                  subvar.str (      $_D_O_16                      ) = '$G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_16, Definition
                  subvar.intent (   $_D_O_16                      ) = 1                       ! Intent
                  subvar.status (   $_D_O_16                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_D_O_16                      ) = 'Diameter Out 16'       ! Comment

               subvargroup.end (    $G_XSC                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC
               subvargroup.txt (    $G_XSC                        ) = 'X-SeCtion'             ! Comment
            subvargroup.end (       $G_SBM                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM
            subvargroup.txt (       $G_SBM                        ) = 'SimBeaM'               ! Comment
            subvargroup.begin (     $G_MOD                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD
               subvar.str (         $_EMO_SELECTION               ) = '1'                     ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
               subvar.intent (      $_EMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
               subvar.desc (   2 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_EMO_SELECTION          ) = 'none'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_EMO_SELECTION          ) = 'f-min,f-max'           ! Description of discrete values
               subvar.discr.desc (   3 , $_EMO_SELECTION          ) = 'f-min,n-modes'         ! Description of discrete values
               subvar.discr.desc (   4 , $_EMO_SELECTION          ) = 'f-min,all modes'       ! Description of discrete values
               subvar.discr.str (   1 , $_EMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_EMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_EMO_SELECTION           ) = '2'                     ! Discrete values
               subvar.discr.str (   4 , $_EMO_SELECTION           ) = '3'                     ! Discrete values
               subvar.txt (         $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

               subvar.str (         $_EMO_F_DESIRED               ) = '1250 Hz'               ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
               subvar.intent (      $_EMO_F_DESIRED               ) = 1                       ! Intent
               subvar.status (      $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
               subvar.desc (   2 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_DESIRED               ) = ''                      ! Description
               subvar.txt (         $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

               subvar.str (         $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
               subvar.intent (      $_EMO_F_MIN                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MIN                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
               subvar.intent (      $_EMO_F_MAX                   ) = 1                       ! Intent
               subvar.status (      $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
               subvar.desc (   2 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_F_MAX                   ) = ''                      ! Description
               subvar.txt (         $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

               subvar.str (         $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
               subvar.intent (      $_EMO_N_MODES                 ) = 1                       ! Intent
               subvar.status (      $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
               subvar.desc (   2 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.desc (   3 ,  $_EMO_N_MODES                 ) = ''                      ! Description
               subvar.txt (         $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

               subvar.str (         $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
               subvar.intent (      $_IMO_SELECTION               ) = 1                       ! Intent
               subvar.status (      $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
               subvar.desc (   2 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.desc (   3 ,  $_IMO_SELECTION               ) = ''                      ! Description
               subvar.discr.desc (   1 , $_IMO_SELECTION          ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_IMO_SELECTION          ) = 'IRM'                   ! Description of discrete values
               subvar.discr.desc (   3 , $_IMO_SELECTION          ) = 'FRM Auto'              ! Description of discrete values
               subvar.discr.str (   1 , $_IMO_SELECTION           ) = '-1'                    ! Discrete values
               subvar.discr.str (   2 , $_IMO_SELECTION           ) = '0'                     ! Discrete values
               subvar.discr.str (   3 , $_IMO_SELECTION           ) = '1'                     ! Discrete values
               subvar.txt (         $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1 --- -1: None (default) 0: IRM 1: FRM Auto ' ! Comment

               subvar.str (         $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
               subvar.intent (      $_TRANS_F_SWITCH              ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_SWITCH              ) = ''                      ! Description
               subvar.discr.desc (   1 , $_TRANS_F_SWITCH         ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_TRANS_F_SWITCH         ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_TRANS_F_SWITCH          ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_TRANS_F_SWITCH          ) = '1'                     ! Discrete values
               subvar.txt (         $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

               subvar.str (         $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
               subvar.intent (      $_TRANS_F_LIMIT               ) = 1                       ! Intent
               subvar.status (      $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
               subvar.desc (   2 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.desc (   3 ,  $_TRANS_F_LIMIT               ) = ''                      ! Description
               subvar.txt (         $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

               subvar.str (         $_CUTOFF_F_SWITCH             ) = '0'                     ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
               subvar.intent (      $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_SWITCH             ) = ''                      ! Description
               subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH        ) = 'None'                  ! Description of discrete values
               subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH        ) = 'Auto'                  ! Description of discrete values
               subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH        ) = 'Manual'                ! Description of discrete values
               subvar.discr.str (   1 , $_CUTOFF_F_SWITCH         ) = '0'                     ! Discrete values
               subvar.discr.str (   2 , $_CUTOFF_F_SWITCH         ) = '1'                     ! Discrete values
               subvar.discr.str (   3 , $_CUTOFF_F_SWITCH         ) = '2'                     ! Discrete values
               subvar.txt (         $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

               subvar.str (         $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
               subvar.intent (      $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
               subvar.status (      $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
               subvar.desc (   2 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.desc (   3 ,  $_CUTOFF_F_LIMIT              ) = ''                      ! Description
               subvar.txt (         $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

            subvargroup.end (       $G_MOD                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD
            subvargroup.desc (   1 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_MOD                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_MOD                       ) = ''                      ! Description
            subvargroup.txt (       $G_MOD                        ) = 'MODes'                 ! Comment
            subvargroup.begin (     $G_DMP                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP
               subvar.str (         $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_LOW, Definition
               subvar.intent (      $_D_LOW                       ) = 1                       ! Intent
               subvar.status (      $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
               subvar.desc (   2 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_LOW                       ) = ''                      ! Description
               subvar.txt (         $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

               subvar.str (         $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_HIGH, Definition
               subvar.intent (      $_D_HIGH                      ) = 1                       ! Intent
               subvar.status (      $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
               subvar.desc (   2 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_HIGH                      ) = ''                      ! Description
               subvar.txt (         $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

               subvar.str (         $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_1, Definition
               subvar.intent (      $_F_1                         ) = 1                       ! Intent
               subvar.status (      $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_1                         ) = ''                      ! Description
               subvar.txt (         $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_2                         ) = '0.5 * $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_2, Definition
               subvar.intent (      $_F_2                         ) = 1                       ! Intent
               subvar.status (      $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_2                         ) = ''                      ! Description
               subvar.txt (         $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_3                         ) = '1.0 * $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_3, Definition
               subvar.intent (      $_F_3                         ) = 1                       ! Intent
               subvar.status (      $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_3                         ) = ''                      ! Description
               subvar.txt (         $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_4                         ) = '1.5 * $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_4, Definition
               subvar.intent (      $_F_4                         ) = 1                       ! Intent
               subvar.status (      $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_4                         ) = ''                      ! Description
               subvar.txt (         $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_5                         ) = '2.0 * $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_5, Definition
               subvar.intent (      $_F_5                         ) = 1                       ! Intent
               subvar.status (      $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_5                         ) = ''                      ! Description
               subvar.txt (         $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_F_6                         ) = '6.0 * $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_6, Definition
               subvar.intent (      $_F_6                         ) = 1                       ! Intent
               subvar.status (      $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_F_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_F_6                         ) = ''                      ! Description
               subvar.txt (         $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_1                         ) = '$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_1, Definition
               subvar.intent (      $_D_1                         ) = 1                       ! Intent
               subvar.status (      $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_1                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_1                         ) = ''                      ! Description
               subvar.txt (         $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_2                         ) = '$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_2, Definition
               subvar.intent (      $_D_2                         ) = 1                       ! Intent
               subvar.status (      $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_2                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_2                         ) = ''                      ! Description
               subvar.txt (         $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_3                         ) = '$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_3, Definition
               subvar.intent (      $_D_3                         ) = 1                       ! Intent
               subvar.status (      $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_3                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_3                         ) = ''                      ! Description
               subvar.txt (         $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_4                         ) = '$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_4, Definition
               subvar.intent (      $_D_4                         ) = 1                       ! Intent
               subvar.status (      $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_4                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_4                         ) = ''                      ! Description
               subvar.txt (         $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_5                         ) = '$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_5, Definition
               subvar.intent (      $_D_5                         ) = 1                       ! Intent
               subvar.status (      $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_5                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_5                         ) = ''                      ! Description
               subvar.txt (         $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

               subvar.str (         $_D_6                         ) = '$G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_6, Definition
               subvar.intent (      $_D_6                         ) = 1                       ! Intent
               subvar.status (      $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.desc (   1 ,  $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
               subvar.desc (   2 ,  $_D_6                         ) = ''                      ! Description
               subvar.desc (   3 ,  $_D_6                         ) = ''                      ! Description
               subvar.txt (         $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

            subvargroup.end (       $G_DMP                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP
            subvargroup.desc (   1 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   2 , $G_DMP                       ) = ''                      ! Description
            subvargroup.desc (   3 , $G_DMP                       ) = ''                      ! Description
            subvargroup.txt (       $G_DMP                        ) = 'DaMPing'               ! Comment
         subvargroup.end (          $G_FLX                        )                           ! $G_BP.$G_HSS.$G_HSH.$G_FLX
         subvargroup.desc (   1 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FLX                        ) = ''                      ! Description
         subvargroup.txt (          $G_FLX                        ) = 'FLeXible body properties' ! Comment
      subvargroup.end (             $G_HSH                        )                           ! $G_BP.$G_HSS.$G_HSH
      subvargroup.txt (             $G_HSH                        ) = 'High speed SHaft'      ! Comment
   subvargroup.end (                $G_HSS                        )                           ! $G_BP.$G_HSS
   subvargroup.txt (                $G_HSS                        ) = 'High Speed Stage'      ! Comment
subvargroup.end (                   $G_BP                         )                           ! $G_BP
subvargroup.txt (                   $G_BP                         ) = 'Body Properties'       ! Comment

subvargroup.begin (                 $G_FE                         )                           ! $G_FE
   subvargroup.begin (              $G_BR                         )                           ! $G_FE.$G_BR
      subvargroup.begin (           $G_LSS                        )                           ! $G_FE.$G_BR.$G_LSS
         subvargroup.begin (        $G_PLC                        )                           ! $G_FE.$G_BR.$G_LSS.$G_PLC
            subvar.str (            $_1_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_C_A, Definition
            subvar.intent (         $_1_C_A                       ) = 0                       ! Intent
            subvar.status (         $_1_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_1_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_C_R, Definition
            subvar.intent (         $_1_C_R                       ) = 0                       ! Intent
            subvar.status (         $_1_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_1_D_A                       ) = '400000 Ns/m'           ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_D_A, Definition
            subvar.intent (         $_1_D_A                       ) = 0                       ! Intent
            subvar.status (         $_1_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_1_D_R                       ) = '600000 Ns/m '          ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_D_R, Definition
            subvar.intent (         $_1_D_R                       ) = 0                       ! Intent
            subvar.status (         $_1_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

            subvar.str (            $_2_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_C_A, Definition
            subvar.intent (         $_2_C_A                       ) = 0                       ! Intent
            subvar.status (         $_2_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_2_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_C_R, Definition
            subvar.intent (         $_2_C_R                       ) = 0                       ! Intent
            subvar.status (         $_2_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_2_D_A                       ) = '400000 Ns/m'           ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_D_A, Definition
            subvar.intent (         $_2_D_A                       ) = 0                       ! Intent
            subvar.status (         $_2_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_2_D_R                       ) = '600000 Ns/m '          ! $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_D_R, Definition
            subvar.intent (         $_2_D_R                       ) = 0                       ! Intent
            subvar.status (         $_2_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

         subvargroup.end (          $G_PLC                        )                           ! $G_FE.$G_BR.$G_LSS.$G_PLC
         subvargroup.txt (          $G_PLC                        ) = 'PLanet Carrier'        ! Comment
         subvargroup.begin (        $G_PLT                        )                           ! $G_FE.$G_BR.$G_LSS.$G_PLT
            subvar.str (            $_1_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_A, Definition
            subvar.intent (         $_1_C_A                       ) = 0                       ! Intent
            subvar.status (         $_1_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_1_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_R, Definition
            subvar.intent (         $_1_C_R                       ) = 0                       ! Intent
            subvar.status (         $_1_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_1_D_A                       ) = '200000 Ns/m'           ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_A, Definition
            subvar.intent (         $_1_D_A                       ) = 0                       ! Intent
            subvar.status (         $_1_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_1_D_R                       ) = '350000 Ns/m'           ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_R, Definition
            subvar.intent (         $_1_D_R                       ) = 0                       ! Intent
            subvar.status (         $_1_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

            subvar.str (            $_2_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_A, Definition
            subvar.intent (         $_2_C_A                       ) = 0                       ! Intent
            subvar.status (         $_2_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_2_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_R, Definition
            subvar.intent (         $_2_C_R                       ) = 0                       ! Intent
            subvar.status (         $_2_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_2_D_A                       ) = '200000 Ns/m'           ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_A, Definition
            subvar.intent (         $_2_D_A                       ) = 0                       ! Intent
            subvar.status (         $_2_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_2_D_R                       ) = '350000 Ns/m'           ! $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_R, Definition
            subvar.intent (         $_2_D_R                       ) = 0                       ! Intent
            subvar.status (         $_2_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

         subvargroup.end (          $G_PLT                        )                           ! $G_FE.$G_BR.$G_LSS.$G_PLT
         subvargroup.txt (          $G_PLT                        ) = 'PLanets'               ! Comment
      subvargroup.end (             $G_LSS                        )                           ! $G_FE.$G_BR.$G_LSS
      subvargroup.txt (             $G_LSS                        ) = 'Low Speed Stage'       ! Comment
      subvargroup.begin (           $G_IMS                        )                           ! $G_FE.$G_BR.$G_IMS
         subvargroup.begin (        $G_PLC                        )                           ! $G_FE.$G_BR.$G_IMS.$G_PLC
            subvar.str (            $_1_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_C_A, Definition
            subvar.intent (         $_1_C_A                       ) = 0                       ! Intent
            subvar.status (         $_1_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_1_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_C_R, Definition
            subvar.intent (         $_1_C_R                       ) = 0                       ! Intent
            subvar.status (         $_1_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_1_D_A                       ) = '450000 Ns/m'           ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_D_A, Definition
            subvar.intent (         $_1_D_A                       ) = 0                       ! Intent
            subvar.status (         $_1_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_1_D_R                       ) = '550000 Ns/m'           ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_D_R, Definition
            subvar.intent (         $_1_D_R                       ) = 0                       ! Intent
            subvar.status (         $_1_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

            subvar.str (            $_2_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_C_A, Definition
            subvar.intent (         $_2_C_A                       ) = 0                       ! Intent
            subvar.status (         $_2_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_2_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_C_R, Definition
            subvar.intent (         $_2_C_R                       ) = 0                       ! Intent
            subvar.status (         $_2_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_2_D_A                       ) = '450000 Ns/m'           ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_D_A, Definition
            subvar.intent (         $_2_D_A                       ) = 0                       ! Intent
            subvar.status (         $_2_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_2_D_R                       ) = '550000 Ns/m'           ! $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_D_R, Definition
            subvar.intent (         $_2_D_R                       ) = 0                       ! Intent
            subvar.status (         $_2_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

         subvargroup.end (          $G_PLC                        )                           ! $G_FE.$G_BR.$G_IMS.$G_PLC
         subvargroup.txt (          $G_PLC                        ) = 'PLanet Carrier'        ! Comment
         subvargroup.begin (        $G_PLT                        )                           ! $G_FE.$G_BR.$G_IMS.$G_PLT
            subvar.str (            $_1_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_A, Definition
            subvar.intent (         $_1_C_A                       ) = 0                       ! Intent
            subvar.status (         $_1_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_1_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_R, Definition
            subvar.intent (         $_1_C_R                       ) = 0                       ! Intent
            subvar.status (         $_1_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_1_D_A                       ) = '75000 Ns/m'            ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_A, Definition
            subvar.intent (         $_1_D_A                       ) = 0                       ! Intent
            subvar.status (         $_1_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_1_D_R                       ) = '200000 Ns/m'           ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_R, Definition
            subvar.intent (         $_1_D_R                       ) = 0                       ! Intent
            subvar.status (         $_1_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

            subvar.str (            $_2_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_A, Definition
            subvar.intent (         $_2_C_A                       ) = 0                       ! Intent
            subvar.status (         $_2_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_2_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_R, Definition
            subvar.intent (         $_2_C_R                       ) = 0                       ! Intent
            subvar.status (         $_2_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_2_D_A                       ) = '75000 Ns/m'            ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_A, Definition
            subvar.intent (         $_2_D_A                       ) = 0                       ! Intent
            subvar.status (         $_2_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_2_D_R                       ) = '200000 Ns/m'           ! $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_R, Definition
            subvar.intent (         $_2_D_R                       ) = 0                       ! Intent
            subvar.status (         $_2_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

         subvargroup.end (          $G_PLT                        )                           ! $G_FE.$G_BR.$G_IMS.$G_PLT
         subvargroup.txt (          $G_PLT                        ) = 'PLanets'               ! Comment
      subvargroup.end (             $G_IMS                        )                           ! $G_FE.$G_BR.$G_IMS
      subvargroup.txt (             $G_IMS                        ) = 'InterMediate Speed Stage' ! Comment
      subvargroup.begin (           $G_HSS                        )                           ! $G_FE.$G_BR.$G_HSS
         subvargroup.begin (        $G_BGR                        )                           ! $G_FE.$G_BR.$G_HSS.$G_BGR
            subvar.str (            $_1_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_C_A, Definition
            subvar.intent (         $_1_C_A                       ) = 0                       ! Intent
            subvar.status (         $_1_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_1_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_C_R, Definition
            subvar.intent (         $_1_C_R                       ) = 0                       ! Intent
            subvar.status (         $_1_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_1_D_A                       ) = '300000 Ns/m'           ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_D_A, Definition
            subvar.intent (         $_1_D_A                       ) = 0                       ! Intent
            subvar.status (         $_1_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_1_D_R                       ) = '350000 Ns/m '          ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_D_R, Definition
            subvar.intent (         $_1_D_R                       ) = 0                       ! Intent
            subvar.status (         $_1_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

            subvar.str (            $_2_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_C_A, Definition
            subvar.intent (         $_2_C_A                       ) = 0                       ! Intent
            subvar.status (         $_2_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_2_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_C_R, Definition
            subvar.intent (         $_2_C_R                       ) = 0                       ! Intent
            subvar.status (         $_2_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_2_D_A                       ) = '300000 Ns/m'           ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_D_A, Definition
            subvar.intent (         $_2_D_A                       ) = 0                       ! Intent
            subvar.status (         $_2_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_2_D_R                       ) = '350000 Ns/m '          ! $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_D_R, Definition
            subvar.intent (         $_2_D_R                       ) = 0                       ! Intent
            subvar.status (         $_2_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

         subvargroup.end (          $G_BGR                        )                           ! $G_FE.$G_BR.$G_HSS.$G_BGR
         subvargroup.txt (          $G_BGR                        ) = 'Bull GeaR'             ! Comment
         subvargroup.begin (        $G_HSH                        )                           ! $G_FE.$G_BR.$G_HSS.$G_HSH
            subvar.str (            $_1_C_A                       ) = '0'                     ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_C_A, Definition
            subvar.intent (         $_1_C_A                       ) = 0                       ! Intent
            subvar.status (         $_1_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_1_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_C_R, Definition
            subvar.intent (         $_1_C_R                       ) = 0                       ! Intent
            subvar.status (         $_1_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_1_D_A                       ) = '0'                     ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_D_A, Definition
            subvar.intent (         $_1_D_A                       ) = 0                       ! Intent
            subvar.status (         $_1_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_1_D_R                       ) = '170000 Ns/m'           ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_D_R, Definition
            subvar.intent (         $_1_D_R                       ) = 0                       ! Intent
            subvar.status (         $_1_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

            subvar.str (            $_2_C_A                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_C_A, Definition
            subvar.intent (         $_2_C_A                       ) = 0                       ! Intent
            subvar.status (         $_2_C_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_A                       ) = 'axial stiffness (in x-direction)' ! Comment

            subvar.str (            $_2_C_R                       ) = '5000000000 N/m'        ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_C_R, Definition
            subvar.intent (         $_2_C_R                       ) = 0                       ! Intent
            subvar.status (         $_2_C_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_C_R                       ) = 'radial stiffness (in y- and z-direction)' ! Comment

            subvar.str (            $_2_D_A                       ) = '780000 Ns/m'           ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_D_A, Definition
            subvar.intent (         $_2_D_A                       ) = 0                       ! Intent
            subvar.status (         $_2_D_A                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_A                       ) = 'axial damping (in x-direction)' ! Comment

            subvar.str (            $_2_D_R                       ) = '170000 Ns/m'           ! $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_D_R, Definition
            subvar.intent (         $_2_D_R                       ) = 0                       ! Intent
            subvar.status (         $_2_D_R                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_D_R                       ) = 'radial damping (in y- and z-direction)' ! Comment

         subvargroup.end (          $G_HSH                        )                           ! $G_FE.$G_BR.$G_HSS.$G_HSH
         subvargroup.txt (          $G_HSH                        ) = 'High speed SHaft'      ! Comment
      subvargroup.end (             $G_HSS                        )                           ! $G_FE.$G_BR.$G_HSS
      subvargroup.txt (             $G_HSS                        ) = 'High Speed Stage'      ! Comment
   subvargroup.end (                $G_BR                         )                           ! $G_FE.$G_BR
   subvargroup.txt (                $G_BR                         ) = 'BeaRings'              ! Comment
   subvargroup.begin (              $G_GPA                        )                           ! $G_FE.$G_GPA
      subvar.str (                  $_FE_MODE                     ) = '0'                     ! $G_FE.$G_GPA.$_FE_MODE, Definition
      subvar.status (               $_FE_MODE                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_FE_MODE                     ) = 'Gear Pair (FE 225)'    ! Description of discrete values
      subvar.discr.desc (   2 ,     $_FE_MODE                     ) = 'Basic Gear Pair (FE 204)' ! Description of discrete values
      subvar.discr.str (   1 ,      $_FE_MODE                     ) = '0'                     ! Discrete values
      subvar.discr.str (   2 ,      $_FE_MODE                     ) = '1'                     ! Discrete values
      subvar.txt (                  $_FE_MODE                     ) = ''                      ! Comment

      subvar.str (                  $_GPA_225_ACTIVE              ) = 'SWITCH($G_FE.$G_GPA.$_FE_MODE)\n{\n   CASE   0:   0;\n   CASE   1:   1;\n\n   DEFAULT:  0;\n}' ! $G_FE.$G_GPA.$_GPA_225_ACTIVE, Definition
      subvar.intent (               $_GPA_225_ACTIVE              ) = 2                       ! Intent
      subvar.status (               $_GPA_225_ACTIVE              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_GPA_225_ACTIVE              ) = ''                      ! Comment

      subvar.str (                  $_GPA_204_ACTIVE              ) = 'SWITCH($G_FE.$G_GPA.$_FE_MODE)\n{\n   CASE   0:   1;\n   CASE   1:   0;\n\n   DEFAULT:  1;\n}' ! $G_FE.$G_GPA.$_GPA_204_ACTIVE, Definition
      subvar.intent (               $_GPA_204_ACTIVE              ) = 2                       ! Intent
      subvar.status (               $_GPA_204_ACTIVE              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_GPA_204_ACTIVE              ) = ''                      ! Comment

      subvargroup.begin (           $G_ALL                        )                           ! $G_FE.$G_GPA.$G_ALL
         subvar.str (               $_FRC                         ) = '0.04 * 0'              ! $G_FE.$G_GPA.$G_ALL.$_FRC, Definition
         subvar.intent (            $_FRC                         ) = 0                       ! Intent
         subvar.status (            $_FRC                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_FRC                         ) = 'FRiction Coeff'        ! Comment

         subvar.str (               $_RGV                         ) = '0.001'                 ! $G_FE.$G_GPA.$G_ALL.$_RGV, Definition
         subvar.intent (            $_RGV                         ) = 0                       ! Intent
         subvar.status (            $_RGV                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_RGV                         ) = 'ReGularization Velocity' ! Comment

         subvar.str (               $_GBF                         ) = '1'                     ! $G_FE.$G_GPA.$G_ALL.$_GBF, Definition
         subvar.intent (            $_GBF                         ) = 0                       ! Intent
         subvar.status (            $_GBF                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_GBF                         ) = 'Gear Blank Factor'     ! Comment

         subvar.str (               $_TSR                         ) = '0.8'                   ! $G_FE.$G_GPA.$G_ALL.$_TSR, Definition
         subvar.intent (            $_TSR                         ) = 0                       ! Intent
         subvar.status (            $_TSR                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TSR                         ) = 'Teeth Stiffness Ratio' ! Comment

         subvar.str (               $_YMD                         ) = '2.10E+11\n'            ! $G_FE.$G_GPA.$G_ALL.$_YMD, Definition
         subvar.status (            $_YMD                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_YMD                         ) = 'Young\'s Modulus'      ! Comment

         subvar.str (               $_PRT                         ) = '0.3'                   ! $G_FE.$G_GPA.$G_ALL.$_PRT, Definition
         subvar.status (            $_PRT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_PRT                         ) = 'Poisson\'s Ratio'      ! Comment

         subvar.str (               $_D_FULL                      ) = '0.00001'               ! $G_FE.$G_GPA.$G_ALL.$_D_FULL, Definition
         subvar.intent (            $_D_FULL                      ) = 0                       ! Intent
         subvar.status (            $_D_FULL                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_FULL                      ) = 'FULL damping starts'   ! Comment

         subvar.str (               $_NOS                         ) = '21'                    ! $G_FE.$G_GPA.$G_ALL.$_NOS, Definition
         subvar.status (            $_NOS                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_NOS                         ) = 'Number Of Slices'      ! Comment

      subvargroup.end (             $G_ALL                        )                           ! $G_FE.$G_GPA.$G_ALL
      subvargroup.txt (             $G_ALL                        ) = 'ALL gear pairs'        ! Comment
      subvargroup.begin (           $G_LSS                        )                           ! $G_FE.$G_GPA.$G_LSS
         subvar.str (               $_CLC_RNG_PLT                 ) = '0'                     ! $G_FE.$G_GPA.$G_LSS.$_CLC_RNG_PLT, Definition
         subvar.intent (            $_CLC_RNG_PLT                 ) = 1                       ! Intent
         subvar.status (            $_CLC_RNG_PLT                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_CLC_RNG_PLT                 ) = 'rigid gears'           ! Description of discrete values
         subvar.discr.desc (   2 ,  $_CLC_RNG_PLT                 ) = 'flex. gears excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   3 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 1 excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   4 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 2 excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   5 ,  $_CLC_RNG_PLT                 ) = 'flex. gears incl. tooth def' ! Description of discrete values
         subvar.discr.desc (   6 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 1 incl. tooth def' ! Description of discrete values
         subvar.discr.desc (   7 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 2 incl. tooth def' ! Description of discrete values
         subvar.discr.str (   1 ,   $_CLC_RNG_PLT                 ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_CLC_RNG_PLT                 ) = '1'                     ! Discrete values
         subvar.discr.str (   3 ,   $_CLC_RNG_PLT                 ) = '2'                     ! Discrete values
         subvar.discr.str (   4 ,   $_CLC_RNG_PLT                 ) = '3'                     ! Discrete values
         subvar.discr.str (   5 ,   $_CLC_RNG_PLT                 ) = '4'                     ! Discrete values
         subvar.discr.str (   6 ,   $_CLC_RNG_PLT                 ) = '5'                     ! Discrete values
         subvar.discr.str (   7 ,   $_CLC_RNG_PLT                 ) = '6'                     ! Discrete values
         subvar.txt (               $_CLC_RNG_PLT                 ) = 'CaLCulation mode - gear pair RiNG PLaneT' ! Comment

         subvar.str (               $_CLC_SUN_PLT                 ) = '0'                     ! $G_FE.$G_GPA.$G_LSS.$_CLC_SUN_PLT, Definition
         subvar.intent (            $_CLC_SUN_PLT                 ) = 1                       ! Intent
         subvar.status (            $_CLC_SUN_PLT                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_CLC_SUN_PLT                 ) = 'rigid gears'           ! Description of discrete values
         subvar.discr.desc (   2 ,  $_CLC_SUN_PLT                 ) = 'flex. gears excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   3 ,  $_CLC_SUN_PLT                 ) = 'flex. Gear 1 excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   4 ,  $_CLC_SUN_PLT                 ) = 'flex. Gear 2 excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   5 ,  $_CLC_SUN_PLT                 ) = 'flex. gears incl. tooth def' ! Description of discrete values
         subvar.discr.desc (   6 ,  $_CLC_SUN_PLT                 ) = 'flex. Gear 1 incl. tooth def' ! Description of discrete values
         subvar.discr.desc (   7 ,  $_CLC_SUN_PLT                 ) = 'flex. Gear 2 incl. tooth def' ! Description of discrete values
         subvar.discr.str (   1 ,   $_CLC_SUN_PLT                 ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_CLC_SUN_PLT                 ) = '1'                     ! Discrete values
         subvar.discr.str (   3 ,   $_CLC_SUN_PLT                 ) = '2'                     ! Discrete values
         subvar.discr.str (   4 ,   $_CLC_SUN_PLT                 ) = '3'                     ! Discrete values
         subvar.discr.str (   5 ,   $_CLC_SUN_PLT                 ) = '4'                     ! Discrete values
         subvar.discr.str (   6 ,   $_CLC_SUN_PLT                 ) = '5'                     ! Discrete values
         subvar.discr.str (   7 ,   $_CLC_SUN_PLT                 ) = '6'                     ! Discrete values
         subvar.txt (               $_CLC_SUN_PLT                 ) = 'CaLCulation mode - gear pair SUN PLaneT' ! Comment

         subvar.str (               $_C_RNG_PLT                   ) = '1.40510E+10\n'         ! $G_FE.$G_GPA.$G_LSS.$_C_RNG_PLT, Definition
         subvar.status (            $_C_RNG_PLT                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_RNG_PLT                   ) = 'stiffness constant, basic gear pair RiNG PLaneT' ! Comment

         subvar.str (               $_C_SUN_PLT                   ) = '9.86734E+09\n'         ! $G_FE.$G_GPA.$G_LSS.$_C_SUN_PLT, Definition
         subvar.status (            $_C_SUN_PLT                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_SUN_PLT                   ) = 'stiffness constant, basic gear pair SUN PLaneT' ! Comment

         subvar.str (               $_D_IN                        ) = '60000'                 ! $G_FE.$G_GPA.$G_LSS.$_D_IN, Definition
         subvar.intent (            $_D_IN                        ) = 0                       ! Intent
         subvar.status (            $_D_IN                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_IN                        ) = 'Damping coefficient IN' ! Comment

         subvar.str (               $_D_OUT                       ) = '60000'                 ! $G_FE.$G_GPA.$G_LSS.$_D_OUT, Definition
         subvar.intent (            $_D_OUT                       ) = 0                       ! Intent
         subvar.status (            $_D_OUT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_OUT                       ) = 'Damping coefficient OUT' ! Comment

      subvargroup.end (             $G_LSS                        )                           ! $G_FE.$G_GPA.$G_LSS
      subvargroup.desc (   1 ,      $G_LSS                        ) = 'low speed stage'       ! Description
      subvargroup.txt (             $G_LSS                        ) = 'Low Speed Stage'       ! Comment
      subvargroup.begin (           $G_IMS                        )                           ! $G_FE.$G_GPA.$G_IMS
         subvar.str (               $_CLC_RNG_PLT                 ) = '0'                     ! $G_FE.$G_GPA.$G_IMS.$_CLC_RNG_PLT, Definition
         subvar.intent (            $_CLC_RNG_PLT                 ) = 1                       ! Intent
         subvar.status (            $_CLC_RNG_PLT                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_CLC_RNG_PLT                 ) = 'rigid gears'           ! Description of discrete values
         subvar.discr.desc (   2 ,  $_CLC_RNG_PLT                 ) = 'flex. gears excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   3 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 1 excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   4 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 2 excl. tooth def' ! Description of discrete values
         subvar.discr.desc (   5 ,  $_CLC_RNG_PLT                 ) = 'flex. gears incl. tooth def' ! Description of discrete values
         subvar.discr.desc (   6 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 1 incl. tooth def' ! Description of discrete values
         subvar.discr.desc (   7 ,  $_CLC_RNG_PLT                 ) = 'flex. Gear 2 incl. tooth def' ! Description of discrete values
         subvar.discr.str (   1 ,   $_CLC_RNG_PLT                 ) = '0'                     ! Discrete values
         subvar.discr.str (   2 ,   $_CLC_RNG_PLT                 ) = '1'                     ! Discrete values
         subvar.discr.str (   3 ,   $_CLC_RNG_PLT                 ) = '2'                     ! Discrete values
         subvar.discr.str (   4 ,   $_CLC_RNG_PLT                 ) = '3'                     ! Discrete values
         subvar.discr.str (   5 ,   $_CLC_RNG_PLT                 ) = '4'                     ! Discrete values
         subvar.discr.str (   6 ,   $_CLC_RNG_PLT                 ) = '5'                     ! Discrete values
         subvar.discr.str (   7 ,   $_CLC_RNG_PLT                 ) = '6'                     ! Discrete values
         subvar.txt (               $_CLC_RNG_PLT                 ) = 'CaLCulation mode - gear pair RiNG PLaneT' ! Comment

         subvar.str (               $_C_RNG_PLT                   ) = '9.89762E+09'           ! $G_FE.$G_GPA.$G_IMS.$_C_RNG_PLT, Definition
         subvar.status (            $_C_RNG_PLT                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_RNG_PLT                   ) = 'stiffness constant, basic gear pair RiNG PLaneT' ! Comment

         subvar.str (               $_C_SUN_PLT                   ) = '7.37505E+09\n'         ! $G_FE.$G_GPA.$G_IMS.$_C_SUN_PLT, Definition
         subvar.status (            $_C_SUN_PLT                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_SUN_PLT                   ) = 'stiffness constant, basic gear pair SUN PLaneT' ! Comment

         subvar.str (               $_D_IN                        ) = '60000'                 ! $G_FE.$G_GPA.$G_IMS.$_D_IN, Definition
         subvar.intent (            $_D_IN                        ) = 0                       ! Intent
         subvar.status (            $_D_IN                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_IN                        ) = 'Damping coefficient IN' ! Comment

         subvar.str (               $_D_OUT                       ) = '60000'                 ! $G_FE.$G_GPA.$G_IMS.$_D_OUT, Definition
         subvar.intent (            $_D_OUT                       ) = 0                       ! Intent
         subvar.status (            $_D_OUT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_OUT                       ) = 'Damping coefficient OUT' ! Comment

      subvargroup.end (             $G_IMS                        )                           ! $G_FE.$G_GPA.$G_IMS
      subvargroup.txt (             $G_IMS                        ) = 'InterMediate speed Stage' ! Comment
      subvargroup.begin (           $G_HSS                        )                           ! $G_FE.$G_GPA.$G_HSS
         subvar.str (               $_C                           ) = '5.65324E+09\n'         ! $G_FE.$G_GPA.$G_HSS.$_C, Definition
         subvar.status (            $_C                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C                           ) = 'stiffness constant, basic gear pair' ! Comment

         subvar.str (               $_D_IN                        ) = '15000'                 ! $G_FE.$G_GPA.$G_HSS.$_D_IN, Definition
         subvar.intent (            $_D_IN                        ) = 0                       ! Intent
         subvar.status (            $_D_IN                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_IN                        ) = 'Damping coefficient IN' ! Comment

         subvar.str (               $_D_OUT                       ) = '15000'                 ! $G_FE.$G_GPA.$G_HSS.$_D_OUT, Definition
         subvar.intent (            $_D_OUT                       ) = 0                       ! Intent
         subvar.status (            $_D_OUT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_OUT                       ) = 'Damping coefficient OUT' ! Comment

      subvargroup.end (             $G_HSS                        )                           ! $G_FE.$G_GPA.$G_HSS
      subvargroup.desc (   1 ,      $G_HSS                        ) = 'high speed stage'      ! Description
      subvargroup.txt (             $G_HSS                        ) = 'High Speed Stage'      ! Comment
   subvargroup.end (                $G_GPA                        )                           ! $G_FE.$G_GPA
   subvargroup.txt (                $G_GPA                        ) = 'Gear PAir'             ! Comment
   subvargroup.begin (              $G_SCN                        )                           ! $G_FE.$G_SCN
      subvargroup.begin (           $G_LSS_2_IMS                  )                           ! $G_FE.$G_SCN.$G_LSS_2_IMS
         subvar.str (               $_ENABLED                     ) = 'SWITCH($G_DOF.$G_LSS.$G_SUN.$_SCN_TYPE)\n{\n   CASE   2:   1;\n   CASE   63:   0;\n\n   DEFAULT:  0;\n}' ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_ENABLED, Definition
         subvar.intent (            $_ENABLED                     ) = 2                       ! Intent

         subvar.str (               $_C_A                         ) = '1.00E+10 N/m'          ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_A, Definition
         subvar.intent (            $_C_A                         ) = 0                       ! Intent
         subvar.status (            $_C_A                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_A                         ) = 'axial stiffness (in x-direction)' ! Comment

         subvar.str (               $_C_R                         ) = '1.00E+10 N/m'          ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_R, Definition
         subvar.intent (            $_C_R                         ) = 0                       ! Intent
         subvar.status (            $_C_R                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_R                         ) = 'radial stiffness (in y- and z-direction)' ! Comment

         subvar.str (               $_C_ROT                       ) = '1.00E+09 Nm/rad'       ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_ROT, Definition
         subvar.intent (            $_C_ROT                       ) = 0                       ! Intent
         subvar.status (            $_C_ROT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_ROT                       ) = 'rotational stiffness (about alpha)' ! Comment

         subvar.str (               $_C_TLT                       ) = '1.00E+10 Nm/rad'       ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_TLT, Definition
         subvar.txt (               $_C_TLT                       ) = 'tilting stiffness (about beta and gamma)' ! Comment

         subvar.str (               $_D_A                         ) = '450000 Ns/m'           ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_A, Definition
         subvar.intent (            $_D_A                         ) = 0                       ! Intent
         subvar.status (            $_D_A                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_A                         ) = 'axial damping (in x-direction)' ! Comment

         subvar.str (               $_D_R                         ) = '200000 Ns/m'           ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_R, Definition
         subvar.intent (            $_D_R                         ) = 0                       ! Intent
         subvar.status (            $_D_R                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_R                         ) = 'radial damping'        ! Comment

         subvar.str (               $_D_ROT                       ) = '20000 Nms/rad'         ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_ROT, Definition
         subvar.intent (            $_D_ROT                       ) = 0                       ! Intent
         subvar.status (            $_D_ROT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_ROT                       ) = 'rotational stiffness (about alpha)' ! Comment

         subvar.str (               $_D_TLT                       ) = '20000 Nms/rad'         ! $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_TLT, Definition
         subvar.intent (            $_D_TLT                       ) = 0                       ! Intent
         subvar.status (            $_D_TLT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_TLT                       ) = 'tilting damping (about beta and gamma)' ! Comment

      subvargroup.end (             $G_LSS_2_IMS                  )                           ! $G_FE.$G_SCN.$G_LSS_2_IMS
      subvargroup.txt (             $G_LSS_2_IMS                  ) = 'Low Speed Stage to InterMediate speed Stage' ! Comment
      subvargroup.begin (           $G_IMS_2_HSS                  )                           ! $G_FE.$G_SCN.$G_IMS_2_HSS
         subvar.str (               $_ENABLED                     ) = 'SWITCH($G_DOF.$G_IMS.$G_SUN.$_SCN_TYPE)\n{\n   CASE   2:   1;\n   CASE   63:   0;\n\n   DEFAULT:  0;\n}' ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_ENABLED, Definition
         subvar.intent (            $_ENABLED                     ) = 2                       ! Intent

         subvar.str (               $_C_A                         ) = '1.00E+010 N/m'         ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_A, Definition
         subvar.intent (            $_C_A                         ) = 0                       ! Intent
         subvar.status (            $_C_A                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_A                         ) = 'axial stiffness (in x-direction)' ! Comment

         subvar.str (               $_C_R                         ) = '1.00E+010 N/m'         ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_R, Definition
         subvar.intent (            $_C_R                         ) = 0                       ! Intent
         subvar.status (            $_C_R                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_R                         ) = 'radial stiffness (in y- and z-direction)' ! Comment

         subvar.str (               $_C_ROT                       ) = '1.00E+09 Nm/rad'       ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_ROT, Definition
         subvar.intent (            $_C_ROT                       ) = 0                       ! Intent
         subvar.status (            $_C_ROT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_C_ROT                       ) = 'rotational damping (about alpha)' ! Comment

         subvar.str (               $_C_TLT                       ) = '1.00E+10 Nm/rad'       ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_TLT, Definition
         subvar.txt (               $_C_TLT                       ) = 'tilting stiffness (about beta and gamma)' ! Comment

         subvar.str (               $_D_A                         ) = '300000 Ns/m'           ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_A, Definition
         subvar.intent (            $_D_A                         ) = 0                       ! Intent
         subvar.status (            $_D_A                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_A                         ) = 'axial damping (in x-direction)' ! Comment

         subvar.str (               $_D_R                         ) = '210000 Ns/m'           ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_R, Definition
         subvar.intent (            $_D_R                         ) = 0                       ! Intent
         subvar.status (            $_D_R                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_R                         ) = 'radial damping'        ! Comment

         subvar.str (               $_D_ROT                       ) = '10000 Nms/rad'         ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_ROT, Definition
         subvar.intent (            $_D_ROT                       ) = 0                       ! Intent
         subvar.status (            $_D_ROT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_ROT                       ) = 'rotational damping (about alpha)' ! Comment

         subvar.str (               $_D_TLT                       ) = '20000 Nms/rad'         ! $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_TLT, Definition
         subvar.intent (            $_D_TLT                       ) = 0                       ! Intent
         subvar.status (            $_D_TLT                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_TLT                       ) = 'tilting damping (about beta and gamma)' ! Comment

      subvargroup.end (             $G_IMS_2_HSS                  )                           ! $G_FE.$G_SCN.$G_IMS_2_HSS
      subvargroup.txt (             $G_IMS_2_HSS                  ) = 'InterMediate speed Stage to High Speed Stage' ! Comment
   subvargroup.end (                $G_SCN                        )                           ! $G_FE.$G_SCN
   subvargroup.txt (                $G_SCN                        ) = 'Shaft CoNnections'     ! Comment
   subvargroup.begin (              $G_SPB                        )                           ! $G_FE.$G_SPB
      subvar.str (                  $_1_C_X                       ) = '1.00E+08 N/m'          ! $G_FE.$G_SPB.$_1_C_X, Definition
      subvar.intent (               $_1_C_X                       ) = 0                       ! Intent
      subvar.status (               $_1_C_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_C_X                       ) = 'stiffness in x-direction' ! Comment

      subvar.str (                  $_1_C_Y                       ) = '1.00E+08 N/m'          ! $G_FE.$G_SPB.$_1_C_Y, Definition
      subvar.intent (               $_1_C_Y                       ) = 0                       ! Intent
      subvar.status (               $_1_C_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_C_Y                       ) = 'stiffness in y-direction' ! Comment

      subvar.str (                  $_1_C_Z                       ) = '1.00E+08 N/m'          ! $G_FE.$G_SPB.$_1_C_Z, Definition
      subvar.intent (               $_1_C_Z                       ) = 0                       ! Intent
      subvar.status (               $_1_C_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_C_Z                       ) = 'stiffness in z-direction' ! Comment

      subvar.str (                  $_1_C_BE                      ) = '6.00E+07 Nm/rad'       ! $G_FE.$G_SPB.$_1_C_BE, Definition
      subvar.intent (               $_1_C_BE                      ) = 0                       ! Intent
      subvar.status (               $_1_C_BE                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_C_BE                      ) = 'stiffness about beta'  ! Comment

      subvar.str (                  $_1_D_X                       ) = '110000 Ns/m'           ! $G_FE.$G_SPB.$_1_D_X, Definition
      subvar.intent (               $_1_D_X                       ) = 0                       ! Intent
      subvar.status (               $_1_D_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_D_X                       ) = 'damping in x-direction' ! Comment

      subvar.str (                  $_1_D_Y                       ) = '250000 Ns/m'           ! $G_FE.$G_SPB.$_1_D_Y, Definition
      subvar.intent (               $_1_D_Y                       ) = 0                       ! Intent
      subvar.status (               $_1_D_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_D_Y                       ) = 'damping in y-direction' ! Comment

      subvar.str (                  $_1_D_Z                       ) = '250000 Ns/m'           ! $G_FE.$G_SPB.$_1_D_Z, Definition
      subvar.intent (               $_1_D_Z                       ) = 0                       ! Intent
      subvar.status (               $_1_D_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_D_Z                       ) = 'damping in z-direction' ! Comment

      subvar.str (                  $_1_D_BE                      ) = '200000 Nms/rad'        ! $G_FE.$G_SPB.$_1_D_BE, Definition
      subvar.intent (               $_1_D_BE                      ) = 0                       ! Intent
      subvar.status (               $_1_D_BE                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_1_D_BE                      ) = 'damping about beta'    ! Comment

      subvar.str (                  $_2_C_X                       ) = '1.00E+08 N/m'          ! $G_FE.$G_SPB.$_2_C_X, Definition
      subvar.intent (               $_2_C_X                       ) = 0                       ! Intent
      subvar.status (               $_2_C_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_C_X                       ) = 'stiffness in x-direction' ! Comment

      subvar.str (                  $_2_C_Y                       ) = '1.00E+08 N/m'          ! $G_FE.$G_SPB.$_2_C_Y, Definition
      subvar.intent (               $_2_C_Y                       ) = 0                       ! Intent
      subvar.status (               $_2_C_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_C_Y                       ) = 'stiffness in y-direction' ! Comment

      subvar.str (                  $_2_C_Z                       ) = '1.00E+08 N/m'          ! $G_FE.$G_SPB.$_2_C_Z, Definition
      subvar.intent (               $_2_C_Z                       ) = 0                       ! Intent
      subvar.status (               $_2_C_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_C_Z                       ) = 'stiffness in z-direction' ! Comment

      subvar.str (                  $_2_C_BE                      ) = '6.00E+07 Nm/rad'       ! $G_FE.$G_SPB.$_2_C_BE, Definition
      subvar.intent (               $_2_C_BE                      ) = 0                       ! Intent
      subvar.status (               $_2_C_BE                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_C_BE                      ) = 'stiffness about beta'  ! Comment

      subvar.str (                  $_2_D_X                       ) = '110000 Ns/m'           ! $G_FE.$G_SPB.$_2_D_X, Definition
      subvar.intent (               $_2_D_X                       ) = 0                       ! Intent
      subvar.status (               $_2_D_X                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_D_X                       ) = 'damping in x-direction' ! Comment

      subvar.str (                  $_2_D_Y                       ) = '250000 Ns/m'           ! $G_FE.$G_SPB.$_2_D_Y, Definition
      subvar.intent (               $_2_D_Y                       ) = 0                       ! Intent
      subvar.status (               $_2_D_Y                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_D_Y                       ) = 'damping in y-direction' ! Comment

      subvar.str (                  $_2_D_Z                       ) = '250000 Ns/m'           ! $G_FE.$G_SPB.$_2_D_Z, Definition
      subvar.intent (               $_2_D_Z                       ) = 0                       ! Intent
      subvar.status (               $_2_D_Z                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_D_Z                       ) = 'damping in z-direction' ! Comment

      subvar.str (                  $_2_D_BE                      ) = '200000 Nms/rad'        ! $G_FE.$G_SPB.$_2_D_BE, Definition
      subvar.intent (               $_2_D_BE                      ) = 0                       ! Intent
      subvar.status (               $_2_D_BE                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_2_D_BE                      ) = 'damping about beta'    ! Comment

   subvargroup.end (                $G_SPB                        )                           ! $G_FE.$G_SPB
   subvargroup.txt (                $G_SPB                        ) = 'SuPport Bolts'         ! Comment
subvargroup.end (                   $G_FE                         )                           ! $G_FE
subvargroup.txt (                   $G_FE                         ) = 'Force Elements'        ! Comment

subvargroup.begin (                 $G_DOF                        )                           ! $G_DOF
   subvargroup.begin (              $G_HSG                        )                           ! $G_DOF.$G_HSG
      subvar.str (                  $_TLT                         ) = '0'                     ! $G_DOF.$G_HSG.$_TLT, Definition
      subvar.intent (               $_TLT                         ) = 1                       ! Intent
      subvar.status (               $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TLT                         ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TLT                         ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TLT                         ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TLT                         ) = '0'                     ! Discrete values
      subvar.txt (                  $_TLT                         ) = 'TiLTing'               ! Comment

      subvar.str (                  $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_HSG.$_TRANS_X, Definition
      subvar.intent (               $_TRANS_X                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_X                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_X                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

      subvar.str (                  $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_HSG.$_TRANS_Y, Definition
      subvar.intent (               $_TRANS_Y                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_Y                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_Y                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

      subvar.str (                  $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_HSG.$_TRANS_Z, Definition
      subvar.intent (               $_TRANS_Z                     ) = 1                       ! Intent
      subvar.status (               $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.discr.desc (   1 ,     $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
      subvar.discr.desc (   2 ,     $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
      subvar.discr.str (   1 ,      $_TRANS_Z                     ) = '1'                     ! Discrete values
      subvar.discr.str (   2 ,      $_TRANS_Z                     ) = '0'                     ! Discrete values
      subvar.txt (                  $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

   subvargroup.end (                $G_HSG                        )                           ! $G_DOF.$G_HSG
   subvargroup.txt (                $G_HSG                        ) = 'HouSinG'               ! Comment
   subvargroup.begin (              $G_LSS                        )                           ! $G_DOF.$G_LSS
      subvargroup.begin (           $G_PLC                        )                           ! $G_DOF.$G_LSS.$G_PLC
         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_LSS.$G_PLC.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_LSS.$G_PLC.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_LSS.$G_PLC.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_LSS.$G_PLC.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_PLC                        )                           ! $G_DOF.$G_LSS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_DOF.$G_LSS.$G_PLT
         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_LSS.$G_PLT.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_LSS.$G_PLT.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_LSS.$G_PLT.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_LSS.$G_PLT.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_PLT                        )                           ! $G_DOF.$G_LSS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLaneT'                ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_DOF.$G_LSS.$G_SUN
         subvar.str (               $_SCN_TYPE                    ) = '63'                    ! $G_DOF.$G_LSS.$G_SUN.$_SCN_TYPE, Definition
         subvar.discr.desc (   1 ,  $_SCN_TYPE                    ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_SCN_TYPE                    ) = 'Shaft'                 ! Description of discrete values
         subvar.discr.str (   1 ,   $_SCN_TYPE                    ) = '2'                     ! Discrete values
         subvar.discr.str (   2 ,   $_SCN_TYPE                    ) = '63'                    ! Discrete values
         subvar.txt (               $_SCN_TYPE                    ) = 'Shaft CoNnection TYPE: 2:Rigid/ 63:Shaft' ! Comment

         subvar.str (               $_SCN_SHAFT_ACTIVE            ) = 'SWITCH($G_DOF.$G_LSS.$G_SUN.$_SCN_TYPE)\n{\n   CASE   2:   1;\n   CASE   63:   0;\n\n   DEFAULT:  0;\n}' ! $G_DOF.$G_LSS.$G_SUN.$_SCN_SHAFT_ACTIVE, Definition
         subvar.intent (            $_SCN_SHAFT_ACTIVE            ) = 2                       ! Intent

         subvar.str (               $_SCN_RIGID_ACTIVE            ) = 'SWITCH($G_DOF.$G_LSS.$G_SUN.$_SCN_TYPE)\n{\n   CASE   2:   0;\n   CASE   63:  1;\n\n   DEFAULT:  1;\n}' ! $G_DOF.$G_LSS.$G_SUN.$_SCN_RIGID_ACTIVE, Definition
         subvar.intent (            $_SCN_RIGID_ACTIVE            ) = 2                       ! Intent

         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_LSS.$G_SUN.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_LSS.$G_SUN.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_LSS.$G_SUN.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_LSS.$G_SUN.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_SUN                        )                           ! $G_DOF.$G_LSS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
   subvargroup.end (                $G_LSS                        )                           ! $G_DOF.$G_LSS
   subvargroup.txt (                $G_LSS                        ) = 'Low Speed Stage'       ! Comment
   subvargroup.begin (              $G_IMS                        )                           ! $G_DOF.$G_IMS
      subvargroup.begin (           $G_PLC                        )                           ! $G_DOF.$G_IMS.$G_PLC
         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_IMS.$G_PLC.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_IMS.$G_PLC.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_IMS.$G_PLC.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_IMS.$G_PLC.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_PLC                        )                           ! $G_DOF.$G_IMS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_DOF.$G_IMS.$G_PLT
         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_IMS.$G_PLT.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_IMS.$G_PLT.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_IMS.$G_PLT.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_IMS.$G_PLT.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_PLT                        )                           ! $G_DOF.$G_IMS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLaneT'                ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_DOF.$G_IMS.$G_SUN
         subvar.str (               $_SCN_TYPE                    ) = '63'                    ! $G_DOF.$G_IMS.$G_SUN.$_SCN_TYPE, Definition
         subvar.discr.desc (   1 ,  $_SCN_TYPE                    ) = 'Rigid'                 ! Description of discrete values
         subvar.discr.desc (   2 ,  $_SCN_TYPE                    ) = 'Shaft'                 ! Description of discrete values
         subvar.discr.str (   1 ,   $_SCN_TYPE                    ) = '2'                     ! Discrete values
         subvar.discr.str (   2 ,   $_SCN_TYPE                    ) = '63'                    ! Discrete values
         subvar.txt (               $_SCN_TYPE                    ) = 'Shaft CoNnection TYPE: 2:Rigid/ 63:Shaft ' ! Comment

         subvar.str (               $_SCN_SHAFT_ACTIVE            ) = 'SWITCH($G_DOF.$G_IMS.$G_SUN.$_SCN_TYPE)\n{\n   CASE   2:   1;\n   CASE   63:   0;\n\n   DEFAULT:  0;\n}' ! $G_DOF.$G_IMS.$G_SUN.$_SCN_SHAFT_ACTIVE, Definition
         subvar.intent (            $_SCN_SHAFT_ACTIVE            ) = 2                       ! Intent

         subvar.str (               $_SCN_RIGID_ACTIVE            ) = 'SWITCH($G_DOF.$G_IMS.$G_SUN.$_SCN_TYPE)\n{\n   CASE   2:   0;\n   CASE   63:  1;\n\n   DEFAULT:  1;\n}' ! $G_DOF.$G_IMS.$G_SUN.$_SCN_RIGID_ACTIVE, Definition
         subvar.intent (            $_SCN_RIGID_ACTIVE            ) = 2                       ! Intent

         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_IMS.$G_SUN.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_IMS.$G_SUN.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_IMS.$G_SUN.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_IMS.$G_SUN.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_SUN                        )                           ! $G_DOF.$G_IMS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
   subvargroup.end (                $G_IMS                        )                           ! $G_DOF.$G_IMS
   subvargroup.txt (                $G_IMS                        ) = 'InterMediate speed Stage' ! Comment
   subvargroup.begin (              $G_HSS                        )                           ! $G_DOF.$G_HSS
      subvargroup.begin (           $G_BGR                        )                           ! $G_DOF.$G_HSS.$G_BGR
         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_HSS.$G_BGR.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_HSS.$G_BGR.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_HSS.$G_BGR.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_HSS.$G_BGR.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_BGR                        )                           ! $G_DOF.$G_HSS.$G_BGR
      subvargroup.txt (             $G_BGR                        ) = 'Bull GeaR'             ! Comment
      subvargroup.begin (           $G_HSH                        )                           ! $G_DOF.$G_HSS.$G_HSH
         subvar.str (               $_TLT                         ) = '0'                     ! $G_DOF.$G_HSS.$G_HSH.$_TLT, Definition
         subvar.intent (            $_TLT                         ) = 1                       ! Intent
         subvar.status (            $_TLT                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TLT                         ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TLT                         ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TLT                         ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TLT                         ) = '0'                     ! Discrete values
         subvar.txt (               $_TLT                         ) = 'TiLTing'               ! Comment

         subvar.str (               $_TRANS_X                     ) = '0'                     ! $G_DOF.$G_HSS.$G_HSH.$_TRANS_X, Definition
         subvar.intent (            $_TRANS_X                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_X                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_X                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_X                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_X                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_X                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_X                     ) = 'TRANSlation in X'      ! Comment

         subvar.str (               $_TRANS_Y                     ) = '0'                     ! $G_DOF.$G_HSS.$G_HSH.$_TRANS_Y, Definition
         subvar.intent (            $_TRANS_Y                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Y                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Y                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Y                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Y                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Y                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Y                     ) = 'TRANSlation in Y'      ! Comment

         subvar.str (               $_TRANS_Z                     ) = '0'                     ! $G_DOF.$G_HSS.$G_HSH.$_TRANS_Z, Definition
         subvar.intent (            $_TRANS_Z                     ) = 1                       ! Intent
         subvar.status (            $_TRANS_Z                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.discr.desc (   1 ,  $_TRANS_Z                     ) = 'Disabled'              ! Description of discrete values
         subvar.discr.desc (   2 ,  $_TRANS_Z                     ) = 'Enabled'               ! Description of discrete values
         subvar.discr.str (   1 ,   $_TRANS_Z                     ) = '1'                     ! Discrete values
         subvar.discr.str (   2 ,   $_TRANS_Z                     ) = '0'                     ! Discrete values
         subvar.txt (               $_TRANS_Z                     ) = 'TRANSlation in Z'      ! Comment

      subvargroup.end (             $G_HSH                        )                           ! $G_DOF.$G_HSS.$G_HSH
      subvargroup.txt (             $G_HSH                        ) = 'High speed SHaft'      ! Comment
   subvargroup.end (                $G_HSS                        )                           ! $G_DOF.$G_HSS
   subvargroup.txt (                $G_HSS                        ) = 'High Speed Stage'      ! Comment
subvargroup.end (                   $G_DOF                        )                           ! $G_DOF
subvargroup.desc (        1 ,       $G_DOF                        ) = ''                      ! Description
subvargroup.txt (                   $G_DOF                        ) = 'Degrees Of Freedom'    ! Comment

subvargroup.begin (                 $G_3D                         )                           ! $G_3D
   subvargroup.begin (              $G_HSG                        )                           ! $G_3D.$G_HSG
      subvar.str (                  $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$G_HSG.$_TRANSPARENCY_ALL, Definition
      subvar.intent (               $_TRANSPARENCY_ALL            ) = 1                       ! Intent
      subvar.status (               $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

      subvar.str (                  $_TRANSPARENCY_RIGID          ) = 'SWITCH($G_BP.$G_HSG.$_BODY_TYPE)\n{\n   CASE   0 :   $G_3D.$G_HSG.$_TRANSPARENCY_ALL;\n   CASE   1 :   1;\n   CASE   2 :   1 ;\n\n   DEFAULT:  $G_3D.$G_HSG.$_TRANSPARENCY_ALL;\n}' ! $G_3D.$G_HSG.$_TRANSPARENCY_RIGID, Definition
      subvar.intent (               $_TRANSPARENCY_RIGID          ) = 1                       ! Intent
      subvar.status (               $_TRANSPARENCY_RIGID          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRANSPARENCY_RIGID          ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

      subvar.str (                  $_TRANSPARENCY_CAD            ) = '1'                     ! $G_3D.$G_HSG.$_TRANSPARENCY_CAD, Definition
      subvar.intent (               $_TRANSPARENCY_CAD            ) = 1                       ! Intent
      subvar.status (               $_TRANSPARENCY_CAD            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_TRANSPARENCY_CAD            ) = 'Transparency CAD primitives' ! Comment

      subvargroup.begin (           $G_SPB                        )                           ! $G_3D.$G_HSG.$G_SPB
         subvar.str (               $_D_O                         ) = '$G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_O' ! $G_3D.$G_HSG.$G_SPB.$_D_O, Definition
         subvar.intent (            $_D_O                         ) = 1                       ! Intent
         subvar.status (            $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_O                         ) = 'Diameter Out'          ! Comment

         subvar.str (               $_D_I                         ) = '$G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_I' ! $G_3D.$G_HSG.$G_SPB.$_D_I, Definition
         subvar.intent (            $_D_I                         ) = 1                       ! Intent
         subvar.status (            $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_D_I                         ) = 'Diameter In'           ! Comment

         subvar.str (               $_L                           ) = '$G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_L' ! $G_3D.$G_HSG.$G_SPB.$_L, Definition
         subvar.intent (            $_L                           ) = 1                       ! Intent
         subvar.status (            $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_L                           ) = 'Length'                ! Comment

      subvargroup.end (             $G_SPB                        )                           ! $G_3D.$G_HSG.$G_SPB
      subvargroup.txt (             $G_SPB                        ) = 'SuPport Bolts'         ! Comment
   subvargroup.end (                $G_HSG                        )                           ! $G_3D.$G_HSG
   subvargroup.txt (                $G_HSG                        ) = 'HouSinG'               ! Comment
   subvargroup.begin (              $G_LSS                        )                           ! $G_3D.$G_LSS
      subvargroup.begin (           $G_SUN                        )                           ! $G_3D.$G_LSS.$G_SUN
         subvar.str (               $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_ALL, Definition
         subvar.intent (            $_TRANSPARENCY_ALL            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

         subvar.str (               $_TRANSPARENCY_RIGID          ) = 'SWITCH($G_BP.$G_LSS.$G_SUN.$_BODY_TYPE)\n{\n   CASE   0 :   $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_ALL;\n   CASE   1 :   1;\n   CASE   2 :   1 ;\n\n   DEFAULT:  $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_ALL;\n}' ! $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_RIGID, Definition
         subvar.intent (            $_TRANSPARENCY_RIGID          ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_RIGID          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_RIGID          ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

         subvargroup.begin (        $G_SH                         )                           ! $G_3D.$G_LSS.$G_SUN.$G_SH
            subvar.str (            $_D_I                         ) = '0.200 m'               ! $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_I, Definition
            subvar.status (         $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_I                         ) = 'Diameter In'           ! Comment

            subvar.str (            $_D_O_1                       ) = '0.579318 m'            ! $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_1, Definition
            subvar.status (         $_D_O_1                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_1                       ) = 'Diameter Out 1'        ! Comment

            subvar.str (            $_D_O_2                       ) = '0.439 m'               ! $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2, Definition
            subvar.status (         $_D_O_2                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_2                       ) = 'Diameter Out 2'        ! Comment

            subvar.str (            $_D_O_3                       ) = '0.449 m'               ! $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_3, Definition
            subvar.status (         $_D_O_3                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_3                       ) = 'Diameter Out 3'        ! Comment

            subvar.str (            $_D_O_4                       ) = '0.41 m'                ! $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_4, Definition
            subvar.status (         $_D_O_4                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_4                       ) = 'Diameter Out 4'        ! Comment

         subvargroup.end (          $G_SH                         )                           ! $G_3D.$G_LSS.$G_SUN.$G_SH
         subvargroup.txt (          $G_SH                         ) = 'SHaft'                 ! Comment
      subvargroup.end (             $G_SUN                        )                           ! $G_3D.$G_LSS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
      subvargroup.begin (           $G_PLC                        )                           ! $G_3D.$G_LSS.$G_PLC
         subvar.str (               $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL, Definition
         subvar.intent (            $_TRANSPARENCY_ALL            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

         subvar.str (               $_TRANSPARENCY_RIGID          ) = 'SWITCH($G_BP.$G_LSS.$G_PLC.$_BODY_TYPE)\n{\n   CASE   0 :   $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL;\n   CASE   1 :   1;\n   CASE   2 :   1 ;\n\n   DEFAULT:  $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL;\n}' ! $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_RIGID, Definition
         subvar.intent (            $_TRANSPARENCY_RIGID          ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_RIGID          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_RIGID          ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

         subvar.str (               $_TRANSPARENCY_CAD            ) = '0.5'                   ! $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_CAD, Definition
         subvar.intent (            $_TRANSPARENCY_CAD            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_CAD            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_CAD            ) = 'Transparency CAD primitives' ! Comment

         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_LSS.$G_PLC.$G_BR
            subvar.str (            $_1_O                         ) = '1.6 m'                 ! $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_O, Definition
            subvar.intent (         $_1_O                         ) = 0                       ! Intent
            subvar.status (         $_1_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_O                         ) = 'diameter Out 1, bearing 1' ! Comment

            subvar.str (            $_1_I                         ) = '1.05 m'                ! $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_I, Definition
            subvar.intent (         $_1_I                         ) = 0                       ! Intent
            subvar.status (         $_1_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_I                         ) = 'diameter In 1, bearing 1' ! Comment

            subvar.str (            $_1_L                         ) = '0.245 m'               ! $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_L, Definition
            subvar.intent (         $_1_L                         ) = 0                       ! Intent
            subvar.status (         $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_L                         ) = 'length, bearing 1'     ! Comment

            subvar.str (            $_2_O                         ) = '1.6 m'                 ! $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_O, Definition
            subvar.intent (         $_2_O                         ) = 0                       ! Intent
            subvar.status (         $_2_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_O                         ) = 'diameter Out 1, bearing 2' ! Comment

            subvar.str (            $_2_I                         ) = '1.05 m'                ! $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_I, Definition
            subvar.intent (         $_2_I                         ) = 0                       ! Intent
            subvar.status (         $_2_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_I                         ) = 'diameter In 1, bearing 2' ! Comment

            subvar.str (            $_2_L                         ) = '0.245 m'               ! $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_L, Definition
            subvar.intent (         $_2_L                         ) = 0                       ! Intent
            subvar.status (         $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_L                         ) = 'Length, bearing 2'     ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_LSS.$G_PLC.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_PLC                        )                           ! $G_3D.$G_LSS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_3D.$G_LSS.$G_PLT
         subvar.str (               $_TRANSPARENCY                ) = '0'                     ! $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY, Definition
         subvar.intent (            $_TRANSPARENCY                ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY                ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY                ) = 'Transparency'          ! Comment

         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_LSS.$G_PLT.$G_BR
            subvar.str (            $_1_O                         ) = '0.43 m'                ! $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O, Definition
            subvar.intent (         $_1_O                         ) = 0                       ! Intent
            subvar.status (         $_1_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_O                         ) = 'diameter Out 1, bearing 1' ! Comment

            subvar.str (            $_1_I                         ) = '0.34 m'                ! $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I, Definition
            subvar.intent (         $_1_I                         ) = 0                       ! Intent
            subvar.status (         $_1_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_I                         ) = 'diameter In 1, bearing 1' ! Comment

            subvar.str (            $_1_L                         ) = '0.243 m'               ! $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L, Definition
            subvar.intent (         $_1_L                         ) = 0                       ! Intent
            subvar.status (         $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_L                         ) = 'Length, bearing 1'     ! Comment

            subvar.str (            $_2_O                         ) = '0.43 m'                ! $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O, Definition
            subvar.intent (         $_2_O                         ) = 0                       ! Intent
            subvar.status (         $_2_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_O                         ) = 'diameter Out 1, bearing 2' ! Comment

            subvar.str (            $_2_I                         ) = '0.34 m'                ! $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I, Definition
            subvar.intent (         $_2_I                         ) = 0                       ! Intent
            subvar.status (         $_2_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_I                         ) = 'diameter In 1, bearing 2' ! Comment

            subvar.str (            $_2_L                         ) = '0.243 m'               ! $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L, Definition
            subvar.intent (         $_2_L                         ) = 0                       ! Intent
            subvar.status (         $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_L                         ) = 'Length, bearing 2'     ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_LSS.$G_PLT.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_PLT                        )                           ! $G_3D.$G_LSS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLaneT'                ! Comment
   subvargroup.end (                $G_LSS                        )                           ! $G_3D.$G_LSS
   subvargroup.txt (                $G_LSS                        ) = 'Low Speed Stage'       ! Comment
   subvargroup.begin (              $G_IMS                        )                           ! $G_3D.$G_IMS
      subvargroup.begin (           $G_PLC                        )                           ! $G_3D.$G_IMS.$G_PLC
         subvar.str (               $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL, Definition
         subvar.intent (            $_TRANSPARENCY_ALL            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

         subvar.str (               $_TRANSPARENCY_CAD            ) = '0.5'                   ! $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_CAD, Definition
         subvar.intent (            $_TRANSPARENCY_CAD            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_CAD            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_CAD            ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

         subvargroup.begin (        $G_SH                         )                           ! $G_3D.$G_IMS.$G_PLC.$G_SH
            subvar.str (            $_PSH_L                       ) = '0.55 m'                ! $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_L, Definition
            subvar.status (         $_PSH_L                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_PSH_L                       ) = 'Length, Planet SHaft'  ! Comment

            subvar.str (            $_PSH_D                       ) = '0.27 m'                ! $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_D, Definition
            subvar.status (         $_PSH_D                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_PSH_D                       ) = 'Diameter, Planet SHaft' ! Comment

         subvargroup.end (          $G_SH                         )                           ! $G_3D.$G_IMS.$G_PLC.$G_SH
         subvargroup.txt (          $G_SH                         ) = 'SHaft'                 ! Comment
         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_IMS.$G_PLC.$G_BR
            subvar.str (            $_1_O                         ) = '0.86 m'                ! $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_O, Definition
            subvar.status (         $_1_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_O                         ) = 'diameter Out 1, bearing 1' ! Comment

            subvar.str (            $_1_I                         ) = '0.6 m'                 ! $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_I, Definition
            subvar.status (         $_1_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_I                         ) = 'diameter In 1, bearing 1' ! Comment

            subvar.str (            $_1_L                         ) = '0.14 m'                ! $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_L, Definition
            subvar.status (         $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_L                         ) = 'Length, bearing 1'     ! Comment

            subvar.str (            $_2_O                         ) = '1.05 m'                ! $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_O, Definition
            subvar.status (         $_2_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_O                         ) = 'diameter Out 1, bearing 2' ! Comment

            subvar.str (            $_2_I                         ) = '0.65 m'                ! $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_I, Definition
            subvar.status (         $_2_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_I                         ) = 'diameter In 1, bearing 2' ! Comment

            subvar.str (            $_2_L                         ) = '0.17 m'                ! $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_L, Definition
            subvar.status (         $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_L                         ) = 'Length, bearing 2'     ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_IMS.$G_PLC.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_PLC                        )                           ! $G_3D.$G_IMS.$G_PLC
      subvargroup.txt (             $G_PLC                        ) = 'PLanet Carrier'        ! Comment
      subvargroup.begin (           $G_SUN                        )                           ! $G_3D.$G_IMS.$G_SUN
         subvar.str (               $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_ALL, Definition
         subvar.intent (            $_TRANSPARENCY_ALL            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

         subvar.str (               $_TRANSPARENCY_RIGID          ) = 'SWITCH($G_BP.$G_IMS.$G_SUN.$_BODY_TYPE)\n{\n   CASE   0 :   $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_ALL;\n   CASE   1 :   1;\n   CASE   2 :   1 ;\n\n   DEFAULT:  $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_ALL;\n}' ! $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_RIGID, Definition
         subvar.intent (            $_TRANSPARENCY_RIGID          ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_RIGID          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_RIGID          ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

         subvargroup.begin (        $G_SH                         )                           ! $G_3D.$G_IMS.$G_SUN.$G_SH
            subvar.str (            $_D_I                         ) = '0.200 m'               ! $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_I, Definition
            subvar.status (         $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_I                         ) = 'Diameter In'           ! Comment

            subvar.str (            $_D_O_1                       ) = '0.362704 m'            ! $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_1, Definition
            subvar.status (         $_D_O_1                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_1                       ) = 'Diameter Out 1'        ! Comment

            subvar.str (            $_D_O_2                       ) = '0.332824 m'            ! $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_2, Definition
            subvar.status (         $_D_O_2                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_2                       ) = 'Diameter Out 2'        ! Comment

            subvar.str (            $_D_O_3                       ) = '0.335 m'               ! $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3, Definition
            subvar.status (         $_D_O_3                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_3                       ) = 'Diameter Out 3'        ! Comment

            subvar.str (            $_D_O_4                       ) = '0.35874 m'             ! $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_4, Definition
            subvar.status (         $_D_O_4                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_4                       ) = 'Diameter Out 4'        ! Comment

         subvargroup.end (          $G_SH                         )                           ! $G_3D.$G_IMS.$G_SUN.$G_SH
      subvargroup.end (             $G_SUN                        )                           ! $G_3D.$G_IMS.$G_SUN
      subvargroup.txt (             $G_SUN                        ) = 'SUN'                   ! Comment
      subvargroup.begin (           $G_PLT                        )                           ! $G_3D.$G_IMS.$G_PLT
         subvar.str (               $_TRANSPARENCY                ) = '0'                     ! $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY, Definition
         subvar.intent (            $_TRANSPARENCY                ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY                ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY                ) = 'Transparency'          ! Comment

         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_IMS.$G_PLT.$G_BR
            subvar.str (            $_1_O                         ) = '0.42 m'                ! $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O, Definition
            subvar.status (         $_1_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_O                         ) = 'diameter Out 1, bearing 1' ! Comment

            subvar.str (            $_1_I                         ) = '0.28 m'                ! $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I, Definition
            subvar.status (         $_1_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_I                         ) = 'diameter In 1, bearing 1' ! Comment

            subvar.str (            $_1_L                         ) = '0.19 m'                ! $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L, Definition
            subvar.status (         $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_L                         ) = 'Length, bearing 1'     ! Comment

            subvar.str (            $_2_O                         ) = '0.42 m'                ! $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O, Definition
            subvar.status (         $_2_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_O                         ) = 'diameter Out 1, bearing 2' ! Comment

            subvar.str (            $_2_I                         ) = '0.28 m'                ! $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I, Definition
            subvar.status (         $_2_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_I                         ) = 'diameter In 1, bearing 2' ! Comment

            subvar.str (            $_2_L                         ) = '0.19 m'                ! $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L, Definition
            subvar.status (         $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_L                         ) = 'Length, bearing 2'     ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_IMS.$G_PLT.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_PLT                        )                           ! $G_3D.$G_IMS.$G_PLT
      subvargroup.txt (             $G_PLT                        ) = 'PLaneT'                ! Comment
   subvargroup.end (                $G_IMS                        )                           ! $G_3D.$G_IMS
   subvargroup.txt (                $G_IMS                        ) = 'InterMediate speed Stage' ! Comment
   subvargroup.begin (              $G_HSS                        )                           ! $G_3D.$G_HSS
      subvargroup.begin (           $G_HSH                        )                           ! $G_3D.$G_HSS.$G_HSH
         subvar.str (               $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL, Definition
         subvar.intent (            $_TRANSPARENCY_ALL            ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

         subvar.str (               $_TRANSPARENCY_RIGID          ) = 'SWITCH($G_BP.$G_HSS.$G_HSH.$_BODY_TYPE)\n{\n   CASE   0 :   $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL;\n   CASE   1 :   1;\n   CASE   2 :   1 ;\n\n   DEFAULT:  $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL;\n}' ! $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_RIGID, Definition
         subvar.intent (            $_TRANSPARENCY_RIGID          ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY_RIGID          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY_RIGID          ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

         subvargroup.begin (        $G_SH                         )                           ! $G_3D.$G_HSS.$G_HSH.$G_SH
            subvar.str (            $_D_I                         ) = '0 m'                   ! $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_I, Definition
            subvar.status (         $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_I                         ) = 'Diameter In'           ! Comment

            subvar.str (            $_D_O_1                       ) = '0.26 m'                ! $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1, Definition
            subvar.status (         $_D_O_1                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_1                       ) = 'Diameter Out 1'        ! Comment

            subvar.str (            $_D_O_2                       ) = '0.306283 m'            ! $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_2, Definition
            subvar.status (         $_D_O_2                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_2                       ) = 'Diameter Out 2'        ! Comment

            subvar.str (            $_D_O_3                       ) = '0.21 m'                ! $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3, Definition
            subvar.status (         $_D_O_3                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_3                       ) = 'Diameter Out 3'        ! Comment

            subvar.str (            $_D_O_4                       ) = '0.2 m'                 ! $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_4, Definition
            subvar.status (         $_D_O_4                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_4                       ) = 'Diameter Out 4'        ! Comment

            subvar.str (            $_D_O_5                       ) = '0.18 m'                ! $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5, Definition
            subvar.status (         $_D_O_5                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O_5                       ) = 'Diameter Out 5'        ! Comment

         subvargroup.end (          $G_SH                         )                           ! $G_3D.$G_HSS.$G_HSH.$G_SH
         subvargroup.txt (          $G_SH                         ) = 'SHaft'                 ! Comment
         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_HSS.$G_HSH.$G_BR
            subvar.str (            $_1_O                         ) = '0.54 m'                ! $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_O, Definition
            subvar.status (         $_1_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_O                         ) = 'diameter Out 1, bearing 1' ! Comment

            subvar.str (            $_1_I                         ) = '0.26 m'                ! $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_I, Definition
            subvar.status (         $_1_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_I                         ) = 'diameter In 1, bearing 1' ! Comment

            subvar.str (            $_1_L                         ) = '0.206 m'               ! $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_L, Definition
            subvar.status (         $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_L                         ) = 'Length, bearing 1'     ! Comment

            subvar.str (            $_2_O                         ) = '0.48 m'                ! $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_O, Definition
            subvar.status (         $_2_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_O                         ) = 'diameter Out 1, bearing 2' ! Comment

            subvar.str (            $_2_I                         ) = '0.21 m'                ! $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_I, Definition
            subvar.status (         $_2_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_I                         ) = 'diameter In 1, bearing 2' ! Comment

            subvar.str (            $_2_L                         ) = '0.23 m'                ! $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_L, Definition
            subvar.status (         $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_L                         ) = 'Length, bearing 2'     ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_HSS.$G_HSH.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_HSH                        )                           ! $G_3D.$G_HSS.$G_HSH
      subvargroup.txt (             $G_HSH                        ) = 'High speed SHaft'      ! Comment
      subvargroup.begin (           $G_BGR                        )                           ! $G_3D.$G_HSS.$G_BGR
         subvar.str (               $_TRANSPARENCY                ) = '0'                     ! $G_3D.$G_HSS.$G_BGR.$_TRANSPARENCY, Definition
         subvar.intent (            $_TRANSPARENCY                ) = 1                       ! Intent
         subvar.status (            $_TRANSPARENCY                ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_TRANSPARENCY                ) = 'Transparency'          ! Comment

         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_HSS.$G_BGR.$G_BR
            subvar.str (            $_1_O                         ) = '0.73 m'                ! $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_O, Definition
            subvar.status (         $_1_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_O                         ) = 'diameter Out 1, bearing 1' ! Comment

            subvar.str (            $_1_I                         ) = '0.48 m'                ! $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_I, Definition
            subvar.status (         $_1_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_I                         ) = 'diameter In 1, bearing 1' ! Comment

            subvar.str (            $_1_L                         ) = '0.14 m'                ! $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_L, Definition
            subvar.status (         $_1_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_1_L                         ) = 'Length, bearing 1'     ! Comment

            subvar.str (            $_2_O                         ) = '0.75 m'                ! $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_O, Definition
            subvar.status (         $_2_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_O                         ) = 'diameter Out 1, bearing 2' ! Comment

            subvar.str (            $_2_I                         ) = '0.5 m'                 ! $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_I, Definition
            subvar.status (         $_2_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_I                         ) = 'diameter In 1, bearing 2' ! Comment

            subvar.str (            $_2_L                         ) = '0.14 m'                ! $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_L, Definition
            subvar.status (         $_2_L                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_2_L                         ) = 'Length, bearing 2'     ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_HSS.$G_BGR.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_BGR                        )                           ! $G_3D.$G_HSS.$G_BGR
      subvargroup.txt (             $G_BGR                        ) = 'Bull GeaR'             ! Comment
   subvargroup.end (                $G_HSS                        )                           ! $G_3D.$G_HSS
   subvargroup.txt (                $G_HSS                        ) = 'High Speed Stage'      ! Comment
subvargroup.end (                   $G_3D                         )                           ! $G_3D
subvargroup.txt (                   $G_3D                         ) = '3D properties'         ! Comment

subvargroup.begin (                 $G_INTERFACE                  )                           ! $G_INTERFACE
   subvargroup.begin (              $G_031_MFR                    )                           ! $G_INTERFACE.$G_031_MFR
      subvargroup.begin (           $G_PA                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA
         subvargroup.begin (        $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB
            subvargroup.begin (     $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX
               subvargroup.begin (  $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01
                  subvar.str (      $_X                           ) = '-0.470 m'              ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '1.7000 m'              ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '0 m'                   ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.txt (      $_Z                           ) = 'z-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

               subvargroup.end (    $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01
               subvargroup.txt (    $G_01                         ) = 'SuPport Bolt 1'        ! Comment
               subvargroup.begin (  $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02
                  subvar.str (      $_X                           ) = '-0.470 m'              ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '-1.7000 m'             ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '0 m'                   ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.txt (      $_Z                           ) = 'z-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

               subvargroup.end (    $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02
               subvargroup.txt (    $G_02                         ) = 'SuPport Bolt 2'        ! Comment
            subvargroup.end (       $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX
            subvargroup.txt (       $G_GBX                        ) = 'GearBoX'               ! Comment
         subvargroup.end (          $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB
         subvargroup.txt (          $G_SPB                        ) = 'SuPport Bolts'         ! Comment
         subvargroup.begin (        $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR
            subvargroup.begin (     $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH
               subvar.str (         $_X                           ) = '-1.5471 m'             ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH.$_X, Definition
               subvar.intent (      $_X                           ) = 2                       ! Intent
               subvar.status (      $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_X                           ) = 'x-pos. of Main SHaft BeaRing (wrt. Main SHaft reference frame)' ! Comment

            subvargroup.end (       $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH
            subvargroup.txt (       $G_MSH                        ) = 'Main SHaft'            ! Comment
         subvargroup.end (          $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRing'               ! Comment
      subvargroup.end (             $G_PA                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA
      subvargroup.txt (             $G_PA                         ) = 'PArameter'             ! Comment
      subvargroup.begin (           $G_HP                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HP
         subvargroup.begin (        $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX
            subvar.str (            $_X                           ) = '0 m'                   ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos. of Main FRame connection to GearBoX (wrt. DriveTRain reference frame); corresponds to GearBoX reference frame' ! Comment

         subvargroup.end (          $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX
         subvargroup.txt (          $G_GBX                        ) = 'GearBoX'               ! Comment
         subvargroup.begin (        $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH
            subvar.str (            $_X                           ) = '- 0.86 m'              ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos. of Main FRame connection to Main SHaft (wrt. DRiveTrain reference frame); corresponds to Main SHaft reference frame' ! Comment

         subvargroup.end (          $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH
         subvargroup.txt (          $G_MSH                        ) = 'Main SHaft'            ! Comment
         subvargroup.begin (        $G_CPL                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL
            subvar.str (            $_X                           ) = '2.89 m'                ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos. of CouPLing reference marker (wrt. to DRiveTrain reference frame)' ! Comment

            subvar.str (            $_R                           ) = '0.68 m'                ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R, Definition
            subvar.intent (         $_R                           ) = 2                       ! Intent
            subvar.txt (            $_R                           ) = 'radial pos. of CouPLing reference marker (wrt. DriveTRain reference frame)' ! Comment

            subvar.str (            $_ang                         ) = '36 deg'                ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang, Definition
            subvar.intent (         $_ang                         ) = 2                       ! Intent
            subvar.txt (            $_ang                         ) = 'offset angle (around alpha) of CouPLing reference marker (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_CPL                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL
         subvargroup.txt (          $G_CPL                        ) = 'CouPLing'              ! Comment
      subvargroup.end (             $G_HP                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HP
      subvargroup.desc (   1 ,      $G_HP                         ) = ''                      ! Description
      subvargroup.txt (             $G_HP                         ) = 'Hard Points'           ! Comment
      subvargroup.begin (           $G_HL                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HL
         subvar.str (               $_TLT_ANG                     ) = '-5 deg'                ! $G_INTERFACE.$G_031_MFR.$G_HL.$_TLT_ANG, Definition
         subvar.intent (            $_TLT_ANG                     ) = 2                       ! Intent
         subvar.txt (               $_TLT_ANG                     ) = 'TiLT ANGle'            ! Comment

      subvargroup.end (             $G_HL                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HL
      subvargroup.txt (             $G_HL                         ) = 'Help Values'           ! Comment
      subvargroup.begin (           $G_3D                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D
         subvargroup.begin (        $G_HSG                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG
            subvargroup.begin (     $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB
               subvar.str (         $_D_O                         ) = '0.24 m'                ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_O, Definition
               subvar.intent (      $_D_O                         ) = 2                       ! Intent
               subvar.status (      $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_O                         ) = 'Diameter Out'          ! Comment

               subvar.str (         $_D_I                         ) = '0 m'                   ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_I, Definition
               subvar.intent (      $_D_I                         ) = 2                       ! Intent
               subvar.status (      $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_I                         ) = 'Diameter In'           ! Comment

               subvar.str (         $_L                           ) = '1 m'                   ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_L, Definition
               subvar.intent (      $_L                           ) = 2                       ! Intent
               subvar.status (      $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_L                           ) = 'Length'                ! Comment

            subvargroup.end (       $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB
            subvargroup.txt (       $G_SPB                        ) = 'SuPport Bolts'         ! Comment
         subvargroup.end (          $G_HSG                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG
         subvargroup.txt (          $G_HSG                        ) = 'HouSinG'               ! Comment
         subvargroup.begin (        $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH
            subvargroup.begin (     $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR
               subvar.str (         $_D_O                         ) = '1.315 m'               ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_O, Definition
               subvar.intent (      $_D_O                         ) = 2                       ! Intent
               subvar.status (      $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_O                         ) = 'Diameter Out'          ! Comment

               subvar.str (         $_D_I                         ) = '1 m'                   ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_I, Definition
               subvar.intent (      $_D_I                         ) = 2                       ! Intent
               subvar.status (      $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_I                         ) = 'Diameter In'           ! Comment

               subvar.str (         $_L                           ) = '0.315m'                ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_L, Definition
               subvar.intent (      $_L                           ) = 2                       ! Intent
               subvar.status (      $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_L                           ) = 'Length'                ! Comment

            subvargroup.end (       $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR
            subvargroup.txt (       $G_BR                         ) = 'BeaRing'               ! Comment
         subvargroup.end (          $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH
         subvargroup.txt (          $G_MSH                        ) = 'Main SHaft'            ! Comment
      subvargroup.end (             $G_3D                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D
      subvargroup.txt (             $G_3D                         ) = '3D properties'         ! Comment
   subvargroup.end (                $G_031_MFR                    )                           ! $G_INTERFACE.$G_031_MFR
   subvargroup.txt (                $G_031_MFR                    ) = 'MainFRrame'            ! Comment
   subvargroup.begin (              $G_032_GBX                    )                           ! $G_INTERFACE.$G_032_GBX
      subvargroup.begin (           $G_PA                         )                           ! $G_INTERFACE.$G_032_GBX.$G_PA
         subvargroup.begin (        $G_SCN                        )                           ! $G_INTERFACE.$G_032_GBX.$G_PA.$G_SCN
            subvar.str (            $_MSH_2_LSS_X                 ) = '$G_PA.$G_SCN.$_MSH_2_LSS_X' ! $G_INTERFACE.$G_032_GBX.$G_PA.$G_SCN.$_MSH_2_LSS_X, Definition
            subvar.status (         $_MSH_2_LSS_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_MSH_2_LSS_X                 ) = 'x-pos. of connection Low Speed Stage PLanet Carrier to Main SHaft (wrt. Low Speed Stage reference frame)' ! Comment

         subvargroup.end (          $G_SCN                        )                           ! $G_INTERFACE.$G_032_GBX.$G_PA.$G_SCN
         subvargroup.txt (          $G_SCN                        ) = 'Shaft CoNnections'     ! Comment
      subvargroup.end (             $G_PA                         )                           ! $G_INTERFACE.$G_032_GBX.$G_PA
      subvargroup.txt (             $G_PA                         ) = 'PArameters'            ! Comment
      subvargroup.begin (           $G_HP                         )                           ! $G_INTERFACE.$G_032_GBX.$G_HP
         subvargroup.begin (        $G_GBX                        )                           ! $G_INTERFACE.$G_032_GBX.$G_HP.$G_GBX
            subvargroup.begin (     $G_LSS                        )                           ! $G_INTERFACE.$G_032_GBX.$G_HP.$G_GBX.$G_LSS
               subvar.str (         $_X                           ) = '$G_HP.$G_GBX.$G_LSS.$_X' ! $G_INTERFACE.$G_032_GBX.$G_HP.$G_GBX.$G_LSS.$_X, Definition
               subvar.status (      $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_X                           ) = 'x-pos. of Low Speed Stage reference marker (wrt. GearBoX reference frame)' ! Comment

            subvargroup.end (       $G_LSS                        )                           ! $G_INTERFACE.$G_032_GBX.$G_HP.$G_GBX.$G_LSS
            subvargroup.txt (       $G_LSS                        ) = 'Low Speed Stage'       ! Comment
         subvargroup.end (          $G_GBX                        )                           ! $G_INTERFACE.$G_032_GBX.$G_HP.$G_GBX
         subvargroup.txt (          $G_GBX                        ) = 'GearBoX'               ! Comment
      subvargroup.end (             $G_HP                         )                           ! $G_INTERFACE.$G_032_GBX.$G_HP
      subvargroup.txt (             $G_HP                         ) = 'Hard Points'           ! Comment
      subvargroup.begin (           $G_HL                         )                           ! $G_INTERFACE.$G_032_GBX.$G_HL
         subvar.str (               $_GBX_I                       ) = '$G_HL.$_GBX_I'         ! $G_INTERFACE.$G_032_GBX.$G_HL.$_GBX_I, Definition
         subvar.intent (            $_GBX_I                       ) = 2                       ! Intent
         subvar.txt (               $_GBX_I                       ) = 'gear box ratio'        ! Comment

      subvargroup.end (             $G_HL                         )                           ! $G_INTERFACE.$G_032_GBX.$G_HL
      subvargroup.txt (             $G_HL                         ) = 'Help Values'           ! Comment
   subvargroup.end (                $G_032_GBX                    )                           ! $G_INTERFACE.$G_032_GBX
   subvargroup.txt (                $G_032_GBX                    ) = 'GearBoX'               ! Comment
   subvargroup.begin (              $G_034_CPL                    )                           ! $G_INTERFACE.$G_034_CPL
      subvargroup.begin (           $G_PA                         )                           ! $G_INTERFACE.$G_034_CPL.$G_PA
         subvargroup.begin (        $G_SCN                        )                           ! $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN
            subvar.str (            $_GBX_2_CPL_X                 ) = '-0.15 m\n'             ! $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN.$_GBX_2_CPL_X, Definition
            subvar.intent (         $_GBX_2_CPL_X                 ) = 2                       ! Intent
            subvar.status (         $_GBX_2_CPL_X                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_GBX_2_CPL_X                 ) = 'x-position, GearBoX to CouPLing' ! Comment

         subvargroup.end (          $G_SCN                        )                           ! $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN
         subvargroup.txt (          $G_SCN                        ) = 'Shaft CoNnections'     ! Comment
      subvargroup.end (             $G_PA                         )                           ! $G_INTERFACE.$G_034_CPL.$G_PA
      subvargroup.txt (             $G_PA                         ) = 'PArameter'             ! Comment
   subvargroup.end (                $G_034_CPL                    )                           ! $G_INTERFACE.$G_034_CPL
   subvargroup.txt (                $G_034_CPL                    ) = 'CouPLing'              ! Comment
subvargroup.end (                   $G_INTERFACE                  )                           ! $G_INTERFACE
subvargroup.txt (                   $G_INTERFACE                  ) = 'INTERFACE subvars - exchanged with other submodels via communicators' ! Comment

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -1.26000000000000000E+03
refsys.attr.2d.pos.y (              $R_Isys                       ) = 1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 1.31000000000000000E+03
refsys.attr.2d.height (             $R_Isys                       ) = 7.90000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GBX     ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GBX     ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GBX_SPB1) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GBX_SPB1) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_MFR_GBX_SPB2) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_MFR_GBX_SPB2) = $R_Isys                 ! Reference system

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Isys                       ) = 0.00000000000000000E+00 ! Transparency
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_HSG                        ) = $G_BP.$G_HSG.$_M        ! Mass of the Body
body.mp (                           $B_HSG                        ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_HSG                        ) = $G_BP.$G_HSG.$_CM_X     ! Center of gravity
body.cg.pos (             2 ,       $B_HSG                        ) = $G_BP.$G_HSG.$_CM_Y     ! Center of gravity
body.cg.pos (             3 ,       $B_HSG                        ) = $G_BP.$G_HSG.$_CM_Z     ! Center of gravity
body.I.tens (             1 ,   1 , $B_HSG                        ) = $G_BP.$G_HSG.$_IXX      ! Moments of inertia
body.I.tens (             1 ,   2 , $B_HSG                        ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             1 ,   3 , $B_HSG                        ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   1 , $B_HSG                        ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_HSG                        ) = $G_BP.$G_HSG.$_IYY      ! Moments of inertia
body.I.tens (             2 ,   3 , $B_HSG                        ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   1 , $B_HSG                        ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   2 , $B_HSG                        ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_HSG                        ) = $G_BP.$G_HSG.$_IZZ      ! Moments of inertia
body.I.kind (                       $B_HSG                        ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_HSG                        ) = $G_BP.$G_HSG.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_HSG                        ) = 4.69969478605538449E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_HSG                        ) = 1.09922993757791522E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_HSG                        ) = -4.47935947065289906E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_HSG                        ) = -2.46254770091913961E-04 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_HSG                        ) = 4.34175155013060473E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_HSG                        ) = 2.34642743630510001E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         7 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         8 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         9 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        10 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        11 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        12 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        13 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        14 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        15 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        16 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        17 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        18 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        19 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        20 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        21 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        22 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        23 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        24 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        25 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        26 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        27 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        28 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        29 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        30 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        31 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        32 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        33 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        34 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        35 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        36 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        37 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        38 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        39 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        40 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        41 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        42 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        43 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        44 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        45 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        46 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        47 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        48 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        49 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        50 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        51 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        52 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        53 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        54 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        55 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        56 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        57 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        58 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        59 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        60 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        61 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        62 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        63 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        64 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        65 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        66 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        67 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        68 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        69 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        70 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        71 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        72 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        73 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        74 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        75 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        76 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        77 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        78 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        79 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        80 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        81 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        82 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        83 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        84 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        85 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        86 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        87 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        88 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        89 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        90 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        91 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        92 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        93 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        94 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        95 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        96 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        97 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        98 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        99 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (       100 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         7 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         8 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         9 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        10 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        11 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        12 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        13 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        14 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        15 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        16 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        17 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        18 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        19 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        20 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        21 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        22 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        23 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        24 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        25 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        26 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        27 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        28 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        29 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        30 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        31 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        32 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        33 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        34 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        35 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        36 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        37 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        38 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        39 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        40 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        41 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        42 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        43 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        44 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        45 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        46 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        47 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        48 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        49 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        50 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        51 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        52 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        53 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        54 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        55 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        56 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        57 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        58 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        59 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        60 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        61 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        62 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        63 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        64 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        65 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        66 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        67 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        68 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        69 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        70 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        71 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        72 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        73 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        74 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        75 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        76 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        77 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        78 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        79 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        80 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        81 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        82 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        83 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        84 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        85 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        86 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        87 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        88 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        89 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        90 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        91 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        92 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        93 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        94 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        95 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        96 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        97 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        98 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        99 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (       100 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         7 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         8 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (         9 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        10 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        11 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        12 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        13 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        14 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        15 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        16 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        17 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        18 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        19 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        20 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        21 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        22 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        23 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        24 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        25 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        26 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        27 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        28 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        29 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        30 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        31 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        32 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        33 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        34 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        35 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        36 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        37 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        38 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        39 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        40 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        41 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        42 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        43 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        44 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        45 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        46 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        47 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        48 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        49 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        50 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        51 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        52 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        53 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        54 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        55 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        56 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        57 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        58 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        59 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        60 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        61 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        62 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        63 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        64 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        65 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        66 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        67 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        68 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        69 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        70 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        71 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        72 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        73 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        74 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        75 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        76 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        77 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        78 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        79 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        80 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        81 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        82 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        83 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        84 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        85 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        86 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        87 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        88 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        89 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        90 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        91 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        92 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        93 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        94 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        95 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        96 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        97 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        98 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (        99 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.dep (       100 ,       $B_HSG                        ) = 0                       ! State dependency
body.flx.st.scal.stiff (   1 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   2 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   3 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   4 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   5 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   6 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   7 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   8 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   9 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  10 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  11 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  12 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  13 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  14 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  15 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  16 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  17 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  18 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  19 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  20 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  21 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  22 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  23 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  24 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  25 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  26 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  27 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  28 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  29 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  30 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  31 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  32 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  33 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  34 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  35 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  36 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  37 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  38 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  39 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  40 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  41 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  42 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  43 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  44 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  45 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  46 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  47 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  48 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  49 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  50 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  51 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  52 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  53 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  54 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  55 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  56 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  57 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  58 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  59 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  60 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  61 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  62 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  63 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  64 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  65 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  66 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  67 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  68 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  69 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  70 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  71 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  72 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  73 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  74 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  75 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  76 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  77 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  78 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  79 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  80 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  81 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  82 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  83 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  84 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  85 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  86 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  87 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  88 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  89 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  90 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  91 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  92 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  93 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  94 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  95 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  96 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  97 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  98 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  99 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff ( 100 ,      $B_HSG                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.prestress (   1 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   7 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   8 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   9 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  10 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  11 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  12 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  13 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  14 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  15 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  16 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  17 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  18 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  19 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  20 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  21 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  22 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  23 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  24 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  25 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  26 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  27 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  28 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  29 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  30 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  31 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  32 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  33 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  34 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  35 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  36 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  37 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  38 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  39 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  40 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  41 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  42 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  43 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  44 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  45 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  46 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  47 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  48 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  49 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  50 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  51 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  52 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  53 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  54 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  55 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  56 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  57 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  58 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  59 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  60 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  61 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  62 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  63 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  64 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  65 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  66 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  67 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  68 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  69 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  70 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  71 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  72 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  73 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  74 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  75 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  76 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  77 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  78 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  79 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  80 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  81 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  82 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  83 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  84 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  85 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  86 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  87 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  88 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  89 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  90 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  91 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  92 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  93 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  94 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  95 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  96 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  97 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  98 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  99 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress ( 100 ,       $B_HSG                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_HSG                        ) = 1                       ! Damping mode
body.flx.massprops (                $B_HSG                        ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_HSG                        ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_HSG                        ) = $G_BP.$G_HSG.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_HSG                        ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_HSG                        ) = $I_HSG_modal_damping    ! Input Function
body.flx.st.active (      1 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      7 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      8 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      9 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     10 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     11 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     12 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     13 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     14 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     15 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     16 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     17 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     18 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     19 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     20 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     21 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     22 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     23 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     24 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     25 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     26 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     27 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     28 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     29 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     30 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     31 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     32 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     33 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     34 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     35 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     36 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     37 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     38 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     39 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     40 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     41 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     42 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     43 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     44 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     45 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     46 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     47 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     48 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     49 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     50 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     51 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     52 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     53 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     54 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     55 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     56 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     57 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     58 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     59 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     60 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     61 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     62 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     63 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     64 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     65 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     66 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     67 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     68 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     69 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     70 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     71 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     72 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     73 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     74 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     75 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     76 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     77 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     78 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     79 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     80 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     81 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     82 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     83 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     84 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     85 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     86 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     87 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     88 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     89 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     90 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     91 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     92 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     93 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     94 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     95 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     96 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     97 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     98 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     99 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (    100 ,       $B_HSG                        ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_HSG                        ) = $M_HSG_FE_reference     ! Reference marker for FE model
body.flx.cosim.job.type (           $B_HSG                        ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_HSG                        ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_HSG                        ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_HSG                        ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_HSG                        ) = -1.19000000000000000E+03
body.attr.2d.pos.y (                $B_HSG                        ) = 6.20000000000000000E+02
body.attr.2d.width (                $B_HSG                        ) = 1.19000000000000000E+03
body.attr.2d.height (               $B_HSG                        ) = 4.00000000000000000E+01

marker.type (                       $M_HSG_FE_reference           ) = 2                       ! Type
marker.parent (                     $M_HSG_FE_reference           ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_FE_reference           ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_HSG_FE_reference           ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_HSG_FE_reference           ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_HSG_FE_reference           ) = 4                       ! Flexible type

marker.type (                       $M_HSG_BRF                    ) = 1                       ! Type
marker.parent (                     $M_HSG_BRF                    ) = $B_HSG                  ! Body
marker.flx.type (                   $M_HSG_BRF                    ) = 4                       ! Flexible type

marker.type (                       $M_HSG_JNT                    ) = 2                       ! Type
marker.parent (                     $M_HSG_JNT                    ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_JNT                    ) = 0.00000000000000000E+00 ! Position

marker.type (                       $M_HSG_LSS_RNG                ) = 2                       ! Type
marker.parent (                     $M_HSG_LSS_RNG                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_LSS_RNG                ) = $G_KP.$G_HSG.$G_LSS.$_RNG_X ! Position

marker.type (                       $M_HSG_LSS_RNG_GW             ) = 2                       ! Type
marker.ref (                        $M_HSG_LSS_RNG_GW             ) = $M_HSG_LSS_RNG          ! Reference Marker
marker.parent (                     $M_HSG_LSS_RNG_GW             ) = $B_HSG                  ! Body
marker.ang (              2 ,       $M_HSG_LSS_RNG_GW             ) = { 90deg }               ! Angles
marker.ang (              3 ,       $M_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_GW_FLX_MARKER_TYPE ! Flexible type

marker.type (                       $M_HSG_LSS_SUN                ) = 2                       ! Type
marker.parent (                     $M_HSG_LSS_SUN                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_LSS_SUN                ) = $G_KP.$G_HSG.$G_LSS.$_SUN_X ! Position

marker.type (                       $M_HSG_LSS_PLC                ) = 2                       ! Type
marker.parent (                     $M_HSG_LSS_PLC                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_LSS_PLC                ) = $G_KP.$G_HSG.$G_LSS.$_PLC_X ! Position

marker.type (                       $M_HSG_LSS_PLC_BR1            ) = 2                       ! Type
marker.parent (                     $M_HSG_LSS_PLC_BR1            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_LSS_PLC_BR1            ) = $G_KP.$G_HSG.$G_LSS.$_PLC_BR1_X ! Position

marker.type (                       $M_HSG_LSS_PLC_BR2            ) = 2                       ! Type
marker.parent (                     $M_HSG_LSS_PLC_BR2            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_LSS_PLC_BR2            ) = $G_KP.$G_HSG.$G_LSS.$_PLC_BR2_X ! Position

marker.type (                       $M_HSG_IMS_RNG                ) = 2                       ! Type
marker.parent (                     $M_HSG_IMS_RNG                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_IMS_RNG                ) = $G_KP.$G_HSG.$G_IMS.$_RNG_X ! Position

marker.type (                       $M_HSG_IMS_RNG_GW             ) = 2                       ! Type
marker.ref (                        $M_HSG_IMS_RNG_GW             ) = $M_HSG_IMS_RNG          ! Reference Marker
marker.parent (                     $M_HSG_IMS_RNG_GW             ) = $B_HSG                  ! Body
marker.ang (              2 ,       $M_HSG_IMS_RNG_GW             ) = { 90deg }               ! Angles
marker.ang (              3 ,       $M_HSG_IMS_RNG_GW             ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_GW_FLX_MARKER_TYPE ! Flexible type

marker.type (                       $M_HSG_IMS_SUN                ) = 2                       ! Type
marker.parent (                     $M_HSG_IMS_SUN                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_IMS_SUN                ) = $G_KP.$G_HSG.$G_IMS.$_SUN_X ! Position

marker.type (                       $M_HSG_IMS_PLC                ) = 2                       ! Type
marker.parent (                     $M_HSG_IMS_PLC                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_IMS_PLC                ) = $G_KP.$G_HSG.$G_IMS.$_PLC_X ! Position

marker.type (                       $M_HSG_IMS_PLC_BR1            ) = 2                       ! Type
marker.parent (                     $M_HSG_IMS_PLC_BR1            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_IMS_PLC_BR1            ) = $G_KP.$G_HSG.$G_IMS.$_PLC_BR1_X ! Position

marker.type (                       $M_HSG_IMS_PLC_BR2            ) = 2                       ! Type
marker.parent (                     $M_HSG_IMS_PLC_BR2            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_IMS_PLC_BR2            ) = $G_KP.$G_HSG.$G_IMS.$_PLC_BR2_X ! Position

marker.type (                       $M_HSG_HSS_BGR                ) = 2                       ! Type
marker.parent (                     $M_HSG_HSS_BGR                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_HSS_BGR                ) = $G_KP.$G_HSG.$G_HSS.$_BGR_X ! Position
marker.flx.type (                   $M_HSG_HSS_BGR                ) = 0                       ! Flexible type

marker.type (                       $M_HSG_HSS_BGR_BR1            ) = 2                       ! Type
marker.parent (                     $M_HSG_HSS_BGR_BR1            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_HSS_BGR_BR1            ) = $G_KP.$G_HSG.$G_HSS.$_BGR_BR1_X ! Position

marker.type (                       $M_HSG_HSS_BGR_BR2            ) = 2                       ! Type
marker.parent (                     $M_HSG_HSS_BGR_BR2            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_HSS_BGR_BR2            ) = $G_KP.$G_HSG.$G_HSS.$_BGR_BR2_X ! Position

marker.type (                       $M_HSG_HSS_HSH                ) = 2                       ! Type
marker.ref (                        $M_HSG_HSS_HSH                ) = $M_HSG_BRF              ! Reference Marker
marker.parent (                     $M_HSG_HSS_HSH                ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_HSS_HSH                ) = $G_KP.$G_HSG.$G_HSS.$_HSH_X ! Position
marker.pos (              2 ,       $M_HSG_HSS_HSH                ) = $G_KP.$G_HSG.$G_HSS.$_HSH_Y ! Position
marker.pos (              3 ,       $M_HSG_HSS_HSH                ) = $G_KP.$G_HSG.$G_HSS.$_HSH_Z ! Position
marker.ang (              1 ,       $M_HSG_HSS_HSH                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              3 ,       $M_HSG_HSS_HSH                ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_HSG_HSS_HSH                ) = 0                       ! Flexible type

marker.type (                       $M_HSG_HSS_HSH_BR1            ) = 2                       ! Type
marker.ref (                        $M_HSG_HSS_HSH_BR1            ) = $M_HSG_BRF              ! Reference Marker
marker.parent (                     $M_HSG_HSS_HSH_BR1            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_HSS_HSH_BR1            ) = $G_KP.$G_HSG.$G_HSS.$_HSH_BR1_X ! Position
marker.pos (              2 ,       $M_HSG_HSS_HSH_BR1            ) = $G_KP.$G_HSG.$G_HSS.$_HSH_Y ! Position
marker.pos (              3 ,       $M_HSG_HSS_HSH_BR1            ) = $G_KP.$G_HSG.$G_HSS.$_HSH_Z ! Position
marker.ang (              1 ,       $M_HSG_HSS_HSH_BR1            ) = 0.00000000000000000E+00 ! Angles

marker.type (                       $M_HSG_HSS_HSH_BR2            ) = 2                       ! Type
marker.ref (                        $M_HSG_HSS_HSH_BR2            ) = $M_HSG_BRF              ! Reference Marker
marker.parent (                     $M_HSG_HSS_HSH_BR2            ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_HSS_HSH_BR2            ) = $G_KP.$G_HSG.$G_HSS.$_HSH_BR2_X ! Position
marker.pos (              2 ,       $M_HSG_HSS_HSH_BR2            ) = $G_KP.$G_HSG.$G_HSS.$_HSH_Y ! Position
marker.pos (              3 ,       $M_HSG_HSS_HSH_BR2            ) = $G_KP.$G_HSG.$G_HSS.$_HSH_Z ! Position
marker.ang (              1 ,       $M_HSG_HSS_HSH_BR2            ) = 0.00000000000000000E+00 ! Angles

marker.type (                       $M_HSG_SPB1                   ) = 2                       ! Type
marker.parent (                     $M_HSG_SPB1                   ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_SPB1                   ) = $G_KP.$G_HSG.$G_SPB.$G_01.$_X ! Position
marker.pos (              2 ,       $M_HSG_SPB1                   ) = $G_KP.$G_HSG.$G_SPB.$G_01.$_Y ! Position
marker.pos (              3 ,       $M_HSG_SPB1                   ) = $G_KP.$G_HSG.$G_SPB.$G_01.$_Z ! Position
marker.ang (              2 ,       $M_HSG_SPB1                   ) = 0.00000000000000000E+00 ! Angles

marker.type (                       $M_HSG_SPB2                   ) = 2                       ! Type
marker.parent (                     $M_HSG_SPB2                   ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_SPB2                   ) = $G_KP.$G_HSG.$G_SPB.$G_02.$_X ! Position
marker.pos (              2 ,       $M_HSG_SPB2                   ) = $G_KP.$G_HSG.$G_SPB.$G_02.$_Y ! Position
marker.pos (              3 ,       $M_HSG_SPB2                   ) = $G_KP.$G_HSG.$G_SPB.$G_02.$_Z ! Position
marker.ang (              2 ,       $M_HSG_SPB2                   ) = 0.00000000000000000E+00 ! Angles

marker.type (                       $M_HSG_BRK                    ) = 2                       ! Type
marker.parent (                     $M_HSG_BRK                    ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_BRK                    ) = $G_KP.$G_HSG.$G_BRK.$_X ! Position
marker.pos (              2 ,       $M_HSG_BRK                    ) = $G_KP.$G_HSG.$G_BRK.$_Y ! Position
marker.pos (              3 ,       $M_HSG_BRK                    ) = $G_KP.$G_HSG.$G_BRK.$_Z ! Position

marker.type (                       $M_HSG_CAD                    ) = 2                       ! Type
marker.parent (                     $M_HSG_CAD                    ) = $B_HSG                  ! Body
marker.pos (              1 ,       $M_HSG_CAD                    ) = $G_KP.$G_HSG.$G_LSS.$_RNG_X ! Position

prim.type (                         $P_HSG_CAD                    ) = 39                      ! Type
prim.ref (                          $P_HSG_CAD                    ) = $M_HSG_CAD              ! Reference Marker
prim.pos (                1 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! Position
prim.pos (                3 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! Position
prim.ang (                2 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_HSG_CAD                    ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_CAD                    ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_CAD                    ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_CAD                    ) = $G_3D.$G_HSG.$_TRANSPARENCY_CAD ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_CAD                    ) = 1                       ! Draw style
prim.transparency (                 $P_HSG_CAD                    ) = $G_3D.$G_HSG.$_TRANSPARENCY_RIGID ! Transparency
prim.par (                2 ,       $P_HSG_CAD                    ) = '32_GBX-HSG_no_gear.slp' ! [-] CAD file name
prim.par (                9 ,       $P_HSG_CAD                    ) = 1.00000000000000002E-03 ! [-] Global scaling factor
prim.par (               10 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_HSG_CAD                    ) = 0.00000000000000000E+00 ! [-] Repeat shape

prim.type (                         $P_HSG_LSS_RNG_GW             ) = 25                      ! Type
prim.ref (                          $P_HSG_LSS_RNG_GW             ) = $M_HSG_LSS_RNG_GW       ! Reference Marker
prim.color.r (            1 ,       $P_HSG_LSS_RNG_GW             ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_LSS_RNG_GW             ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_LSS_RNG_GW             ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_LSS_RNG_GW             ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_LSS_RNG_GW             ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSG_LSS_RNG_GW             ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,   1 , $P_HSG_LSS_RNG_GW             ) = 2.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_HSG_LSS_RNG_GW       ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_HSG_LSS_RNG_GW ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_HSG_LSS_RNG_GW ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_HSG_LSS_RNG_GW ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_HSG_LSS_RNG_GW ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_HSG_LSS_RNG_GW ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_HSG_LSS_RNG_GW       ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_HSG_LSS_RNG_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_HSG_LSS_RNG_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_RD ! [m] Ring Diameter
prim.par (                3 ,   2 , $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_HSG_LSS_RNG_GW             ) = $G_PA.$G_GER.$G_LSS.$G_RNG.$_BRD ! [-] Ring discretisation per tooth
prim.par (                4 ,   1 , $P_HSG_LSS_RNG_GW             ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_HSG_LSS_RNG_GW       ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_HSG_LSS_RNG_GW       ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_HSG_LSS_RNG_GW       ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_HSG_LSS_RNG_GW       ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_HSG_LSS_RNG_GW       ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_HSG_LSS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_HSG_LSS_RNG_GW       ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_HSG_LSS_RNG_GW       ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_HSG_LSS_RNG_GW       ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_HSG_LSS_RNG_GW             ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_HSG_LSS_RNG_GW             ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_HSG_LSS_RNG_GW             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_HSG_LSS_RNG_GW             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_HSG_LSS_RNG_GW       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_HSG_LSS_RNG_GW ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_HSG_LSS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_HSG_IMS_RNG_GW             ) = 25                      ! Type
prim.ref (                          $P_HSG_IMS_RNG_GW             ) = $M_HSG_IMS_RNG_GW       ! Reference Marker
prim.color.r (            1 ,       $P_HSG_IMS_RNG_GW             ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_IMS_RNG_GW             ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_IMS_RNG_GW             ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_IMS_RNG_GW             ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_IMS_RNG_GW             ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_IMS_RNG_GW             ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_IMS_RNG_GW             ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_IMS_RNG_GW             ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSG_IMS_RNG_GW             ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,   1 , $P_HSG_IMS_RNG_GW             ) = 2.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_HSG_IMS_RNG_GW             ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_HSG_IMS_RNG_GW       ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_HSG_IMS_RNG_GW ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_HSG_IMS_RNG_GW ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_HSG_IMS_RNG_GW ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_HSG_IMS_RNG_GW ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_HSG_IMS_RNG_GW ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_HSG_IMS_RNG_GW       ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   5 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   8 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  11 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   2 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   5 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_HSG_IMS_RNG_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_HSG_IMS_RNG_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_RD ! [m] Ring Diameter
prim.par (                3 ,   3 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_HSG_IMS_RNG_GW             ) = $G_PA.$G_GER.$G_IMS.$G_RNG.$_BRD ! [-] Ring discretisation per tooth
prim.par (                4 ,   1 , $P_HSG_IMS_RNG_GW             ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_HSG_IMS_RNG_GW       ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   1 , $P_HSG_IMS_RNG_GW       ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   1 , $P_HSG_IMS_RNG_GW ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   4 ,   1 , $P_HSG_IMS_RNG_GW       ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_HSG_IMS_RNG_GW       ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_HSG_IMS_RNG_GW             ) = 0.00000000000000000E+00 ! [-] Type
prim.plot.par (           1 ,       $P_HSG_IMS_RNG_GW             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_HSG_IMS_RNG_GW             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_HSG_IMS_RNG_GW       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_HSG_IMS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_HSG_IMS_RNG_GW ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_HSG_IMS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_HSG_IMS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_HSG_IMS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_HSG_IMS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_HSG_IMS_RNG_GW ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_HSG_LSS_PLC_BR1            ) = 2                       ! Type
prim.ref (                          $P_HSG_LSS_PLC_BR1            ) = $M_HSG_LSS_PLC_BR1      ! Reference Marker
prim.ang (                3 ,       $P_HSG_LSS_PLC_BR1            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_LSS_PLC_BR1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_LSS_PLC_BR1            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_LSS_PLC_BR1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_LSS_PLC_BR1            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_LSS_PLC_BR1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_LSS_PLC_BR1            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_LSS_PLC_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_LSS_PLC_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_LSS_PLC_BR1            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_LSS_PLC_BR1            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_LSS_PLC_BR1            ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_HSG_LSS_PLC_BR1            ) = { $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_LSS_PLC_BR1            ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_LSS_PLC_BR1            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_LSS_PLC_BR1            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_LSS_PLC_BR1            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_LSS_PLC_BR1            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_LSS_PLC_BR1            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_LSS_PLC_BR2            ) = 2                       ! Type
prim.ref (                          $P_HSG_LSS_PLC_BR2            ) = $M_HSG_LSS_PLC_BR2      ! Reference Marker
prim.ang (                3 ,       $P_HSG_LSS_PLC_BR2            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_LSS_PLC_BR2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_LSS_PLC_BR2            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_LSS_PLC_BR2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_LSS_PLC_BR2            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_LSS_PLC_BR2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_LSS_PLC_BR2            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_LSS_PLC_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_LSS_PLC_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_LSS_PLC_BR2            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_LSS_PLC_BR2            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_LSS_PLC_BR2            ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_HSG_LSS_PLC_BR2            ) = { $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_LSS_PLC_BR2            ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_LSS_PLC_BR2            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_LSS_PLC_BR2            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_LSS_PLC_BR2            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_LSS_PLC_BR2            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_LSS_PLC_BR2            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_IMS_PLC_BR1            ) = 2                       ! Type
prim.ref (                          $P_HSG_IMS_PLC_BR1            ) = $M_HSG_IMS_PLC_BR1      ! Reference Marker
prim.ang (                3 ,       $P_HSG_IMS_PLC_BR1            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_IMS_PLC_BR1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_IMS_PLC_BR1            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_IMS_PLC_BR1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_IMS_PLC_BR1            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_IMS_PLC_BR1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_IMS_PLC_BR1            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_IMS_PLC_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_IMS_PLC_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_IMS_PLC_BR1            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_IMS_PLC_BR1            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_IMS_PLC_BR1            ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_HSG_IMS_PLC_BR1            ) = { $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_IMS_PLC_BR1            ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_IMS_PLC_BR1            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_IMS_PLC_BR1            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_IMS_PLC_BR1            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_IMS_PLC_BR1            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_IMS_PLC_BR1            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_IMS_PLC_BR2            ) = 2                       ! Type
prim.ref (                          $P_HSG_IMS_PLC_BR2            ) = $M_HSG_IMS_PLC_BR2      ! Reference Marker
prim.ang (                3 ,       $P_HSG_IMS_PLC_BR2            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_IMS_PLC_BR2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_IMS_PLC_BR2            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_IMS_PLC_BR2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_IMS_PLC_BR2            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_IMS_PLC_BR2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_IMS_PLC_BR2            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_IMS_PLC_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_IMS_PLC_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_IMS_PLC_BR2            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_IMS_PLC_BR2            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_IMS_PLC_BR2            ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_HSG_IMS_PLC_BR2            ) = { $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_IMS_PLC_BR2            ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_IMS_PLC_BR2            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_IMS_PLC_BR2            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_IMS_PLC_BR2            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_IMS_PLC_BR2            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_IMS_PLC_BR2            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_HSS_BGR_BR1            ) = 2                       ! Type
prim.ref (                          $P_HSG_HSS_BGR_BR1            ) = $M_HSG_HSS_BGR_BR1      ! Reference Marker
prim.ang (                3 ,       $P_HSG_HSS_BGR_BR1            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_HSS_BGR_BR1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_HSS_BGR_BR1            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_HSS_BGR_BR1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_HSS_BGR_BR1            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_HSS_BGR_BR1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_HSS_BGR_BR1            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_HSS_BGR_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_HSS_BGR_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_HSS_BGR_BR1            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_HSS_BGR_BR1            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_HSS_BGR_BR1            ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_HSG_HSS_BGR_BR1            ) = { $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_HSS_BGR_BR1            ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_HSS_BGR_BR1            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_HSS_BGR_BR1            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_HSS_BGR_BR1            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_HSS_BGR_BR1            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_HSS_BGR_BR1            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_HSS_BGR_BR2            ) = 2                       ! Type
prim.ref (                          $P_HSG_HSS_BGR_BR2            ) = $M_HSG_HSS_BGR_BR2      ! Reference Marker
prim.ang (                3 ,       $P_HSG_HSS_BGR_BR2            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_HSS_BGR_BR2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_HSS_BGR_BR2            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_HSS_BGR_BR2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_HSS_BGR_BR2            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_HSS_BGR_BR2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_HSS_BGR_BR2            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_HSS_BGR_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_HSS_BGR_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_HSS_BGR_BR2            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_HSS_BGR_BR2            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_HSS_BGR_BR2            ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_HSG_HSS_BGR_BR2            ) = { $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_HSS_BGR_BR2            ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_HSS_BGR_BR2            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_HSS_BGR_BR2            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_HSS_BGR_BR2            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_HSS_BGR_BR2            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_HSS_BGR_BR2            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_HSS_HSH_BR1            ) = 2                       ! Type
prim.ref (                          $P_HSG_HSS_HSH_BR1            ) = $M_HSG_HSS_HSH_BR1      ! Reference Marker
prim.ang (                3 ,       $P_HSG_HSS_HSH_BR1            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_HSS_HSH_BR1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_HSS_HSH_BR1            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_HSS_HSH_BR1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_HSS_HSH_BR1            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_HSS_HSH_BR1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_HSS_HSH_BR1            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_HSS_HSH_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_HSS_HSH_BR1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_HSS_HSH_BR1            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_HSS_HSH_BR1            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_HSS_HSH_BR1            ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_HSG_HSS_HSH_BR1            ) = { $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_HSS_HSH_BR1            ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_HSS_HSH_BR1            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_HSS_HSH_BR1            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_HSS_HSH_BR1            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_HSS_HSH_BR1            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_HSS_HSH_BR1            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_HSS_HSH_BR2            ) = 2                       ! Type
prim.ref (                          $P_HSG_HSS_HSH_BR2            ) = $M_HSG_HSS_HSH_BR2      ! Reference Marker
prim.ang (                3 ,       $P_HSG_HSS_HSH_BR2            ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_HSS_HSH_BR2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_HSS_HSH_BR2            ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_HSS_HSH_BR2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_HSS_HSH_BR2            ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_HSS_HSH_BR2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_HSS_HSH_BR2            ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_HSS_HSH_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_HSS_HSH_BR2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_HSS_HSH_BR2            ) = 2                       ! Draw style
prim.transparency (                 $P_HSG_HSS_HSH_BR2            ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSG_HSS_HSH_BR2            ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_HSG_HSS_HSH_BR2            ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_HSS_HSH_BR2            ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_HSS_HSH_BR2            ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_HSS_HSH_BR2            ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_HSS_HSH_BR2            ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_HSS_HSH_BR2            ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_HSS_HSH_BR2            ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSG_SPB1                   ) = 2                       ! Type
prim.ref (                          $P_HSG_SPB1                   ) = $M_HSG_SPB1             ! Reference Marker
prim.ang (                1 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_HSG_SPB1                   ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_SPB1                   ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_SPB1                   ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_SPB1                   ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_SPB1                   ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_SPB1                   ) = 1                       ! Draw style
prim.transparency (                 $P_HSG_SPB1                   ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.mp.dens.solid (                $P_HSG_SPB1                   ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_HSG_SPB1                   ) = $G_3D.$G_HSG.$G_SPB.$_L ! [m] Height
prim.par (                3 ,       $P_HSG_SPB1                   ) = $G_3D.$G_HSG.$G_SPB.$_D_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_SPB1                   ) = $G_3D.$G_HSG.$G_SPB.$_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_SPB1                   ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_SPB1                   ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_SPB1                   ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_HSG_SPB1                   ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_HSG_SPB2                   ) = 2                       ! Type
prim.ref (                          $P_HSG_SPB2                   ) = $M_HSG_SPB2             ! Reference Marker
prim.ang (                1 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_HSG_SPB2                   ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSG_SPB2                   ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSG_SPB2                   ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_HSG_SPB2                   ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSG_SPB2                   ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSG_SPB2                   ) = 1                       ! Draw style
prim.transparency (                 $P_HSG_SPB2                   ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.mp.dens.solid (                $P_HSG_SPB2                   ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_HSG_SPB2                   ) = $G_3D.$G_HSG.$G_SPB.$_L ! [m] Height
prim.par (                3 ,       $P_HSG_SPB2                   ) = $G_3D.$G_HSG.$G_SPB.$_D_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSG_SPB2                   ) = $G_3D.$G_HSG.$G_SPB.$_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSG_SPB2                   ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSG_SPB2                   ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSG_SPB2                   ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_HSG_SPB2                   ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_HSG_Flex                   ) = 28                      ! Type
prim.ref (                          $P_HSG_Flex                   ) = $M_HSG_BRF              ! Reference Marker
prim.color.r (            1 ,       $P_HSG_Flex                   ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSG_Flex                   ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSG_Flex                   ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSG_Flex                   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSG_Flex                   ) = $G_3D.$G_HSG.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_HSG_Flex                   ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_HSG_Flex                   ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_HSG_Flex                   ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor


body.m (                            $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_M ! Mass of the Body
body.mp (                           $B_LSS_PLC                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_IXX ! Moments of inertia
body.I.tens (             1 ,   2 , $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             1 ,   3 , $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   1 , $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_IYY ! Moments of inertia
body.I.tens (             2 ,   3 , $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   1 , $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   2 , $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_IZZ ! Moments of inertia
body.I.kind (                       $B_LSS_PLC                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_LSS_PLC                    ) = 4.69969448717316163E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_LSS_PLC                    ) = 1.09920964507938972E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_LSS_PLC                    ) = -4.49392804840939748E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_LSS_PLC                    ) = -3.69664032045184028E-05 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_LSS_PLC                    ) = 4.33965032206858926E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_LSS_PLC                    ) = 2.34554861997333117E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_LSS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_LSS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_LSS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_LSS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_LSS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_LSS_PLC                    ) = 0                       ! State dependency
body.flx.st.prestress (   1 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_LSS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_LSS_PLC                    ) = 1                       ! Damping mode
body.flx.massprops (                $B_LSS_PLC                    ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_LSS_PLC                    ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_LSS_PLC                    ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_LSS_PLC                    ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_LSS_PLC                    ) = $I_LSS_PLC_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_LSS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_LSS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_LSS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_LSS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_LSS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_LSS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_LSS_PLC                    ) = $M_LSS_PLC_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_LSS_PLC                    ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_LSS_PLC                    ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_LSS_PLC                    ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_LSS_PLC                    ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_LSS_PLC                    ) = -1.19000000000000000E+03
body.attr.2d.pos.y (                $B_LSS_PLC                    ) = 5.00000000000000000E+02
body.attr.2d.width (                $B_LSS_PLC                    ) = 2.70000000000000000E+02
body.attr.2d.height (               $B_LSS_PLC                    ) = 4.00000000000000000E+01

marker.type (                       $M_LSS_PLC_FE_reference       ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_FE_reference       ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_PLC_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_PLC_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_LSS_PLC_FE_reference       ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_BRF                ) = 1                       ! Type
marker.parent (                     $M_LSS_PLC_BRF                ) = $B_LSS_PLC              ! Body
marker.flx.type (                   $M_LSS_PLC_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_HSG                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_HSG                ) = $B_LSS_PLC              ! Body
marker.flx.type (                   $M_LSS_PLC_HSG                ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_BR1                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_BR1                ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_BR1                ) = $G_KP.$G_LSS.$G_PLC.$_BR1_X ! Position

marker.type (                       $M_LSS_PLC_BR2                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_BR2                ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_BR2                ) = $G_KP.$G_LSS.$G_PLC.$_BR2_X ! Position

marker.type (                       $M_LSS_PLC_PLT1_Ref           ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_PLT1_Ref           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT1_Ref           ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_LSS_PLC_PLT1_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_PLT2_Ref           ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_PLT2_Ref           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT2_Ref           ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLC_PLT2_Ref           ) = { 90deg }               ! Angles
marker.flx.type (                   $M_LSS_PLC_PLT2_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_PLT3_Ref           ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_PLT3_Ref           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT3_Ref           ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLC_PLT3_Ref           ) = { 180deg }              ! Angles
marker.flx.type (                   $M_LSS_PLC_PLT3_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_PLT4_Ref           ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_PLT4_Ref           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT4_Ref           ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLC_PLT4_Ref           ) = { 270deg }              ! Angles
marker.flx.type (                   $M_LSS_PLC_PLT4_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLC_PLT1               ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT1               ) = $M_LSS_PLC_PLT1_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT1               ) = $B_LSS_PLC              ! Body
marker.pos (              3 ,       $M_LSS_PLC_PLT1               ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT2               ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT2               ) = $M_LSS_PLC_PLT2_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT2               ) = $B_LSS_PLC              ! Body
marker.pos (              3 ,       $M_LSS_PLC_PLT2               ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT3               ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT3               ) = $M_LSS_PLC_PLT3_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT3               ) = $B_LSS_PLC              ! Body
marker.pos (              3 ,       $M_LSS_PLC_PLT3               ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT4               ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT4               ) = $M_LSS_PLC_PLT4_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT4               ) = $B_LSS_PLC              ! Body
marker.pos (              3 ,       $M_LSS_PLC_PLT4               ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT1_BR1           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT1_BR1           ) = $M_LSS_PLC_PLT1_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT1_BR1           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT1_BR1           ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT1_BR1           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT1_BR2           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT1_BR2           ) = $M_LSS_PLC_PLT1_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT1_BR2           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT1_BR2           ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT1_BR2           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT2_BR1           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT2_BR1           ) = $M_LSS_PLC_PLT2_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT2_BR1           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT2_BR1           ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT2_BR1           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT2_BR2           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT2_BR2           ) = $M_LSS_PLC_PLT2_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT2_BR2           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT2_BR2           ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT2_BR2           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT3_BR1           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT3_BR1           ) = $M_LSS_PLC_PLT3_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT3_BR1           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT3_BR1           ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT3_BR1           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT3_BR2           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT3_BR2           ) = $M_LSS_PLC_PLT3_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT3_BR2           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT3_BR2           ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT3_BR2           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT4_BR1           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT4_BR1           ) = $M_LSS_PLC_PLT4_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT4_BR1           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT4_BR1           ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT4_BR1           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_PLT4_BR2           ) = 2                       ! Type
marker.ref (                        $M_LSS_PLC_PLT4_BR2           ) = $M_LSS_PLC_PLT4_Ref     ! Reference Marker
marker.parent (                     $M_LSS_PLC_PLT4_BR2           ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_PLT4_BR2           ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_LSS_PLC_PLT4_BR2           ) = $G_KP.$G_LSS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_LSS_PLC_INTERFACE_GBX_MSH  ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_INTERFACE_GBX_MSH  ) = $B_LSS_PLC              ! Body
marker.pos (              1 ,       $M_LSS_PLC_INTERFACE_GBX_MSH  ) = $G_KP.$G_LSS.$G_PLC.$_MSH_X ! Position

marker.type (                       $M_LSS_PLC_CAD                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLC_CAD                ) = $B_LSS_PLC              ! Body

prim.type (                         $P_LSS_PLC_CAD                ) = 39                      ! Type
prim.ref (                          $P_LSS_PLC_CAD                ) = $M_LSS_PLC_CAD          ! Reference Marker
prim.pos (                3 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! Position
prim.color.r (            1 ,       $P_LSS_PLC_CAD                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_CAD                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_CAD                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_CAD                ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_CAD ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLC_CAD                ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_RIGID ! Transparency
prim.par (                2 ,       $P_LSS_PLC_CAD                ) = '32_GBX-LSS_PLC.slp'    ! [-] CAD file name
prim.par (                9 ,       $P_LSS_PLC_CAD                ) = 1.00000000000000002E-03 ! [-] Global scaling factor
prim.par (               10 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_LSS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Repeat shape

prim.type (                         $P_LSS_PLC_BR1                ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_BR1                ) = $M_LSS_PLC_BR1          ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_BR1                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_BR1                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_BR1                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_BR1                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_BR1                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_BR1                ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_BR1                ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_BR1                ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_BR1                ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_BR1                ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_BR1                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_BR1                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_BR1                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_BR2                ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_BR2                ) = $M_LSS_PLC_BR2          ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_BR2                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_BR2                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_BR2                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_BR2                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_BR2                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_BR2                ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_BR2                ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_BR2                ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_BR2                ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_BR2                ) = $G_3D.$G_LSS.$G_PLC.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_BR2                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_BR2                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_BR2                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT1_BR1           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT1_BR1           ) = $M_LSS_PLC_PLT1_BR1     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT1_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT1_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT1_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT1_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT1_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT1_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT1_BR1           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT1_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT1_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT1_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT1_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT1_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT1_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT1_BR2           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT1_BR2           ) = $M_LSS_PLC_PLT1_BR2     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT1_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT1_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT1_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT1_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT1_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT1_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT1_BR2           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT1_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT1_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT1_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT1_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT1_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT1_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT2_BR1           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT2_BR1           ) = $M_LSS_PLC_PLT2_BR1     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT2_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT2_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT2_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT2_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT2_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT2_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT2_BR1           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT2_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT2_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT2_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT2_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT2_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT2_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT2_BR2           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT2_BR2           ) = $M_LSS_PLC_PLT2_BR2     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT2_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT2_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT2_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT2_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT2_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT2_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT2_BR2           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT2_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT2_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT2_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT2_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT2_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT2_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT3_BR1           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT3_BR1           ) = $M_LSS_PLC_PLT3_BR1     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT3_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT3_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT3_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT3_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT3_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT3_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT3_BR1           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT3_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT3_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT3_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT3_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT3_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT3_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT3_BR2           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT3_BR2           ) = $M_LSS_PLC_PLT3_BR2     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT3_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT3_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT3_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT3_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT3_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT3_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT3_BR2           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT3_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT3_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT3_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT3_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT3_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT3_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT4_BR1           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT4_BR1           ) = $M_LSS_PLC_PLT4_BR1     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT4_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT4_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT4_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT4_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT4_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT4_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT4_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT4_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT4_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT4_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT4_BR1           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT4_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT4_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT4_BR1           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT4_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT4_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT4_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT4_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT4_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_PLT4_BR2           ) = 2                       ! Type
prim.ref (                          $P_LSS_PLC_PLT4_BR2           ) = $M_LSS_PLC_PLT4_BR2     ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLC_PLT4_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLC_PLT4_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLC_PLT4_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_PLT4_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLC_PLT4_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_PLT4_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLC_PLT4_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_PLT4_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLC_PLT4_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLC_PLT4_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_PLC_PLT4_BR2           ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_LSS_PLC_PLT4_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLC_PLT4_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLC_PLT4_BR2           ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLC_PLT4_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLC_PLT4_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLC_PLT4_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLC_PLT4_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLC_PLT4_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLC_Flex               ) = 28                      ! Type
prim.ref (                          $P_LSS_PLC_Flex               ) = $M_LSS_PLC_BRF          ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLC_Flex               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLC_Flex               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLC_Flex               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLC_Flex               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLC_Flex               ) = $G_3D.$G_LSS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_LSS_PLC_Flex               ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_LSS_PLC_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_LSS_PLC_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor


body.m (                            $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_LSS_PLT1                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             1 ,   2 , $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             1 ,   3 , $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   1 , $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             2 ,   3 , $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   1 , $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   2 , $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_LSS_PLT1                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_LSS_PLT1                   ) = 4.73115685326562729E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_LSS_PLT1                   ) = 1.12600770970979077E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_LSS_PLT1                   ) = 7.20497498285896376E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_LSS_PLT1                   ) = 1.49020333108357554E-04 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_LSS_PLT1                   ) = 4.34008648596696106E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_LSS_PLT1                   ) = 2.34475062705382428E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_LSS_PLT1                   ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_LSS_PLT1                   ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_LSS_PLT1                   ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_LSS_PLT1                   ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_LSS_PLT1                   ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_LSS_PLT1                   ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_LSS_PLT1                   ) = 0                       ! State dependency
body.flx.st.prestress (   1 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_LSS_PLT1                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_LSS_PLT1                   ) = 1                       ! Damping mode
body.flx.massprops (                $B_LSS_PLT1                   ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_LSS_PLT1                   ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_LSS_PLT1                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_LSS_PLT1                   ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_LSS_PLT1                   ) = $I_LSS_PLT_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_LSS_PLT1                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_LSS_PLT1                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_LSS_PLT1                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_LSS_PLT1                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_LSS_PLT1                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_LSS_PLT1                   ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_LSS_PLT1                   ) = $M_LSS_PLT1_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_LSS_PLT1                   ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_LSS_PLT1                   ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_LSS_PLT1                   ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_LSS_PLT1                   ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_LSS_PLT1                   ) = -1.19000000000000000E+03
body.attr.2d.pos.y (                $B_LSS_PLT1                   ) = 1.70000000000000000E+02
body.attr.2d.width (                $B_LSS_PLT1                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_LSS_PLT1                   ) = 2.60000000000000000E+02
body.attr.2d.ori (                  $B_LSS_PLT1                   ) = 90

marker.type (                       $M_LSS_PLT1_FE_reference      ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT1_FE_reference      ) = $B_LSS_PLT1             ! Body
marker.pos (              1 ,       $M_LSS_PLT1_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_PLT1_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_PLT1_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLT1_FE_reference      ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_LSS_PLT1_FE_reference      ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT1_BRF               ) = 1                       ! Type
marker.parent (                     $M_LSS_PLT1_BRF               ) = $B_LSS_PLT1             ! Body
marker.flx.type (                   $M_LSS_PLT1_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT1_PLC               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT1_PLC               ) = $B_LSS_PLT1             ! Body

marker.type (                       $M_LSS_PLT1_BR1               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT1_BR1               ) = $B_LSS_PLT1             ! Body
marker.pos (              1 ,       $M_LSS_PLT1_BR1               ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_LSS_PLT1_BR2               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT1_BR2               ) = $B_LSS_PLT1             ! Body
marker.pos (              1 ,       $M_LSS_PLT1_BR2               ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_LSS_PLT1_GW                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT1_GW                ) = $B_LSS_PLT1             ! Body
marker.ang (              1 ,       $M_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_LSS_PLT1_GW                ) = { 90deg }               ! Angles
marker.flx.type (                   $M_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_GW_FLX_MARKER_TYPE ! Flexible type

prim.type (                         $P_LSS_PLT1_GW                ) = 25                      ! Type
prim.ref (                          $P_LSS_PLT1_GW                ) = $M_LSS_PLT1_GW          ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT1_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT1_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT1_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT1_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT1_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT1_GW                ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_LSS_PLT1_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_LSS_PLT1_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_LSS_PLT1_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_LSS_PLT1_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_LSS_PLT1_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_LSS_PLT1_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_LSS_PLT1_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_LSS_PLT1_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_LSS_PLT1_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_LSS_PLT1_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_LSS_PLT1_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_LSS_PLT1_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_LSS_PLT1_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_LSS_PLT1_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_LSS_PLT1_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_LSS_PLT1_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_LSS_PLT1_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_LSS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_LSS_PLT1_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_LSS_PLT1_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_LSS_PLT1_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_LSS_PLT1_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_LSS_PLT1_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_LSS_PLT1_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_LSS_PLT1_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_LSS_PLT1_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_LSS_PLT1_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_LSS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_LSS_PLT1_BR1               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT1_BR1               ) = $M_LSS_PLT1_BR1         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT1_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT1_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT1_BR1               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT1_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT1_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT1_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT1_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT1_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT1_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT1_BR2               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT1_BR2               ) = $M_LSS_PLT1_BR2         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT1_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT1_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT1_BR2               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT1_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT1_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT1_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT1_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT1_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT1_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT1_Flex              ) = 28                      ! Type
prim.ref (                          $P_LSS_PLT1_Flex              ) = $M_LSS_PLT1_BRF         ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT1_Flex              ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT1_Flex              ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT1_Flex              ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT1_Flex              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT1_Flex              ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.mp.incl (                      $P_LSS_PLT1_Flex              ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_LSS_PLT1_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_LSS_PLT1_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor


body.m (                            $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_LSS_PLT2                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             1 ,   2 , $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             1 ,   3 , $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   1 , $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             2 ,   3 , $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   1 , $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   2 , $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_LSS_PLT2                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_LSS_PLT2                   ) = 4.71669955456764822E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_LSS_PLT2                   ) = -7.23898798125475973E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_LSS_PLT2                   ) = -4.47625350705041503E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_LSS_PLT2                   ) = 1.52451034430076660E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_LSS_PLT2                   ) = 2.54370483519736909E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_LSS_PLT2                   ) = -4.22655603540763800E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_LSS_PLT2                   ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_LSS_PLT2                   ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_LSS_PLT2                   ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_LSS_PLT2                   ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_LSS_PLT2                   ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_LSS_PLT2                   ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_LSS_PLT2                   ) = 0                       ! State dependency
body.flx.st.prestress (   1 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_LSS_PLT2                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_LSS_PLT2                   ) = 1                       ! Damping mode
body.flx.massprops (                $B_LSS_PLT2                   ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_LSS_PLT2                   ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_LSS_PLT2                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_LSS_PLT2                   ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_LSS_PLT2                   ) = $I_LSS_PLT_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_LSS_PLT2                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_LSS_PLT2                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_LSS_PLT2                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_LSS_PLT2                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_LSS_PLT2                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_LSS_PLT2                   ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_LSS_PLT2                   ) = $M_LSS_PLT2_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_LSS_PLT2                   ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_LSS_PLT2                   ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_LSS_PLT2                   ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_LSS_PLT2                   ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_LSS_PLT2                   ) = -1.12000000000000000E+03
body.attr.2d.pos.y (                $B_LSS_PLT2                   ) = 2.20000000000000000E+02
body.attr.2d.width (                $B_LSS_PLT2                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_LSS_PLT2                   ) = 2.10000000000000000E+02
body.attr.2d.ori (                  $B_LSS_PLT2                   ) = 90

marker.type (                       $M_LSS_PLT2_FE_reference      ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT2_FE_reference      ) = $B_LSS_PLT2             ! Body
marker.pos (              1 ,       $M_LSS_PLT2_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_PLT2_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_PLT2_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLT2_FE_reference      ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_LSS_PLT2_FE_reference      ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT2_BRF               ) = 1                       ! Type
marker.parent (                     $M_LSS_PLT2_BRF               ) = $B_LSS_PLT2             ! Body
marker.flx.type (                   $M_LSS_PLT2_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT2_PLC               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT2_PLC               ) = $B_LSS_PLT2             ! Body

marker.type (                       $M_LSS_PLT2_BR1               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT2_BR1               ) = $B_LSS_PLT2             ! Body
marker.pos (              1 ,       $M_LSS_PLT2_BR1               ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_LSS_PLT2_BR2               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT2_BR2               ) = $B_LSS_PLT2             ! Body
marker.pos (              1 ,       $M_LSS_PLT2_BR2               ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_LSS_PLT2_GW                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT2_GW                ) = $B_LSS_PLT2             ! Body
marker.ang (              1 ,       $M_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_LSS_PLT2_GW                ) = { 90deg }               ! Angles
marker.flx.type (                   $M_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_GW_FLX_MARKER_TYPE ! Flexible type

prim.type (                         $P_LSS_PLT2_GW                ) = 25                      ! Type
prim.ref (                          $P_LSS_PLT2_GW                ) = $M_LSS_PLT2_GW          ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT2_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT2_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT2_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT2_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT2_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT2_GW                ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_LSS_PLT2_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_LSS_PLT2_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_LSS_PLT2_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_LSS_PLT2_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_LSS_PLT2_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_LSS_PLT2_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_LSS_PLT2_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_LSS_PLT2_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_LSS_PLT2_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_LSS_PLT2_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_LSS_PLT2_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_LSS_PLT2_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_LSS_PLT2_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_LSS_PLT2_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_LSS_PLT2_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_LSS_PLT2_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_LSS_PLT2_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_LSS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_LSS_PLT2_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_LSS_PLT2_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_LSS_PLT2_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_LSS_PLT2_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_LSS_PLT2_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_LSS_PLT2_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_LSS_PLT2_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_LSS_PLT2_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_LSS_PLT2_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_LSS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_LSS_PLT2_BR1               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT2_BR1               ) = $M_LSS_PLT2_BR1         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT2_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT2_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT2_BR1               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT2_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT2_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT2_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT2_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT2_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT2_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT2_BR2               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT2_BR2               ) = $M_LSS_PLT2_BR2         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT2_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT2_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT2_BR2               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT2_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT2_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT2_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT2_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT2_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT2_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT2_Flex              ) = 28                      ! Type
prim.ref (                          $P_LSS_PLT2_Flex              ) = $M_LSS_PLT2_BRF         ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT2_Flex              ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT2_Flex              ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT2_Flex              ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT2_Flex              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT2_Flex              ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.mp.incl (                      $P_LSS_PLT2_Flex              ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_LSS_PLT2_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_LSS_PLT2_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor
prim.par (               11 ,       $P_LSS_PLT2_Flex              ) = 0.00000000000000000E+00 ! [-] Interpolation type
prim.par (               12 ,       $P_LSS_PLT2_Flex              ) = 0.00000000000000000E+00 ! [-] Num. master nodes for interpol
prim.par (               21 ,       $P_LSS_PLT2_Flex              ) = 0.00000000000000000E+00 ! [-] Graphics mode


body.m (                            $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_LSS_PLT3                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             1 ,   2 , $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             1 ,   3 , $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   1 , $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             2 ,   3 , $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   1 , $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   2 , $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_LSS_PLT3                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_LSS_PLT3                   ) = 4.66823182162764971E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_LSS_PLT3                   ) = 1.07240685956561110E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_LSS_PLT3                   ) = -7.29488847005286156E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_LSS_PLT3                   ) = -3.04915234796058865E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_LSS_PLT3                   ) = -4.53770726142662187E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_LSS_PLT3                   ) = -1.93478944383467877E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_LSS_PLT3                   ) = -0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_LSS_PLT3                   ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_LSS_PLT3                   ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_LSS_PLT3                   ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_LSS_PLT3                   ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_LSS_PLT3                   ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_LSS_PLT3                   ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_LSS_PLT3                   ) = 0                       ! State dependency
body.flx.st.prestress (   1 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_LSS_PLT3                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_LSS_PLT3                   ) = 1                       ! Damping mode
body.flx.massprops (                $B_LSS_PLT3                   ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_LSS_PLT3                   ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_LSS_PLT3                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_LSS_PLT3                   ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_LSS_PLT3                   ) = $I_LSS_PLT_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_LSS_PLT3                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_LSS_PLT3                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_LSS_PLT3                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_LSS_PLT3                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_LSS_PLT3                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_LSS_PLT3                   ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_LSS_PLT3                   ) = $M_LSS_PLT3_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_LSS_PLT3                   ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_LSS_PLT3                   ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_LSS_PLT3                   ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_LSS_PLT3                   ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_LSS_PLT3                   ) = -1.05000000000000000E+03
body.attr.2d.pos.y (                $B_LSS_PLT3                   ) = 2.60000000000000000E+02
body.attr.2d.width (                $B_LSS_PLT3                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_LSS_PLT3                   ) = 1.70000000000000000E+02
body.attr.2d.ori (                  $B_LSS_PLT3                   ) = 90

marker.type (                       $M_LSS_PLT3_FE_reference      ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT3_FE_reference      ) = $B_LSS_PLT3             ! Body
marker.pos (              1 ,       $M_LSS_PLT3_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_PLT3_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_PLT3_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLT3_FE_reference      ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_LSS_PLT3_FE_reference      ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT3_BRF               ) = 1                       ! Type
marker.parent (                     $M_LSS_PLT3_BRF               ) = $B_LSS_PLT3             ! Body
marker.flx.type (                   $M_LSS_PLT3_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT3_PLC               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT3_PLC               ) = $B_LSS_PLT3             ! Body

marker.type (                       $M_LSS_PLT3_BR1               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT3_BR1               ) = $B_LSS_PLT3             ! Body
marker.pos (              1 ,       $M_LSS_PLT3_BR1               ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_LSS_PLT3_BR2               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT3_BR2               ) = $B_LSS_PLT3             ! Body
marker.pos (              1 ,       $M_LSS_PLT3_BR2               ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_LSS_PLT3_GW                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT3_GW                ) = $B_LSS_PLT3             ! Body
marker.ang (              1 ,       $M_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_LSS_PLT3_GW                ) = { 90deg }               ! Angles
marker.flx.type (                   $M_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_GW_FLX_MARKER_TYPE ! Flexible type

prim.type (                         $P_LSS_PLT3_GW                ) = 25                      ! Type
prim.ref (                          $P_LSS_PLT3_GW                ) = $M_LSS_PLT3_GW          ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT3_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT3_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT3_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT3_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT3_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT3_GW                ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_LSS_PLT3_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_LSS_PLT3_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_LSS_PLT3_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_LSS_PLT3_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_LSS_PLT3_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_LSS_PLT3_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_LSS_PLT3_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_LSS_PLT3_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_LSS_PLT3_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_LSS_PLT3_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_LSS_PLT3_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_LSS_PLT3_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_LSS_PLT3_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_LSS_PLT3_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_LSS_PLT3_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_LSS_PLT3_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_LSS_PLT3_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_LSS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_LSS_PLT3_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_LSS_PLT3_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_LSS_PLT3_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_LSS_PLT3_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_LSS_PLT3_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_LSS_PLT3_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_LSS_PLT3_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_LSS_PLT3_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_LSS_PLT3_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_LSS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_LSS_PLT3_BR1               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT3_BR1               ) = $M_LSS_PLT3_BR1         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT3_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT3_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT3_BR1               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT3_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT3_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT3_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT3_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT3_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT3_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT3_BR2               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT3_BR2               ) = $M_LSS_PLT3_BR2         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT3_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT3_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT3_BR2               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT3_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT3_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT3_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT3_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT3_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT3_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT3_Flex              ) = 28                      ! Type
prim.ref (                          $P_LSS_PLT3_Flex              ) = $M_LSS_PLT3_BRF         ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT3_Flex              ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT3_Flex              ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT3_Flex              ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT3_Flex              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT3_Flex              ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.mp.incl (                      $P_LSS_PLT3_Flex              ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_LSS_PLT3_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_LSS_PLT3_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor


body.m (                            $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_LSS_PLT4                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             1 ,   2 , $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             1 ,   3 , $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   1 , $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             2 ,   3 , $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   1 , $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   2 , $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_LSS_PLT4                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_LSS_PLT4                   ) = 4.68268941978053299E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_LSS_PLT4                   ) = 7.26097212764767241E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_LSS_PLT4                   ) = -4.51509534233958398E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_LSS_PLT4                   ) = -1.52453992546532446E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_LSS_PLT4                   ) = -2.14224141900404156E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_LSS_PLT4                   ) = 4.44353503343933743E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_LSS_PLT4                   ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_LSS_PLT4                   ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_LSS_PLT4                   ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_LSS_PLT4                   ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_LSS_PLT4                   ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_LSS_PLT4                   ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_LSS_PLT4                   ) = 0                       ! State dependency
body.flx.st.prestress (   1 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_LSS_PLT4                   ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_LSS_PLT4                   ) = 1                       ! Damping mode
body.flx.massprops (                $B_LSS_PLT4                   ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_LSS_PLT4                   ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_LSS_PLT4                   ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_LSS_PLT4                   ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_LSS_PLT4                   ) = $I_LSS_PLT_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_LSS_PLT4                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_LSS_PLT4                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_LSS_PLT4                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_LSS_PLT4                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_LSS_PLT4                   ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_LSS_PLT4                   ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_LSS_PLT4                   ) = $M_LSS_PLT4_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_LSS_PLT4                   ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_LSS_PLT4                   ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_LSS_PLT4                   ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_LSS_PLT4                   ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_LSS_PLT4                   ) = -9.80000000000000000E+02
body.attr.2d.pos.y (                $B_LSS_PLT4                   ) = 3.10000000000000000E+02
body.attr.2d.width (                $B_LSS_PLT4                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_LSS_PLT4                   ) = 1.20000000000000000E+02
body.attr.2d.ori (                  $B_LSS_PLT4                   ) = 90

marker.type (                       $M_LSS_PLT4_FE_reference      ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT4_FE_reference      ) = $B_LSS_PLT4             ! Body
marker.pos (              1 ,       $M_LSS_PLT4_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_PLT4_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_PLT4_FE_reference      ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_PLT4_FE_reference      ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_LSS_PLT4_FE_reference      ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT4_BRF               ) = 1                       ! Type
marker.parent (                     $M_LSS_PLT4_BRF               ) = $B_LSS_PLT4             ! Body
marker.flx.type (                   $M_LSS_PLT4_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_LSS_PLT4_PLC               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT4_PLC               ) = $B_LSS_PLT4             ! Body

marker.type (                       $M_LSS_PLT4_BR1               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT4_BR1               ) = $B_LSS_PLT4             ! Body
marker.pos (              1 ,       $M_LSS_PLT4_BR1               ) = $G_KP.$G_LSS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_LSS_PLT4_BR2               ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT4_BR2               ) = $B_LSS_PLT4             ! Body
marker.pos (              1 ,       $M_LSS_PLT4_BR2               ) = $G_KP.$G_LSS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_LSS_PLT4_GW                ) = 2                       ! Type
marker.parent (                     $M_LSS_PLT4_GW                ) = $B_LSS_PLT4             ! Body
marker.ang (              1 ,       $M_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_LSS_PLT4_GW                ) = { 90deg }               ! Angles
marker.flx.type (                   $M_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_GW_FLX_MARKER_TYPE ! Flexible type

prim.type (                         $P_LSS_PLT4_GW                ) = 25                      ! Type
prim.ref (                          $P_LSS_PLT4_GW                ) = $M_LSS_PLT4_GW          ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT4_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT4_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT4_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT4_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT4_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT4_GW                ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_LSS_PLT4_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_LSS_PLT4_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_LSS_PLT4_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_LSS_PLT4_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_LSS_PLT4_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_LSS_PLT4_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_LSS_PLT4_GW    ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_LSS_PLT4_GW          ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_LSS_PLT4_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_LSS_PLT4_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_LSS_PLT4_GW                ) = $G_PA.$G_GER.$G_LSS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_LSS_PLT4_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_LSS_PLT4_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_LSS_PLT4_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_LSS_PLT4_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_LSS_PLT4_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_LSS_PLT4_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_LSS_PLT4_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_LSS_PLT4_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_LSS_PLT4_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_LSS_PLT4_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_LSS_PLT4_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_LSS_PLT4_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_LSS_PLT4_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_LSS_PLT4_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_LSS_PLT4_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_LSS_PLT4_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_LSS_PLT4_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_LSS_PLT4_BR1               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT4_BR1               ) = $M_LSS_PLT4_BR1         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT4_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT4_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT4_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT4_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT4_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT4_BR1               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT4_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT4_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT4_BR1               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT4_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT4_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT4_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT4_BR2               ) = 2                       ! Type
prim.ref (                          $P_LSS_PLT4_BR2               ) = $M_LSS_PLT4_BR2         ! Reference Marker
prim.ang (                3 ,       $P_LSS_PLT4_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_LSS_PLT4_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_PLT4_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT4_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_PLT4_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT4_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_PLT4_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_PLT4_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_LSS_PLT4_BR2               ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_LSS_PLT4_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_LSS_PLT4_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_LSS_PLT4_BR2               ) = $G_3D.$G_LSS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_LSS_PLT4_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_LSS_PLT4_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_LSS_PLT4_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_LSS_PLT4_Flex              ) = 28                      ! Type
prim.ref (                          $P_LSS_PLT4_Flex              ) = $M_LSS_PLT4_BRF         ! Reference Marker
prim.color.r (            1 ,       $P_LSS_PLT4_Flex              ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_PLT4_Flex              ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_PLT4_Flex              ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_PLT4_Flex              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_PLT4_Flex              ) = $G_3D.$G_LSS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.mp.incl (                      $P_LSS_PLT4_Flex              ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_LSS_PLT4_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_LSS_PLT4_Flex              ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor
prim.par (               11 ,       $P_LSS_PLT4_Flex              ) = 0.00000000000000000E+00 ! [-] Interpolation type
prim.par (               12 ,       $P_LSS_PLT4_Flex              ) = 0.00000000000000000E+00 ! [-] Num. master nodes for interpol
prim.par (               21 ,       $P_LSS_PLT4_Flex              ) = 0.00000000000000000E+00 ! [-] Graphics mode


body.sb.node.id (         1 ,       $B_LSS_SUN                    ) = 1                       ! Node ID
body.sb.node.pos (        1 ,   1 , $B_LSS_SUN                    ) = -2.70000000000000018E-01 ! Node Position
body.sb.node.pos (        2 ,   1 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   1 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         2 ,       $B_LSS_SUN                    ) = 2                       ! Node ID
body.sb.node.pos (        1 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        2 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         3 ,       $B_LSS_SUN                    ) = 3                       ! Node ID
body.sb.node.pos (        1 ,   3 , $B_LSS_SUN                    ) = 2.70000000000000018E-01 ! Node Position
body.sb.node.pos (        2 ,   3 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   3 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         4 ,       $B_LSS_SUN                    ) = 4                       ! Node ID
body.sb.node.pos (        1 ,   4 , $B_LSS_SUN                    ) = 3.66250000000000020E-01 ! Node Position
body.sb.node.pos (        2 ,   4 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   4 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         5 ,       $B_LSS_SUN                    ) = 5                       ! Node ID
body.sb.node.pos (        1 ,   5 , $B_LSS_SUN                    ) = 4.62500000000000022E-01 ! Node Position
body.sb.node.pos (        2 ,   5 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   5 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         6 ,       $B_LSS_SUN                    ) = 6                       ! Node ID
body.sb.node.pos (        1 ,   6 , $B_LSS_SUN                    ) = 5.58749999999999969E-01 ! Node Position
body.sb.node.pos (        2 ,   6 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   6 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         7 ,       $B_LSS_SUN                    ) = 7                       ! Node ID
body.sb.node.pos (        1 ,   7 , $B_LSS_SUN                    ) = 6.55000000000000027E-01 ! Node Position
body.sb.node.pos (        2 ,   7 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   7 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         8 ,       $B_LSS_SUN                    ) = 8                       ! Node ID
body.sb.node.pos (        1 ,   8 , $B_LSS_SUN                    ) = 7.65000000000000013E-01 ! Node Position
body.sb.node.pos (        2 ,   8 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   8 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         9 ,       $B_LSS_SUN                    ) = 9                       ! Node ID
body.sb.node.pos (        1 ,   9 , $B_LSS_SUN                    ) = 8.90000000000000013E-01 ! Node Position
body.sb.node.pos (        2 ,   9 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   9 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        10 ,       $B_LSS_SUN                    ) = 10                      ! Node ID
body.sb.node.pos (        1 ,  10 , $B_LSS_SUN                    ) = 9.10000000000000031E-01 ! Node Position
body.sb.node.pos (        2 ,  10 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  10 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.ele.from (        1 ,       $B_LSS_SUN                    ) = 1                       ! From Node
body.sb.ele.to (          1 ,       $B_LSS_SUN                    ) = 2                       ! To Node
body.sb.ele.type (        1 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   1 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_01         ! Cross Section
body.sb.ele.xsec (        2 ,   1 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   1 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   1 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   1 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   1 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   1 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      1 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        2 ,       $B_LSS_SUN                    ) = 2                       ! From Node
body.sb.ele.to (          2 ,       $B_LSS_SUN                    ) = 3                       ! To Node
body.sb.ele.type (        2 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   2 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_02         ! Cross Section
body.sb.ele.xsec (        2 ,   2 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   2 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   2 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      2 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        3 ,       $B_LSS_SUN                    ) = 3                       ! From Node
body.sb.ele.to (          3 ,       $B_LSS_SUN                    ) = 4                       ! To Node
body.sb.ele.type (        3 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   3 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_03         ! Cross Section
body.sb.ele.xsec (        2 ,   3 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   3 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   3 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   3 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   3 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   3 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      3 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        4 ,       $B_LSS_SUN                    ) = 4                       ! From Node
body.sb.ele.to (          4 ,       $B_LSS_SUN                    ) = 5                       ! To Node
body.sb.ele.type (        4 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   4 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_04         ! Cross Section
body.sb.ele.xsec (        2 ,   4 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   4 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   4 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   4 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   4 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   4 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      4 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        5 ,       $B_LSS_SUN                    ) = 5                       ! From Node
body.sb.ele.to (          5 ,       $B_LSS_SUN                    ) = 6                       ! To Node
body.sb.ele.type (        5 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   5 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_05         ! Cross Section
body.sb.ele.xsec (        2 ,   5 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   5 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   5 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   5 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   5 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   5 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      5 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        6 ,       $B_LSS_SUN                    ) = 6                       ! From Node
body.sb.ele.to (          6 ,       $B_LSS_SUN                    ) = 7                       ! To Node
body.sb.ele.type (        6 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   6 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_06         ! Cross Section
body.sb.ele.xsec (        2 ,   6 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   6 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   6 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   6 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   6 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   6 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      6 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        7 ,       $B_LSS_SUN                    ) = 7                       ! From Node
body.sb.ele.to (          7 ,       $B_LSS_SUN                    ) = 8                       ! To Node
body.sb.ele.type (        7 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   7 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_07         ! Cross Section
body.sb.ele.xsec (        2 ,   7 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   7 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   7 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   7 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   7 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   7 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      7 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        8 ,       $B_LSS_SUN                    ) = 8                       ! From Node
body.sb.ele.to (          8 ,       $B_LSS_SUN                    ) = 9                       ! To Node
body.sb.ele.type (        8 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   8 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_08         ! Cross Section
body.sb.ele.xsec (        2 ,   8 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   8 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   8 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   8 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   8 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   8 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      8 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        9 ,       $B_LSS_SUN                    ) = 9                       ! From Node
body.sb.ele.to (          9 ,       $B_LSS_SUN                    ) = 10                      ! To Node
body.sb.ele.type (        9 ,       $B_LSS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   9 , $B_LSS_SUN                    ) = $XSc_LSS_SUN_09         ! Cross Section
body.sb.ele.xsec (        2 ,   9 , $B_LSS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   9 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   9 , $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   9 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   9 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   9 , $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      9 ,       $B_LSS_SUN                    ) = 1                       ! Active
body.m (                            $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_M ! Mass of the Body
body.mp (                           $B_LSS_SUN                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_IZZ ! Moments of inertia
body.I.kind (                       $B_LSS_SUN                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_LSS_SUN                    ) = 4.69968838145885859E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_LSS_SUN                    ) = 1.09921452528897101E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_LSS_SUN                    ) = -4.49764677135337104E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_LSS_SUN                    ) = -1.03908025239013596E-05 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_LSS_SUN                    ) = 4.33261402570618744E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_LSS_SUN                    ) = 2.34541060789780331E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         7 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         8 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         9 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        10 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        11 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        12 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         7 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         8 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         9 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        10 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        11 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        12 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_LSS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_LSS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_LSS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_LSS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_LSS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_LSS_SUN                    ) = 0                       ! State dependency
body.flx.st.scal.stiff (   1 ,      $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   2 ,      $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   3 ,      $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   4 ,      $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   5 ,      $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   6 ,      $B_LSS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.prestress (   1 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   7 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   8 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   9 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  10 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  11 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  12 ,       $B_LSS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_LSS_SUN                    ) = 1                       ! Damping mode
body.flx.massprops (                $B_LSS_SUN                    ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_LSS_SUN                    ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_LSS_SUN                    ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_LSS_SUN                    ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_LSS_SUN                    ) = $I_LSS_SUN_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      7 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      8 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      9 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     10 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     11 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     12 ,       $B_LSS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_LSS_SUN                    ) = $M_LSS_SUN_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_LSS_SUN                    ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_LSS_SUN                    ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_LSS_SUN                    ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_LSS_SUN                    ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_LSS_SUN                    ) = -1.19000000000000000E+03
body.attr.2d.pos.y (                $B_LSS_SUN                    ) = 4.00000000000000000E+01
body.attr.2d.width (                $B_LSS_SUN                    ) = 4.70000000000000000E+02
body.attr.2d.height (               $B_LSS_SUN                    ) = 5.00000000000000000E+01

marker.type (                       $M_LSS_SUN_FE_reference       ) = 2                       ! Type
marker.parent (                     $M_LSS_SUN_FE_reference       ) = $B_LSS_SUN              ! Body
marker.pos (              1 ,       $M_LSS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_LSS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_LSS_SUN_FE_reference       ) = 4                       ! Flexible type

marker.type (                       $M_LSS_SUN_BRF                ) = 1                       ! Type
marker.parent (                     $M_LSS_SUN_BRF                ) = $B_LSS_SUN              ! Body
marker.flx.type (                   $M_LSS_SUN_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_LSS_SUN_GW                 ) = 2                       ! Type
marker.parent (                     $M_LSS_SUN_GW                 ) = $B_LSS_SUN              ! Body
marker.pos (              1 ,       $M_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! Position
marker.ang (              2 ,       $M_LSS_SUN_GW                 ) = { 90deg }               ! Angles
marker.flx.type (                   $M_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_GW_FLX_MARKER_TYPE ! Flexible type
marker.flx.node (         1 ,       $M_LSS_SUN_GW                 ) = 2                       ! Referenced flexible nodes

marker.type (                       $M_LSS_SUN_IMS_PLC            ) = 2                       ! Type
marker.parent (                     $M_LSS_SUN_IMS_PLC            ) = $B_LSS_SUN              ! Body
marker.pos (              1 ,       $M_LSS_SUN_IMS_PLC            ) = $G_KP.$G_LSS.$G_SUN.$_IMS_PLC_X ! Position
marker.pos (              2 ,       $M_LSS_SUN_IMS_PLC            ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_LSS_SUN_IMS_PLC            ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_LSS_SUN_IMS_PLC            ) = 0                       ! Flexible type
marker.flx.node (         1 ,       $M_LSS_SUN_IMS_PLC            ) = 8                       ! Referenced flexible nodes

prim.type (                         $P_LSS_SUN_Flex               ) = 28                      ! Type
prim.ref (                          $P_LSS_SUN_Flex               ) = $M_LSS_SUN_BRF          ! Reference Marker
prim.color.r (            1 ,       $P_LSS_SUN_Flex               ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_SUN_Flex               ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_SUN_Flex               ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_SUN_Flex               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_LSS_SUN_Flex               ) = 1                       ! Draw style
prim.transparency (                 $P_LSS_SUN_Flex               ) = $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_LSS_SUN_Flex               ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_LSS_SUN_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_LSS_SUN_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor
prim.par (               11 ,       $P_LSS_SUN_Flex               ) = 0.00000000000000000E+00 ! [-] Interpolation type
prim.par (               12 ,       $P_LSS_SUN_Flex               ) = 0.00000000000000000E+00 ! [-] Num. master nodes for interpol
prim.par (               21 ,       $P_LSS_SUN_Flex               ) = 0.00000000000000000E+00 ! [-] Graphics mode

prim.type (                         $P_LSS_SUN_GW                 ) = 25                      ! Type
prim.ref (                          $P_LSS_SUN_GW                 ) = $M_LSS_SUN_GW           ! Reference Marker
prim.color.r (            1 ,       $P_LSS_SUN_GW                 ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_SUN_GW                 ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_SUN_GW                 ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_SUN_GW                 ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_SUN_GW                 ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_SUN_GW                 ) = $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,   1 , $P_LSS_SUN_GW                 ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_LSS_SUN_GW           ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_LSS_SUN_GW     ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_LSS_SUN_GW     ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_LSS_SUN_GW     ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_LSS_SUN_GW     ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_LSS_SUN_GW     ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_LSS_SUN_GW           ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_FND ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_LSS_SUN_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_LSS_SUN_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_LSS_SUN_GW                 ) = $G_PA.$G_GER.$G_LSS.$G_SUN.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_LSS_SUN_GW                 ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_LSS_SUN_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_LSS_SUN_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_LSS_SUN_GW           ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_LSS_SUN_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_LSS_SUN_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_LSS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_LSS_SUN_GW           ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_LSS_SUN_GW           ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_LSS_SUN_GW           ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_LSS_SUN_GW                 ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_LSS_SUN_GW                 ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_LSS_SUN_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_LSS_SUN_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_LSS_SUN_GW           ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_LSS_SUN_GW     ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_LSS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_LSS_SUN_SH                 ) = 7                       ! Type
prim.ref (                          $P_LSS_SUN_SH                 ) = $M_LSS_SUN_BRF          ! Reference Marker
prim.vtx (                1 ,   1 , $P_LSS_SUN_SH                 ) = { -0.27 m }             ! Vertices
prim.vtx (                1 ,   2 , $P_LSS_SUN_SH                 ) = -2.70000000000000018E-01 ! Vertices
prim.vtx (                1 ,   3 , $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   4 , $P_LSS_SUN_SH                 ) = 2.70000000000000018E-01 ! Vertices
prim.vtx (                1 ,   5 , $P_LSS_SUN_SH                 ) = 3.66250000000000020E-01 ! Vertices
prim.vtx (                1 ,   6 , $P_LSS_SUN_SH                 ) = 4.62500000000000022E-01 ! Vertices
prim.vtx (                1 ,   7 , $P_LSS_SUN_SH                 ) = 5.58749999999999969E-01 ! Vertices
prim.vtx (                1 ,   8 , $P_LSS_SUN_SH                 ) = 6.55000000000000027E-01 ! Vertices
prim.vtx (                1 ,   9 , $P_LSS_SUN_SH                 ) = 7.65000000000000013E-01 ! Vertices
prim.vtx (                1 ,  10 , $P_LSS_SUN_SH                 ) = 8.90000000000000013E-01 ! Vertices
prim.vtx (                1 ,  11 , $P_LSS_SUN_SH                 ) = 9.10000000000000031E-01 ! Vertices
prim.vtx (                1 ,  12 , $P_LSS_SUN_SH                 ) = { 0.91 m }              ! Vertices
prim.vtx (                2 ,   1 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_I * 0.5 } ! Vertices
prim.vtx (                2 ,   2 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   3 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   4 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   5 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   6 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   7 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   8 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,   9 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  10 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_4 * 0.5 } ! Vertices
prim.vtx (                2 ,  11 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_O_4 * 0.5 } ! Vertices
prim.vtx (                2 ,  12 , $P_LSS_SUN_SH                 ) = { $G_3D.$G_LSS.$G_SUN.$G_SH.$_D_I * 0.5 } ! Vertices
prim.color.r (            1 ,       $P_LSS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_LSS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_LSS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_LSS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_LSS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_LSS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_LSS_SUN_SH                 ) = $G_3D.$G_LSS.$G_SUN.$_TRANSPARENCY_RIGID ! Transparency
prim.par (                2 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Contour by
prim.par (                6 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Curve fitting type
prim.par (               11 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               12 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               13 ,       $P_LSS_SUN_SH                 ) = 1.20000000000000000E+01 ! [-] Number of planes
prim.par (               14 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (               15 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show bottom cap
prim.par (               16 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show top cap
prim.par (               17 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show start cross section Cap
prim.par (               18 ,       $P_LSS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show end cross Section Cap
prim.plot.par (           1 ,       $P_LSS_SUN_SH                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_LSS_SUN_SH                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_LSS_SUN_SH     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter


body.m (                            $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_M ! Mass of the Body
body.mp (                           $B_IMS_PLC                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_IZZ ! Moments of inertia
body.I.kind (                       $B_IMS_PLC                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_IMS_PLC                    ) = 1.62995488711807335E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_IMS_PLC                    ) = 3.81983544656017832E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_IMS_PLC                    ) = -9.52225172477688328E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_IMS_PLC                    ) = -1.04038730919333341E-05 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_IMS_PLC                    ) = 4.33344762717349178E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_IMS_PLC                    ) = 2.34541080536963906E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         7 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         8 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         9 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        10 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        11 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        12 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        13 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        14 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        15 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        16 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        17 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        18 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        19 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        20 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        21 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        22 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        23 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        24 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        25 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        26 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        27 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        28 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        29 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        30 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        31 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        32 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        33 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        34 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        35 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        36 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        37 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        38 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        39 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        40 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        41 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        42 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        43 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        44 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        45 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        46 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        47 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        48 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        49 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        50 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        51 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        52 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        53 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        54 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         7 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         8 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         9 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        10 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        11 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        12 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        13 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        14 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        15 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        16 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        17 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        18 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        19 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        20 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        21 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        22 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        23 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        24 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        25 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        26 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        27 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        28 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        29 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        30 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        31 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        32 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        33 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        34 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        35 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        36 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        37 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        38 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        39 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        40 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        41 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        42 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        43 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        44 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        45 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        46 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        47 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        48 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        49 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        50 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        51 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        52 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        53 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        54 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         7 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         8 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (         9 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        10 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        11 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        12 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        13 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        14 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        15 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        16 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        17 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        18 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        19 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        20 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        21 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        22 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        23 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        24 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        25 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        26 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        27 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        28 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        29 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        30 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        31 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        32 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        33 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        34 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        35 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        36 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        37 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        38 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        39 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        40 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        41 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        42 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        43 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        44 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        45 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        46 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        47 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        48 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        49 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        50 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        51 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        52 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        53 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.dep (        54 ,       $B_IMS_PLC                    ) = 0                       ! State dependency
body.flx.st.scal.stiff (   1 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   2 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   3 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   4 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   5 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   6 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   7 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   8 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   9 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  10 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  11 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  12 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  13 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  14 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  15 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  16 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  17 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  18 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  19 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  20 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  21 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  22 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  23 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  24 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  25 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  26 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  27 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  28 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  29 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  30 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  31 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  32 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  33 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  34 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  35 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  36 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  37 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  38 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  39 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  40 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  41 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  42 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  43 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  44 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  45 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  46 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  47 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  48 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  49 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  50 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  51 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  52 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  53 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  54 ,      $B_IMS_PLC                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.prestress (   1 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   7 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   8 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   9 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  10 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  11 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  12 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  13 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  14 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  15 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  16 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  17 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  18 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  19 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  20 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  21 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  22 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  23 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  24 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  25 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  26 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  27 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  28 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  29 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  30 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  31 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  32 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  33 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  34 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  35 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  36 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  37 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  38 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  39 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  40 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  41 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  42 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  43 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  44 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  45 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  46 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  47 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  48 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  49 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  50 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  51 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  52 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  53 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  54 ,       $B_IMS_PLC                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_IMS_PLC                    ) = 1                       ! Damping mode
body.flx.massprops (                $B_IMS_PLC                    ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_IMS_PLC                    ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_IMS_PLC                    ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_IMS_PLC                    ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_IMS_PLC                    ) = $I_IMS_PLC_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      7 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      8 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      9 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     10 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     11 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     12 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     13 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     14 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     15 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     16 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     17 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     18 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     19 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     20 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     21 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     22 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     23 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     24 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     25 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     26 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     27 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     28 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     29 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     30 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     31 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     32 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     33 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     34 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     35 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     36 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     37 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     38 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     39 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     40 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     41 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     42 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     43 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     44 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     45 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     46 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     47 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     48 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     49 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     50 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     51 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     52 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     53 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     54 ,       $B_IMS_PLC                    ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_IMS_PLC                    ) = null                    ! Reference marker for FE model
body.flx.cosim.job.type (           $B_IMS_PLC                    ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_IMS_PLC                    ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_IMS_PLC                    ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_IMS_PLC                    ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_IMS_PLC                    ) = -7.70000000000000000E+02
body.attr.2d.pos.y (                $B_IMS_PLC                    ) = 5.00000000000000000E+02
body.attr.2d.width (                $B_IMS_PLC                    ) = 2.80000000000000000E+02
body.attr.2d.height (               $B_IMS_PLC                    ) = 4.00000000000000000E+01

marker.type (                       $M_IMS_PLC_BRF                ) = 1                       ! Type
marker.parent (                     $M_IMS_PLC_BRF                ) = $B_IMS_PLC              ! Body
marker.flx.type (                   $M_IMS_PLC_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLC_HSG                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_HSG                ) = $B_IMS_PLC              ! Body
marker.flx.type (                   $M_IMS_PLC_HSG                ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLC_BR1                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_BR1                ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_BR1                ) = $G_KP.$G_IMS.$G_PLC.$_BR1_X ! Position

marker.type (                       $M_IMS_PLC_BR2                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_BR2                ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_BR2                ) = $G_KP.$G_IMS.$G_PLC.$_BR2_X ! Position

marker.type (                       $M_IMS_PLC_PLT1               ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT1               ) = $M_IMS_PLC_PLT1_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT1               ) = $B_IMS_PLC              ! Body
marker.pos (              3 ,       $M_IMS_PLC_PLT1               ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT2               ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT2               ) = $M_IMS_PLC_PLT2_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT2               ) = $B_IMS_PLC              ! Body
marker.pos (              3 ,       $M_IMS_PLC_PLT2               ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT3               ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT3               ) = $M_IMS_PLC_PLT3_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT3               ) = $B_IMS_PLC              ! Body
marker.pos (              3 ,       $M_IMS_PLC_PLT3               ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT1_Ref           ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_PLT1_Ref           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT1_Ref           ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_IMS_PLC_PLT1_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLC_PLT2_Ref           ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_PLT2_Ref           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT2_Ref           ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_IMS_PLC_PLT2_Ref           ) = { 120deg }              ! Angles
marker.flx.type (                   $M_IMS_PLC_PLT2_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLC_PLT3_Ref           ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_PLT3_Ref           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT3_Ref           ) = 0.00000000000000000E+00 ! Position
marker.ang (              1 ,       $M_IMS_PLC_PLT3_Ref           ) = { 240deg }              ! Angles
marker.flx.type (                   $M_IMS_PLC_PLT3_Ref           ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLC_PLT1_BR1           ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT1_BR1           ) = $M_IMS_PLC_PLT1_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT1_BR1           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT1_BR1           ) = $G_KP.$G_IMS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_IMS_PLC_PLT1_BR1           ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT1_BR2           ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT1_BR2           ) = $M_IMS_PLC_PLT1_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT1_BR2           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT1_BR2           ) = $G_KP.$G_IMS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_IMS_PLC_PLT1_BR2           ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT2_BR1           ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT2_BR1           ) = $M_IMS_PLC_PLT2_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT2_BR1           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT2_BR1           ) = $G_KP.$G_IMS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_IMS_PLC_PLT2_BR1           ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT2_BR2           ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT2_BR2           ) = $M_IMS_PLC_PLT2_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT2_BR2           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT2_BR2           ) = $G_KP.$G_IMS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_IMS_PLC_PLT2_BR2           ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT3_BR1           ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT3_BR1           ) = $M_IMS_PLC_PLT3_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT3_BR1           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT3_BR1           ) = $G_KP.$G_IMS.$G_PLT.$_BR1_X ! Position
marker.pos (              3 ,       $M_IMS_PLC_PLT3_BR1           ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_PLT3_BR2           ) = 2                       ! Type
marker.ref (                        $M_IMS_PLC_PLT3_BR2           ) = $M_IMS_PLC_PLT3_Ref     ! Reference Marker
marker.parent (                     $M_IMS_PLC_PLT3_BR2           ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_PLT3_BR2           ) = $G_KP.$G_IMS.$G_PLT.$_BR2_X ! Position
marker.pos (              3 ,       $M_IMS_PLC_PLT3_BR2           ) = $G_KP.$G_IMS.$G_PLC.$_PLT_R ! Position

marker.type (                       $M_IMS_PLC_LSS_SUN            ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_LSS_SUN            ) = $B_IMS_PLC              ! Body
marker.pos (              1 ,       $M_IMS_PLC_LSS_SUN            ) = $G_KP.$G_IMS.$G_PLC.$_LSS_SUN_X ! Position

marker.type (                       $M_IMS_PLC_CAD                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLC_CAD                ) = $B_IMS_PLC              ! Body
marker.flx.type (                   $M_IMS_PLC_CAD                ) = 4                       ! Flexible type

prim.type (                         $P_IMS_PLC_BR1                ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_BR1                ) = $M_IMS_PLC_BR1          ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_BR1                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_BR1                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_BR1                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_BR1                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_BR1                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_BR1                ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_BR1                ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_BR1                ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_BR1                ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_BR1                ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_BR1                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_BR1                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_BR1                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_BR2                ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_BR2                ) = $M_IMS_PLC_BR2          ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_BR2                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_BR2                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_BR2                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_BR2                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_BR2                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_BR2                ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_BR2                ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_BR2                ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_BR2                ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_BR2                ) = $G_3D.$G_IMS.$G_PLC.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_BR2                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_BR2                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_BR2                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PLT1_BR1           ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PLT1_BR1           ) = $M_IMS_PLC_PLT1_BR1     ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PLT1_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PLT1_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PLT1_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PLT1_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PLT1_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_PLT1_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_PLT1_BR1           ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PLT1_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PLT1_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PLT1_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PLT1_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PLT1_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PLT1_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PLT1_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PLT1_BR2           ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PLT1_BR2           ) = $M_IMS_PLC_PLT1_BR2     ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PLT1_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PLT1_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PLT1_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PLT1_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PLT1_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_PLT1_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_PLT1_BR2           ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PLT1_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PLT1_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PLT1_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PLT1_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PLT1_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PLT1_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PLT1_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PLT2_BR1           ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PLT2_BR1           ) = $M_IMS_PLC_PLT2_BR1     ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PLT2_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PLT2_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PLT2_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PLT2_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PLT2_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_PLT2_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_PLT2_BR1           ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PLT2_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PLT2_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PLT2_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PLT2_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PLT2_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PLT2_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PLT2_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PLT2_BR2           ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PLT2_BR2           ) = $M_IMS_PLC_PLT2_BR2     ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PLT2_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PLT2_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PLT2_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PLT2_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PLT2_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_PLT2_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_PLT2_BR2           ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PLT2_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PLT2_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PLT2_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PLT2_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PLT2_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PLT2_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PLT2_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PLT3_BR1           ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PLT3_BR1           ) = $M_IMS_PLC_PLT3_BR1     ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PLT3_BR1           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PLT3_BR1           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PLT3_BR1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PLT3_BR1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PLT3_BR1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_PLT3_BR1           ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_PLT3_BR1           ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PLT3_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PLT3_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PLT3_BR1           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PLT3_BR1           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PLT3_BR1           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PLT3_BR1           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PLT3_BR1           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PLT3_BR2           ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PLT3_BR2           ) = $M_IMS_PLC_PLT3_BR2     ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PLT3_BR2           ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PLT3_BR2           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PLT3_BR2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PLT3_BR2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PLT3_BR2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLC_PLT3_BR2           ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_PLC_PLT3_BR2           ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PLT3_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PLT3_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PLT3_BR2           ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PLT3_BR2           ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PLT3_BR2           ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PLT3_BR2           ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PLT3_BR2           ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLC_PSH1               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PSH1               ) = $M_IMS_PLC_PLT1         ! Reference Marker
prim.pos (                3 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! Position
prim.ang (                3 ,       $P_IMS_PLC_PSH1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PSH1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PSH1               ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PSH1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PSH1               ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PSH1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLC_PSH1               ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PSH1               ) = $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PSH1               ) = $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_D ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PSH1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PSH1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PSH1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_IMS_PLC_PSH1               ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_IMS_PLC_PSH2               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PSH2               ) = $M_IMS_PLC_PLT2         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PSH2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PSH2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PSH2               ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PSH2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PSH2               ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PSH2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLC_PSH2               ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PSH2               ) = $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PSH2               ) = $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_D ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PSH2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PSH2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PSH2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_IMS_PLC_PSH2               ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_IMS_PLC_PSH3               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLC_PSH3               ) = $M_IMS_PLC_PLT3         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLC_PSH3               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_PSH3               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLC_PSH3               ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_PSH3               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLC_PSH3               ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_PSH3               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLC_PSH3               ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_PSH3               ) = $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLC_PSH3               ) = $G_3D.$G_IMS.$G_PLC.$G_SH.$_PSH_D ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLC_PSH3               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLC_PSH3               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLC_PSH3               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_IMS_PLC_PSH3               ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_IMS_PLC_CAD                ) = 39                      ! Type
prim.ref (                          $P_IMS_PLC_CAD                ) = $M_IMS_PLC_BRF          ! Reference Marker
prim.pos (                1 ,       $P_IMS_PLC_CAD                ) = -2.20000000000000001E-01 ! Position
prim.pos (                3 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! Position
prim.ang (                1 ,       $P_IMS_PLC_CAD                ) = { 180deg }              ! Angles
prim.ang (                2 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_IMS_PLC_CAD                ) = { -180 deg }            ! Angles
prim.color.r (            1 ,       $P_IMS_PLC_CAD                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_CAD                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_CAD                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_CAD                ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_CAD ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLC_CAD                ) = $G_3D.$G_IMS.$G_PLC.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_IMS_PLC_CAD                ) = '32_GBX-IMS_PLC.obj'    ! [-] CAD file name
prim.par (                3 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Data display flag
prim.par (                4 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Line display flag
prim.par (                5 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Faceted line diam.(CAD units)
prim.par (                9 ,       $P_IMS_PLC_CAD                ) = 1.00000000000000002E-03 ! [-] Global scaling factor
prim.par (               10 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_IMS_PLC_CAD                ) = 0.00000000000000000E+00 ! [-] Repeat shape

prim.type (                         $P_IMS_PLC_Flex               ) = 28                      ! Type
prim.ref (                          $P_IMS_PLC_Flex               ) = $M_IMS_PLC_BRF          ! Reference Marker
prim.color.r (            1 ,       $P_IMS_PLC_Flex               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLC_Flex               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLC_Flex               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLC_Flex               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.incl (                      $P_IMS_PLC_Flex               ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_IMS_PLC_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_IMS_PLC_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor


body.m (                            $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_IMS_PLT1                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IMS_PLT1                   ) = $G_BP.$G_IMS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_IMS_PLT1                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.brf.st.pos (         1 ,       $B_IMS_PLT1                   ) = 1.63225155944064904E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_IMS_PLT1                   ) = 3.82534514325027358E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_IMS_PLT1                   ) = 5.20472125854868128E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_IMS_PLT1                   ) = -8.49187698437521288E-02 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_IMS_PLT1                   ) = 4.11898601951628338E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_IMS_PLT1                   ) = 2.70447554089012394E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_IMS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_IMS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_IMS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_IMS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_IMS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_IMS_PLT1                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.cosim.job.type (           $B_IMS_PLT1                   ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_IMS_PLT1                   ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_IMS_PLT1                   ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_IMS_PLT1                   ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_IMS_PLT1                   ) = -6.90000000000000000E+02
body.attr.2d.pos.y (                $B_IMS_PLT1                   ) = 1.70000000000000000E+02
body.attr.2d.width (                $B_IMS_PLT1                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_IMS_PLT1                   ) = 2.60000000000000000E+02
body.attr.2d.ori (                  $B_IMS_PLT1                   ) = 90

marker.type (                       $M_IMS_PLT1_BRF               ) = 1                       ! Type
marker.parent (                     $M_IMS_PLT1_BRF               ) = $B_IMS_PLT1             ! Body
marker.flx.type (                   $M_IMS_PLT1_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLT1_PLC               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT1_PLC               ) = $B_IMS_PLT1             ! Body

marker.type (                       $M_IMS_PLT1_BR1               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT1_BR1               ) = $B_IMS_PLT1             ! Body
marker.pos (              1 ,       $M_IMS_PLT1_BR1               ) = $G_KP.$G_IMS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_IMS_PLT1_BR2               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT1_BR2               ) = $B_IMS_PLT1             ! Body
marker.pos (              1 ,       $M_IMS_PLT1_BR2               ) = $G_KP.$G_IMS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_IMS_PLT1_GW                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT1_GW                ) = $B_IMS_PLT1             ! Body
marker.ang (              1 ,       $M_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_IMS_PLT1_GW                ) = { 90deg }               ! Angles

prim.type (                         $P_IMS_PLT1_GW                ) = 25                      ! Type
prim.ref (                          $P_IMS_PLT1_GW                ) = $M_IMS_PLT1_GW          ! Reference Marker
prim.color.r (            1 ,       $P_IMS_PLT1_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT1_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT1_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT1_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT1_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLT1_GW                ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_IMS_PLT1_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_IMS_PLT1_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_IMS_PLT1_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_IMS_PLT1_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_IMS_PLT1_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_IMS_PLT1_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_IMS_PLT1_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_IMS_PLT1_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_IMS_PLT1_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_IMS_PLT1_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_IMS_PLT1_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_IMS_PLT1_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_IMS_PLT1_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_IMS_PLT1_GW          ) = 0.00000000000000000E+00 ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_IMS_PLT1_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_IMS_PLT1_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_IMS_PLT1_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_IMS_PLT1_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_IMS_PLT1_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_IMS_PLT1_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_IMS_PLT1_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_IMS_PLT1_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_IMS_PLT1_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_IMS_PLT1_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_IMS_PLT1_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_IMS_PLT1_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_IMS_PLT1_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_IMS_PLT1_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_IMS_PLT1_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_IMS_PLT1_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_IMS_PLT1_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_IMS_PLT1_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_IMS_PLT1_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_IMS_PLT1_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_IMS_PLT1_BR1               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLT1_BR1               ) = $M_IMS_PLT1_BR1         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLT1_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT1_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLT1_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_IMS_PLT1_BR1               ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_IMS_PLT1_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLT1_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLT1_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLT1_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLT1_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLT1_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLT1_BR2               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLT1_BR2               ) = $M_IMS_PLT1_BR2         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLT1_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT1_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLT1_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_IMS_PLT1_BR2               ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_IMS_PLT1_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLT1_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLT1_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLT1_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLT1_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLT1_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle


body.m (                            $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_IMS_PLT2                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IMS_PLT2                   ) = $G_BP.$G_IMS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_IMS_PLT2                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.brf.st.pos (         1 ,       $B_IMS_PLT2                   ) = 1.62988299967606554E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_IMS_PLT2                   ) = -4.55175144910424379E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_IMS_PLT2                   ) = -2.74520254755154736E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_IMS_PLT2                   ) = -1.10380999457094964E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_IMS_PLT2                   ) = -1.43319818680644016E-04 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_IMS_PLT2                   ) = 4.92548388798961807E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_IMS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_IMS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_IMS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_IMS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_IMS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_IMS_PLT2                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.attr.2d.pos.x (                $B_IMS_PLT2                   ) = -6.20000000000000000E+02
body.attr.2d.pos.y (                $B_IMS_PLT2                   ) = 2.40000000000000000E+02
body.attr.2d.width (                $B_IMS_PLT2                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_IMS_PLT2                   ) = 1.90000000000000000E+02
body.attr.2d.ori (                  $B_IMS_PLT2                   ) = 90

marker.type (                       $M_IMS_PLT2_BRF               ) = 1                       ! Type
marker.parent (                     $M_IMS_PLT2_BRF               ) = $B_IMS_PLT2             ! Body
marker.flx.type (                   $M_IMS_PLT2_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLT2_PLC               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT2_PLC               ) = $B_IMS_PLT2             ! Body

marker.type (                       $M_IMS_PLT2_BR1               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT2_BR1               ) = $B_IMS_PLT2             ! Body
marker.pos (              1 ,       $M_IMS_PLT2_BR1               ) = $G_KP.$G_IMS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_IMS_PLT2_BR2               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT2_BR2               ) = $B_IMS_PLT2             ! Body
marker.pos (              1 ,       $M_IMS_PLT2_BR2               ) = $G_KP.$G_IMS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_IMS_PLT2_GW                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT2_GW                ) = $B_IMS_PLT2             ! Body
marker.ang (              1 ,       $M_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_IMS_PLT2_GW                ) = { 90deg }               ! Angles

prim.type (                         $P_IMS_PLT2_GW                ) = 25                      ! Type
prim.ref (                          $P_IMS_PLT2_GW                ) = $M_IMS_PLT2_GW          ! Reference Marker
prim.color.r (            1 ,       $P_IMS_PLT2_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT2_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT2_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT2_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT2_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLT2_GW                ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_IMS_PLT2_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_IMS_PLT2_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_IMS_PLT2_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_IMS_PLT2_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_IMS_PLT2_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_IMS_PLT2_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_IMS_PLT2_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_IMS_PLT2_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_IMS_PLT2_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_IMS_PLT2_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_IMS_PLT2_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_IMS_PLT2_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_IMS_PLT2_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_IMS_PLT2_GW          ) = 0.00000000000000000E+00 ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_IMS_PLT2_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_IMS_PLT2_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_IMS_PLT2_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_IMS_PLT2_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_IMS_PLT2_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_IMS_PLT2_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_IMS_PLT2_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_IMS_PLT2_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_IMS_PLT2_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_IMS_PLT2_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_IMS_PLT2_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_IMS_PLT2_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_IMS_PLT2_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_IMS_PLT2_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_IMS_PLT2_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_IMS_PLT2_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_IMS_PLT2_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_IMS_PLT2_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_IMS_PLT2_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_IMS_PLT2_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_IMS_PLT2_BR1               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLT2_BR1               ) = $M_IMS_PLT2_BR1         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLT2_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT2_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLT2_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_IMS_PLT2_BR1               ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_IMS_PLT2_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLT2_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLT2_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLT2_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLT2_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLT2_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLT2_BR2               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLT2_BR2               ) = $M_IMS_PLT2_BR2         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLT2_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT2_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLT2_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_IMS_PLT2_BR2               ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_IMS_PLT2_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLT2_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLT2_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLT2_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLT2_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLT2_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle


body.m (                            $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_M ! Mass of the Body
body.mp (                           $B_IMS_PLT3                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IMS_PLT3                   ) = $G_BP.$G_IMS.$G_PLT.$_IZZ ! Moments of inertia
body.I.kind (                       $B_IMS_PLT3                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.brf.st.pos (         1 ,       $B_IMS_PLT3                   ) = 1.62772996437783779E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_IMS_PLT3                   ) = 4.62809288997934665E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_IMS_PLT3                   ) = -2.74520508822147791E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_IMS_PLT3                   ) = -2.12269776896596785E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_IMS_PLT3                   ) = -4.26926322482853483E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_IMS_PLT3                   ) = 2.46041011435894777E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_IMS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_IMS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_IMS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_IMS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_IMS_PLT3                   ) = -0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_IMS_PLT3                   ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.cosim.job.type (           $B_IMS_PLT3                   ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_IMS_PLT3                   ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_IMS_PLT3                   ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_IMS_PLT3                   ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_IMS_PLT3                   ) = -5.50000000000000000E+02
body.attr.2d.pos.y (                $B_IMS_PLT3                   ) = 3.10000000000000000E+02
body.attr.2d.width (                $B_IMS_PLT3                   ) = 6.00000000000000000E+01
body.attr.2d.height (               $B_IMS_PLT3                   ) = 1.20000000000000000E+02
body.attr.2d.ori (                  $B_IMS_PLT3                   ) = 90

marker.type (                       $M_IMS_PLT3_BRF               ) = 1                       ! Type
marker.parent (                     $M_IMS_PLT3_BRF               ) = $B_IMS_PLT3             ! Body
marker.flx.type (                   $M_IMS_PLT3_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_IMS_PLT3_PLC               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT3_PLC               ) = $B_IMS_PLT3             ! Body

marker.type (                       $M_IMS_PLT3_BR1               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT3_BR1               ) = $B_IMS_PLT3             ! Body
marker.pos (              1 ,       $M_IMS_PLT3_BR1               ) = $G_KP.$G_IMS.$G_PLT.$_BR1_X ! Position

marker.type (                       $M_IMS_PLT3_BR2               ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT3_BR2               ) = $B_IMS_PLT3             ! Body
marker.pos (              1 ,       $M_IMS_PLT3_BR2               ) = $G_KP.$G_IMS.$G_PLT.$_BR2_X ! Position

marker.type (                       $M_IMS_PLT3_GW                ) = 2                       ! Type
marker.parent (                     $M_IMS_PLT3_GW                ) = $B_IMS_PLT3             ! Body
marker.ang (              1 ,       $M_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_IMS_PLT3_GW                ) = { 90deg }               ! Angles

prim.type (                         $P_IMS_PLT3_GW                ) = 25                      ! Type
prim.ref (                          $P_IMS_PLT3_GW                ) = $M_IMS_PLT3_GW          ! Reference Marker
prim.color.r (            1 ,       $P_IMS_PLT3_GW                ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT3_GW                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT3_GW                ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT3_GW                ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT3_GW                ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_PLT3_GW                ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_IMS_PLT3_GW                ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_IMS_PLT3_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_IMS_PLT3_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_IMS_PLT3_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_IMS_PLT3_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_IMS_PLT3_GW          ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_IMS_PLT3_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_IMS_PLT3_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_IMS_PLT3_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_IMS_PLT3_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_IMS_PLT3_GW    ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_IMS_PLT3_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_IMS_PLT3_GW          ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_IMS_PLT3_GW          ) = 0.00000000000000000E+00 ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_IMS_PLT3_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_IMS_PLT3_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_IMS_PLT3_GW                ) = $G_PA.$G_GER.$G_IMS.$G_PLT.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_IMS_PLT3_GW                ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_IMS_PLT3_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_IMS_PLT3_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_IMS_PLT3_GW          ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_IMS_PLT3_GW          ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_IMS_PLT3_GW          ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_IMS_PLT3_GW    ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_IMS_PLT3_GW          ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_IMS_PLT3_GW          ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_IMS_PLT3_GW          ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_IMS_PLT3_GW                ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_IMS_PLT3_GW                ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_IMS_PLT3_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_IMS_PLT3_GW                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_IMS_PLT3_GW          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_IMS_PLT3_GW    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_IMS_PLT3_GW    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_IMS_PLT3_BR1               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLT3_BR1               ) = $M_IMS_PLT3_BR1         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLT3_BR1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT3_BR1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLT3_BR1               ) = 2                       ! Draw style
prim.transparency (                 $P_IMS_PLT3_BR1               ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_IMS_PLT3_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLT3_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLT3_BR1               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLT3_BR1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLT3_BR1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLT3_BR1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_IMS_PLT3_BR2               ) = 2                       ! Type
prim.ref (                          $P_IMS_PLT3_BR2               ) = $M_IMS_PLT3_BR2         ! Reference Marker
prim.ang (                3 ,       $P_IMS_PLT3_BR2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_IMS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_PLT3_BR2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_PLT3_BR2               ) = 2                       ! Draw style
prim.transparency (                 $P_IMS_PLT3_BR2               ) = $G_3D.$G_IMS.$G_PLT.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_IMS_PLT3_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_IMS_PLT3_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_IMS_PLT3_BR2               ) = $G_3D.$G_IMS.$G_PLT.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_IMS_PLT3_BR2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_IMS_PLT3_BR2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_IMS_PLT3_BR2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [rad] Start angle


body.sb.node.id (         1 ,       $B_IMS_SUN                    ) = 1                       ! Node ID
body.sb.node.pos (        1 ,   1 , $B_IMS_SUN                    ) = -2.04999999999999988E-01 ! Node Position
body.sb.node.pos (        2 ,   1 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   1 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         2 ,       $B_IMS_SUN                    ) = 2                       ! Node ID
body.sb.node.pos (        1 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        2 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         3 ,       $B_IMS_SUN                    ) = 3                       ! Node ID
body.sb.node.pos (        1 ,   3 , $B_IMS_SUN                    ) = 2.04999999999999988E-01 ! Node Position
body.sb.node.pos (        2 ,   3 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   3 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         4 ,       $B_IMS_SUN                    ) = 4                       ! Node ID
body.sb.node.pos (        1 ,   4 , $B_IMS_SUN                    ) = 2.44999999999999996E-01 ! Node Position
body.sb.node.pos (        2 ,   4 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   4 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         5 ,       $B_IMS_SUN                    ) = 5                       ! Node ID
body.sb.node.pos (        1 ,   5 , $B_IMS_SUN                    ) = 3.55999999999999983E-01 ! Node Position
body.sb.node.pos (        2 ,   5 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   5 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         6 ,       $B_IMS_SUN                    ) = 6                       ! Node ID
body.sb.node.pos (        1 ,   6 , $B_IMS_SUN                    ) = 4.67000000000000026E-01 ! Node Position
body.sb.node.pos (        2 ,   6 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   6 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         7 ,       $B_IMS_SUN                    ) = 7                       ! Node ID
body.sb.node.pos (        1 ,   7 , $B_IMS_SUN                    ) = 5.77999999999999958E-01 ! Node Position
body.sb.node.pos (        2 ,   7 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   7 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         8 ,       $B_IMS_SUN                    ) = 8                       ! Node ID
body.sb.node.pos (        1 ,   8 , $B_IMS_SUN                    ) = 6.88999999999999946E-01 ! Node Position
body.sb.node.pos (        2 ,   8 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   8 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         9 ,       $B_IMS_SUN                    ) = 9                       ! Node ID
body.sb.node.pos (        1 ,   9 , $B_IMS_SUN                    ) = 8.00000000000000044E-01 ! Node Position
body.sb.node.pos (        2 ,   9 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   9 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        10 ,       $B_IMS_SUN                    ) = 10                      ! Node ID
body.sb.node.pos (        1 ,  10 , $B_IMS_SUN                    ) = 9.39999999999999947E-01 ! Node Position
body.sb.node.pos (        2 ,  10 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  10 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        11 ,       $B_IMS_SUN                    ) = 11                      ! Node ID
body.sb.node.pos (        1 ,  11 , $B_IMS_SUN                    ) = 1.08000000000000007E+00 ! Node Position
body.sb.node.pos (        2 ,  11 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  11 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        12 ,       $B_IMS_SUN                    ) = 12                      ! Node ID
body.sb.node.pos (        1 ,  12 , $B_IMS_SUN                    ) = 1.14999999999999991E+00 ! Node Position
body.sb.node.pos (        2 ,  12 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  12 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        13 ,       $B_IMS_SUN                    ) = 13                      ! Node ID
body.sb.node.pos (        1 ,  13 , $B_IMS_SUN                    ) = 1.21999999999999997E+00 ! Node Position
body.sb.node.pos (        2 ,  13 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  13 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.ele.from (        1 ,       $B_IMS_SUN                    ) = 1                       ! From Node
body.sb.ele.to (          1 ,       $B_IMS_SUN                    ) = 2                       ! To Node
body.sb.ele.type (        1 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   1 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_01         ! Cross Section
body.sb.ele.xsec (        2 ,   1 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   1 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   1 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   1 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   1 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   1 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      1 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        2 ,       $B_IMS_SUN                    ) = 2                       ! From Node
body.sb.ele.to (          2 ,       $B_IMS_SUN                    ) = 3                       ! To Node
body.sb.ele.type (        2 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   2 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_02         ! Cross Section
body.sb.ele.xsec (        2 ,   2 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   2 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   2 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      2 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        3 ,       $B_IMS_SUN                    ) = 3                       ! From Node
body.sb.ele.to (          3 ,       $B_IMS_SUN                    ) = 4                       ! To Node
body.sb.ele.type (        3 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   3 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_03         ! Cross Section
body.sb.ele.xsec (        2 ,   3 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   3 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   3 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   3 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   3 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   3 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      3 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        4 ,       $B_IMS_SUN                    ) = 4                       ! From Node
body.sb.ele.to (          4 ,       $B_IMS_SUN                    ) = 5                       ! To Node
body.sb.ele.type (        4 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   4 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_04         ! Cross Section
body.sb.ele.xsec (        2 ,   4 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   4 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   4 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   4 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   4 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   4 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      4 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        5 ,       $B_IMS_SUN                    ) = 5                       ! From Node
body.sb.ele.to (          5 ,       $B_IMS_SUN                    ) = 6                       ! To Node
body.sb.ele.type (        5 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   5 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_05         ! Cross Section
body.sb.ele.xsec (        2 ,   5 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   5 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   5 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   5 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   5 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   5 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      5 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        6 ,       $B_IMS_SUN                    ) = 6                       ! From Node
body.sb.ele.to (          6 ,       $B_IMS_SUN                    ) = 7                       ! To Node
body.sb.ele.type (        6 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   6 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_06         ! Cross Section
body.sb.ele.xsec (        2 ,   6 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   6 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   6 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   6 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   6 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   6 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      6 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        7 ,       $B_IMS_SUN                    ) = 7                       ! From Node
body.sb.ele.to (          7 ,       $B_IMS_SUN                    ) = 8                       ! To Node
body.sb.ele.type (        7 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   7 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_07         ! Cross Section
body.sb.ele.xsec (        2 ,   7 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   7 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   7 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   7 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   7 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   7 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      7 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        8 ,       $B_IMS_SUN                    ) = 8                       ! From Node
body.sb.ele.to (          8 ,       $B_IMS_SUN                    ) = 9                       ! To Node
body.sb.ele.type (        8 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   8 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_08         ! Cross Section
body.sb.ele.xsec (        2 ,   8 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   8 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   8 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   8 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   8 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   8 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      8 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (        9 ,       $B_IMS_SUN                    ) = 9                       ! From Node
body.sb.ele.to (          9 ,       $B_IMS_SUN                    ) = 10                      ! To Node
body.sb.ele.type (        9 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   9 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_09         ! Cross Section
body.sb.ele.xsec (        2 ,   9 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   9 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   9 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   9 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   9 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   9 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      9 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (       10 ,       $B_IMS_SUN                    ) = 10                      ! From Node
body.sb.ele.to (         10 ,       $B_IMS_SUN                    ) = 11                      ! To Node
body.sb.ele.type (       10 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  10 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_10         ! Cross Section
body.sb.ele.xsec (        2 ,  10 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  10 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  10 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  10 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  10 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  10 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     10 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (       11 ,       $B_IMS_SUN                    ) = 11                      ! From Node
body.sb.ele.to (         11 ,       $B_IMS_SUN                    ) = 12                      ! To Node
body.sb.ele.type (       11 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  11 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_11         ! Cross Section
body.sb.ele.xsec (        2 ,  11 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  11 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  11 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  11 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  11 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  11 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     11 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.sb.ele.from (       12 ,       $B_IMS_SUN                    ) = 12                      ! From Node
body.sb.ele.to (         12 ,       $B_IMS_SUN                    ) = 13                      ! To Node
body.sb.ele.type (       12 ,       $B_IMS_SUN                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  12 , $B_IMS_SUN                    ) = $XSc_IMS_SUN_12         ! Cross Section
body.sb.ele.xsec (        2 ,  12 , $B_IMS_SUN                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  12 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  12 , $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  12 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  12 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  12 , $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     12 ,       $B_IMS_SUN                    ) = 1                       ! Active
body.m (                            $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_M ! Mass of the Body
body.mp (                           $B_IMS_SUN                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_IZZ ! Moments of inertia
body.I.kind (                       $B_IMS_SUN                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_IMS_SUN                    ) = 1.62995533449016161E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_IMS_SUN                    ) = 3.81984382241376715E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_IMS_SUN                    ) = -9.52373478447699970E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_IMS_SUN                    ) = 3.14151802983803574E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_IMS_SUN                    ) = 4.85040663954114729E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_IMS_SUN                    ) = 8.90104591922443096E-04 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         7 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         8 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         9 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        10 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        11 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        12 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        13 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        14 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        15 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        16 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        17 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        18 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        19 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        20 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        21 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        22 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        23 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        24 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        25 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         7 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         8 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         9 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        10 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        11 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        12 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        13 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        14 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        15 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        16 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        17 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        18 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        19 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        20 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        21 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        22 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        23 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        24 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        25 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         7 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         8 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (         9 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (        10 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (        11 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (        12 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (        13 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (        14 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.dep (        15 ,       $B_IMS_SUN                    ) = 0                       ! State dependency
body.flx.st.scal.stiff (   1 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   2 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   3 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   4 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   5 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   6 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   7 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   8 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   9 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  10 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  11 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  12 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  13 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  14 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  15 ,      $B_IMS_SUN                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.prestress (   1 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   7 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   8 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   9 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  10 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  11 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  12 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  13 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  14 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  15 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  16 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  17 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  18 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  19 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  20 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  21 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  22 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  23 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  24 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  25 ,       $B_IMS_SUN                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_IMS_SUN                    ) = 1                       ! Damping mode
body.flx.massprops (                $B_IMS_SUN                    ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_IMS_SUN                    ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_IMS_SUN                    ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_IMS_SUN                    ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_IMS_SUN                    ) = $I_IMS_SUN_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      7 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      8 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      9 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     10 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     11 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     12 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     13 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     14 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     15 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     16 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     17 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     18 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     19 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     20 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     21 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     22 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     23 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     24 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     25 ,       $B_IMS_SUN                    ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_IMS_SUN                    ) = $M_IMS_SUN_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_IMS_SUN                    ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_IMS_SUN                    ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_IMS_SUN                    ) = ''                      ! additional command line options for the abaqus run
body.flx.cosim.job.solver (         $B_IMS_SUN                    ) = 0                       ! 0=Abaqus/Explicit; 1=Abaqus/Standard
body.flx.defhandling (              $B_IMS_SUN                    ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_IMS_SUN                    ) = -6.90000000000000000E+02
body.attr.2d.pos.y (                $B_IMS_SUN                    ) = 4.00000000000000000E+01
body.attr.2d.width (                $B_IMS_SUN                    ) = 3.90000000000000000E+02
body.attr.2d.height (               $B_IMS_SUN                    ) = 5.00000000000000000E+01

marker.type (                       $M_IMS_SUN_FE_reference       ) = 2                       ! Type
marker.parent (                     $M_IMS_SUN_FE_reference       ) = $B_IMS_SUN              ! Body
marker.pos (              1 ,       $M_IMS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_IMS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_IMS_SUN_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_IMS_SUN_FE_reference       ) = 4                       ! Flexible type

marker.type (                       $M_IMS_SUN_BRF                ) = 1                       ! Type
marker.parent (                     $M_IMS_SUN_BRF                ) = $B_IMS_SUN              ! Body
marker.flx.type (                   $M_IMS_SUN_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_IMS_SUN_GW                 ) = 2                       ! Type
marker.parent (                     $M_IMS_SUN_GW                 ) = $B_IMS_SUN              ! Body
marker.pos (              1 ,       $M_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! Position
marker.ang (              2 ,       $M_IMS_SUN_GW                 ) = { 90deg }               ! Angles
marker.flx.type (                   $M_IMS_SUN_GW                 ) = 0                       ! Flexible type
marker.flx.node (         1 ,       $M_IMS_SUN_GW                 ) = 2                       ! Referenced flexible nodes

marker.type (                       $M_IMS_SUN_HSS_BGR            ) = 2                       ! Type
marker.parent (                     $M_IMS_SUN_HSS_BGR            ) = $B_IMS_SUN              ! Body
marker.pos (              1 ,       $M_IMS_SUN_HSS_BGR            ) = $G_KP.$G_IMS.$G_SUN.$_HSS_BGR_X ! Position
marker.pos (              2 ,       $M_IMS_SUN_HSS_BGR            ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_IMS_SUN_HSS_BGR            ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_IMS_SUN_HSS_BGR            ) = 0                       ! Flexible type
marker.flx.node (         1 ,       $M_IMS_SUN_HSS_BGR            ) = 10                      ! Referenced flexible nodes

prim.type (                         $P_IMS_SUN_Flex               ) = 28                      ! Type
prim.ref (                          $P_IMS_SUN_Flex               ) = $M_IMS_SUN_BRF          ! Reference Marker
prim.color.r (            1 ,       $P_IMS_SUN_Flex               ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_SUN_Flex               ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_SUN_Flex               ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_SUN_Flex               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_IMS_SUN_Flex               ) = 1                       ! Draw style
prim.transparency (                 $P_IMS_SUN_Flex               ) = $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_IMS_SUN_Flex               ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_IMS_SUN_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_IMS_SUN_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor
prim.par (               11 ,       $P_IMS_SUN_Flex               ) = 0.00000000000000000E+00 ! [-] Interpolation type
prim.par (               12 ,       $P_IMS_SUN_Flex               ) = 0.00000000000000000E+00 ! [-] Num. master nodes for interpol
prim.par (               21 ,       $P_IMS_SUN_Flex               ) = 0.00000000000000000E+00 ! [-] Graphics mode

prim.type (                         $P_IMS_SUN_GW                 ) = 25                      ! Type
prim.ref (                          $P_IMS_SUN_GW                 ) = $M_IMS_SUN_GW           ! Reference Marker
prim.color.r (            1 ,       $P_IMS_SUN_GW                 ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_SUN_GW                 ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_SUN_GW                 ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_SUN_GW                 ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_SUN_GW                 ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_SUN_GW                 ) = $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,   1 , $P_IMS_SUN_GW                 ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_IMS_SUN_GW           ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_IMS_SUN_GW           ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_IMS_SUN_GW           ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_IMS_SUN_GW           ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_IMS_SUN_GW           ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_IMS_SUN_GW     ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_IMS_SUN_GW     ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_IMS_SUN_GW     ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_IMS_SUN_GW     ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_IMS_SUN_GW     ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_IMS_SUN_GW           ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_IMS_SUN_GW           ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_IMS_SUN_GW           ) = 0.00000000000000000E+00 ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_IMS_SUN_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_IMS_SUN_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_IMS_SUN_GW                 ) = $G_PA.$G_GER.$G_IMS.$G_SUN.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_IMS_SUN_GW                 ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_IMS_SUN_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_IMS_SUN_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_IMS_SUN_GW           ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_IMS_SUN_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_IMS_SUN_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_IMS_SUN_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_IMS_SUN_GW           ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_IMS_SUN_GW           ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_IMS_SUN_GW           ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_IMS_SUN_GW                 ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_IMS_SUN_GW                 ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_IMS_SUN_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_IMS_SUN_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_IMS_SUN_GW           ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_IMS_SUN_GW     ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_IMS_SUN_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_IMS_SUN_SH                 ) = 7                       ! Type
prim.ref (                          $P_IMS_SUN_SH                 ) = $M_IMS_SUN_BRF          ! Reference Marker
prim.vtx (                1 ,   1 , $P_IMS_SUN_SH                 ) = -2.04999999999999988E-01 ! Vertices
prim.vtx (                1 ,   2 , $P_IMS_SUN_SH                 ) = -2.04999999999999988E-01 ! Vertices
prim.vtx (                1 ,   3 , $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   4 , $P_IMS_SUN_SH                 ) = 2.04999999999999988E-01 ! Vertices
prim.vtx (                1 ,   5 , $P_IMS_SUN_SH                 ) = 2.44999999999999996E-01 ! Vertices
prim.vtx (                1 ,   6 , $P_IMS_SUN_SH                 ) = 3.55999999999999983E-01 ! Vertices
prim.vtx (                1 ,   7 , $P_IMS_SUN_SH                 ) = 4.67000000000000026E-01 ! Vertices
prim.vtx (                1 ,   8 , $P_IMS_SUN_SH                 ) = 5.77999999999999958E-01 ! Vertices
prim.vtx (                1 ,   9 , $P_IMS_SUN_SH                 ) = 6.88999999999999946E-01 ! Vertices
prim.vtx (                1 ,  10 , $P_IMS_SUN_SH                 ) = 8.00000000000000044E-01 ! Vertices
prim.vtx (                1 ,  11 , $P_IMS_SUN_SH                 ) = 9.39999999999999947E-01 ! Vertices
prim.vtx (                1 ,  12 , $P_IMS_SUN_SH                 ) = 1.08000000000000007E+00 ! Vertices
prim.vtx (                1 ,  13 , $P_IMS_SUN_SH                 ) = 1.08000000000000007E+00 ! Vertices
prim.vtx (                1 ,  14 , $P_IMS_SUN_SH                 ) = 1.14999999999999991E+00 ! Vertices
prim.vtx (                1 ,  15 , $P_IMS_SUN_SH                 ) = 1.21999999999999997E+00 ! Vertices
prim.vtx (                1 ,  16 , $P_IMS_SUN_SH                 ) = 1.21999999999999997E+00 ! Vertices
prim.vtx (                2 ,   1 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_I * 0.5
 } ! Vertices
prim.vtx (                2 ,   2 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   3 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   4 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_2 * 0.5 } ! Vertices
prim.vtx (                2 ,   5 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,   6 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,   7 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,   8 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,   9 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  10 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_4 * 0.5 } ! Vertices
prim.vtx (                2 ,  11 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_4 * 0.5 } ! Vertices
prim.vtx (                2 ,  12 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_4 * 0.5 } ! Vertices
prim.vtx (                2 ,  13 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  14 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  15 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  16 , $P_IMS_SUN_SH                 ) = { $G_3D.$G_IMS.$G_SUN.$G_SH.$_D_I * 0.5 } ! Vertices
prim.color.r (            1 ,       $P_IMS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_IMS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_IMS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_IMS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_IMS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_IMS_SUN_SH                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_IMS_SUN_SH                 ) = $G_3D.$G_IMS.$G_SUN.$_TRANSPARENCY_RIGID ! Transparency
prim.par (                2 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Contour by
prim.par (                6 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Curve fitting type
prim.par (               11 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               12 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               13 ,       $P_IMS_SUN_SH                 ) = 1.20000000000000000E+01 ! [-] Number of planes
prim.par (               14 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (               15 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show bottom cap
prim.par (               16 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show top cap
prim.par (               17 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show start cross section Cap
prim.par (               18 ,       $P_IMS_SUN_SH                 ) = 0.00000000000000000E+00 ! [-] Show end cross Section Cap
prim.plot.par (           1 ,       $P_IMS_SUN_SH                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_IMS_SUN_SH                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_IMS_SUN_SH     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter


body.m (                            $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_M ! Mass of the Body
body.mp (                           $B_HSS_BGR                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_HSS_BGR                    ) = $G_BP.$G_HSS.$G_BGR.$_IZZ ! Moments of inertia
body.I.kind (                       $B_HSS_BGR                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.brf.st.pos (         1 ,       $B_HSS_BGR                    ) = 2.56994390473884105E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_HSS_BGR                    ) = 6.02448059577679728E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_HSS_BGR                    ) = -1.36007106401337032E-02 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_HSS_BGR                    ) = 3.14151802796008184E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_HSS_BGR                    ) = 4.85070513847873138E-03 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_HSS_BGR                    ) = 8.90007361271404778E-04 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_HSS_BGR                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_HSS_BGR                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_HSS_BGR                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_HSS_BGR                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_HSS_BGR                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_HSS_BGR                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.cosim.job.type (           $B_HSS_BGR                    ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_HSS_BGR                    ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_HSS_BGR                    ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_HSS_BGR                    ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_HSS_BGR                    ) = -3.50000000000000000E+02
body.attr.2d.pos.y (                $B_HSS_BGR                    ) = 5.00000000000000000E+02
body.attr.2d.width (                $B_HSS_BGR                    ) = 2.00000000000000000E+02
body.attr.2d.height (               $B_HSS_BGR                    ) = 4.00000000000000000E+01

marker.type (                       $M_HSS_BGR_BRF                ) = 1                       ! Type
marker.parent (                     $M_HSS_BGR_BRF                ) = $B_HSS_BGR              ! Body
marker.flx.type (                   $M_HSS_BGR_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_HSS_BGR_JNT                ) = 2                       ! Type
marker.parent (                     $M_HSS_BGR_JNT                ) = $B_HSS_BGR              ! Body

marker.type (                       $M_HSS_BGR_GW                 ) = 2                       ! Type
marker.parent (                     $M_HSS_BGR_GW                 ) = $B_HSS_BGR              ! Body
marker.ang (              2 ,       $M_HSS_BGR_GW                 ) = { 90deg }               ! Angles

marker.type (                       $M_HSS_BGR_BR1                ) = 2                       ! Type
marker.parent (                     $M_HSS_BGR_BR1                ) = $B_HSS_BGR              ! Body
marker.pos (              1 ,       $M_HSS_BGR_BR1                ) = $G_KP.$G_HSS.$G_BGR.$_BR1_X ! Position

marker.type (                       $M_HSS_BGR_BR2                ) = 2                       ! Type
marker.parent (                     $M_HSS_BGR_BR2                ) = $B_HSS_BGR              ! Body
marker.pos (              1 ,       $M_HSS_BGR_BR2                ) = $G_KP.$G_HSS.$G_BGR.$_BR2_X ! Position

marker.type (                       $M_HSS_BGR_IMS_SUN            ) = 2                       ! Type
marker.parent (                     $M_HSS_BGR_IMS_SUN            ) = $B_HSS_BGR              ! Body
marker.pos (              1 ,       $M_HSS_BGR_IMS_SUN            ) = $G_KP.$G_HSS.$G_BGR.$_IMS_SUN_X ! Position

marker.type (                       $M_HSS_BGR_CAD                ) = 2                       ! Type
marker.parent (                     $M_HSS_BGR_CAD                ) = $B_HSS_BGR              ! Body

prim.type (                         $P_HSS_BGR_GW                 ) = 25                      ! Type
prim.ref (                          $P_HSS_BGR_GW                 ) = $M_HSS_BGR_GW           ! Reference Marker
prim.color.r (            1 ,       $P_HSS_BGR_GW                 ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_BGR_GW                 ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_BGR_GW                 ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_BGR_GW                 ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_BGR_GW                 ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSS_BGR_GW                 ) = $G_3D.$G_HSS.$G_BGR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,   1 , $P_HSS_BGR_GW                 ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_HSS_BGR_GW           ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_HSS_BGR_GW           ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_HSS_BGR_GW           ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_HSS_BGR_GW           ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_HSS_BGR_GW           ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_HSS_BGR_GW     ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_HSS_BGR_GW     ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_HSS_BGR_GW     ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_HSS_BGR_GW     ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_HSS_BGR_GW     ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_HSS_BGR_GW           ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_HSS_BGR_GW           ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_HSS_BGR_GW           ) = 0.00000000000000000E+00 ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_HSS_BGR_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_HSS_BGR_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_HSS_BGR_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_BGR.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_HSS_BGR_GW                 ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_HSS_BGR_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_HSS_BGR_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_HSS_BGR_GW           ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_HSS_BGR_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_HSS_BGR_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_HSS_BGR_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_HSS_BGR_GW           ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_HSS_BGR_GW           ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_HSS_BGR_GW           ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_HSS_BGR_GW                 ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_HSS_BGR_GW                 ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_HSS_BGR_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_HSS_BGR_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_HSS_BGR_GW           ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_HSS_BGR_GW     ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_HSS_BGR_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_HSS_BGR_BR1                ) = 2                       ! Type
prim.ref (                          $P_HSS_BGR_BR1                ) = $M_HSS_BGR_BR1          ! Reference Marker
prim.ang (                3 ,       $P_HSS_BGR_BR1                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSS_BGR_BR1                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_BGR_BR1                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_BGR_BR1                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_BGR_BR1                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSS_BGR_BR1                ) = 1                       ! Draw style
prim.transparency (                 $P_HSS_BGR_BR1                ) = $G_3D.$G_HSS.$G_BGR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_HSS_BGR_BR1                ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_HSS_BGR_BR1                ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSS_BGR_BR1                ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSS_BGR_BR1                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSS_BGR_BR1                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSS_BGR_BR1                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSS_BGR_BR2                ) = 2                       ! Type
prim.ref (                          $P_HSS_BGR_BR2                ) = $M_HSS_BGR_BR2          ! Reference Marker
prim.ang (                3 ,       $P_HSS_BGR_BR2                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSS_BGR_BR2                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_BGR_BR2                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_BGR_BR2                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_BGR_BR2                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSS_BGR_BR2                ) = 1                       ! Draw style
prim.transparency (                 $P_HSS_BGR_BR2                ) = $G_3D.$G_HSS.$G_BGR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_HSS_BGR_BR2                ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_HSS_BGR_BR2                ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSS_BGR_BR2                ) = $G_3D.$G_HSS.$G_BGR.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSS_BGR_BR2                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSS_BGR_BR2                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSS_BGR_BR2                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSS_BGR_CAD                ) = 39                      ! Type
prim.ref (                          $P_HSS_BGR_CAD                ) = $M_HSS_BGR_BRF          ! Reference Marker
prim.ang (                2 ,       $P_HSS_BGR_CAD                ) = { -90deg }              ! Angles
prim.color.r (            1 ,       $P_HSS_BGR_CAD                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_BGR_CAD                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_BGR_CAD                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSS_BGR_CAD                ) = $G_3D.$G_HSS.$G_BGR.$_TRANSPARENCY ! Transparency
prim.par (                2 ,       $P_HSS_BGR_CAD                ) = '32_GBX-BGR_SH.obj'     ! [-] CAD file name
prim.par (                3 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Data display flag
prim.par (                4 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Line display flag
prim.par (                5 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Faceted line diam.(CAD units)
prim.par (                9 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_HSS_BGR_CAD                ) = 0.00000000000000000E+00 ! [-] Repeat shape


body.sb.node.id (         1 ,       $B_HSS_HSH                    ) = 1                       ! Node ID
body.sb.node.pos (        1 ,   1 , $B_HSS_HSH                    ) = -4.05000000000000027E-01 ! Node Position
body.sb.node.pos (        2 ,   1 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   1 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         2 ,       $B_HSS_HSH                    ) = 2                       ! Node ID
body.sb.node.pos (        1 ,   2 , $B_HSS_HSH                    ) = -3.90000000000000013E-01 ! Node Position
body.sb.node.pos (        2 ,   2 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   2 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         3 ,       $B_HSS_HSH                    ) = 3                       ! Node ID
body.sb.node.pos (        1 ,   3 , $B_HSS_HSH                    ) = -2.86999999999999977E-01 ! Node Position
body.sb.node.pos (        2 ,   3 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   3 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         4 ,       $B_HSS_HSH                    ) = 4                       ! Node ID
body.sb.node.pos (        1 ,   4 , $B_HSS_HSH                    ) = -1.83999999999999997E-01 ! Node Position
body.sb.node.pos (        2 ,   4 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   4 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         5 ,       $B_HSS_HSH                    ) = 5                       ! Node ID
body.sb.node.pos (        1 ,   5 , $B_HSS_HSH                    ) = -1.49999999999999994E-01 ! Node Position
body.sb.node.pos (        2 ,   5 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   5 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         6 ,       $B_HSS_HSH                    ) = 6                       ! Node ID
body.sb.node.pos (        1 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        2 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         7 ,       $B_HSS_HSH                    ) = 7                       ! Node ID
body.sb.node.pos (        1 ,   7 , $B_HSS_HSH                    ) = 1.49999999999999994E-01 ! Node Position
body.sb.node.pos (        2 ,   7 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   7 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         8 ,       $B_HSS_HSH                    ) = 8                       ! Node ID
body.sb.node.pos (        1 ,   8 , $B_HSS_HSH                    ) = 1.70000000000000012E-01 ! Node Position
body.sb.node.pos (        2 ,   8 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   8 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (         9 ,       $B_HSS_HSH                    ) = 9                       ! Node ID
body.sb.node.pos (        1 ,   9 , $B_HSS_HSH                    ) = 2.84999999999999976E-01 ! Node Position
body.sb.node.pos (        2 ,   9 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,   9 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        10 ,       $B_HSS_HSH                    ) = 10                      ! Node ID
body.sb.node.pos (        1 ,  10 , $B_HSS_HSH                    ) = 4.00000000000000022E-01 ! Node Position
body.sb.node.pos (        2 ,  10 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  10 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        11 ,       $B_HSS_HSH                    ) = 11                      ! Node ID
body.sb.node.pos (        1 ,  11 , $B_HSS_HSH                    ) = 4.40000000000000002E-01 ! Node Position
body.sb.node.pos (        2 ,  11 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  11 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        12 ,       $B_HSS_HSH                    ) = 12                      ! Node ID
body.sb.node.pos (        1 ,  12 , $B_HSS_HSH                    ) = 4.65000000000000024E-01 ! Node Position
body.sb.node.pos (        2 ,  12 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  12 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        13 ,       $B_HSS_HSH                    ) = 13                      ! Node ID
body.sb.node.pos (        1 ,  13 , $B_HSS_HSH                    ) = 4.89999999999999991E-01 ! Node Position
body.sb.node.pos (        2 ,  13 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  13 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        14 ,       $B_HSS_HSH                    ) = 14                      ! Node ID
body.sb.node.pos (        1 ,  14 , $B_HSS_HSH                    ) = 5.00000000000000000E-01 ! Node Position
body.sb.node.pos (        2 ,  14 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  14 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        15 ,       $B_HSS_HSH                    ) = 15                      ! Node ID
body.sb.node.pos (        1 ,  15 , $B_HSS_HSH                    ) = 6.40000000000000013E-01 ! Node Position
body.sb.node.pos (        2 ,  15 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  15 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        16 ,       $B_HSS_HSH                    ) = 16                      ! Node ID
body.sb.node.pos (        1 ,  16 , $B_HSS_HSH                    ) = 7.80000000000000027E-01 ! Node Position
body.sb.node.pos (        2 ,  16 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  16 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.id (        17 ,       $B_HSS_HSH                    ) = 17                      ! Node ID
body.sb.node.pos (        1 ,  17 , $B_HSS_HSH                    ) = 7.90000000000000036E-01 ! Node Position
body.sb.node.pos (        2 ,  17 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.node.pos (        3 ,  17 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Node Position
body.sb.ele.from (        1 ,       $B_HSS_HSH                    ) = 1                       ! From Node
body.sb.ele.to (          1 ,       $B_HSS_HSH                    ) = 2                       ! To Node
body.sb.ele.type (        1 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   1 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_01         ! Cross Section
body.sb.ele.xsec (        2 ,   1 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   1 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   1 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   1 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   1 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   1 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      1 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        2 ,       $B_HSS_HSH                    ) = 2                       ! From Node
body.sb.ele.to (          2 ,       $B_HSS_HSH                    ) = 3                       ! To Node
body.sb.ele.type (        2 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   2 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_02         ! Cross Section
body.sb.ele.xsec (        2 ,   2 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   2 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   2 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   2 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   2 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   2 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      2 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        3 ,       $B_HSS_HSH                    ) = 3                       ! From Node
body.sb.ele.to (          3 ,       $B_HSS_HSH                    ) = 4                       ! To Node
body.sb.ele.type (        3 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   3 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_03         ! Cross Section
body.sb.ele.xsec (        2 ,   3 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   3 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   3 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   3 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   3 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   3 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      3 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        4 ,       $B_HSS_HSH                    ) = 4                       ! From Node
body.sb.ele.to (          4 ,       $B_HSS_HSH                    ) = 5                       ! To Node
body.sb.ele.type (        4 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   4 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_04         ! Cross Section
body.sb.ele.xsec (        2 ,   4 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   4 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   4 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   4 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   4 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   4 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      4 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        5 ,       $B_HSS_HSH                    ) = 5                       ! From Node
body.sb.ele.to (          5 ,       $B_HSS_HSH                    ) = 6                       ! To Node
body.sb.ele.type (        5 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   5 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_05         ! Cross Section
body.sb.ele.xsec (        2 ,   5 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   5 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   5 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   5 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   5 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   5 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      5 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        6 ,       $B_HSS_HSH                    ) = 6                       ! From Node
body.sb.ele.to (          6 ,       $B_HSS_HSH                    ) = 7                       ! To Node
body.sb.ele.type (        6 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   6 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_06         ! Cross Section
body.sb.ele.xsec (        2 ,   6 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   6 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   6 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      6 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        7 ,       $B_HSS_HSH                    ) = 7                       ! From Node
body.sb.ele.to (          7 ,       $B_HSS_HSH                    ) = 8                       ! To Node
body.sb.ele.type (        7 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   7 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_07         ! Cross Section
body.sb.ele.xsec (        2 ,   7 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   7 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   7 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   7 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   7 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   7 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      7 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        8 ,       $B_HSS_HSH                    ) = 8                       ! From Node
body.sb.ele.to (          8 ,       $B_HSS_HSH                    ) = 9                       ! To Node
body.sb.ele.type (        8 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   8 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_08         ! Cross Section
body.sb.ele.xsec (        2 ,   8 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   8 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   8 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   8 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   8 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   8 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      8 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (        9 ,       $B_HSS_HSH                    ) = 9                       ! From Node
body.sb.ele.to (          9 ,       $B_HSS_HSH                    ) = 10                      ! To Node
body.sb.ele.type (        9 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,   9 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_09         ! Cross Section
body.sb.ele.xsec (        2 ,   9 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,   9 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,   9 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,   9 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,   9 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,   9 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (      9 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       10 ,       $B_HSS_HSH                    ) = 10                      ! From Node
body.sb.ele.to (         10 ,       $B_HSS_HSH                    ) = 11                      ! To Node
body.sb.ele.type (       10 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  10 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_10         ! Cross Section
body.sb.ele.xsec (        2 ,  10 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  10 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  10 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  10 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  10 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  10 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     10 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       11 ,       $B_HSS_HSH                    ) = 11                      ! From Node
body.sb.ele.to (         11 ,       $B_HSS_HSH                    ) = 12                      ! To Node
body.sb.ele.type (       11 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  11 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_11         ! Cross Section
body.sb.ele.xsec (        2 ,  11 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  11 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  11 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  11 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  11 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  11 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     11 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       12 ,       $B_HSS_HSH                    ) = 12                      ! From Node
body.sb.ele.to (         12 ,       $B_HSS_HSH                    ) = 13                      ! To Node
body.sb.ele.type (       12 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  12 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_12         ! Cross Section
body.sb.ele.xsec (        2 ,  12 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  12 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  12 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  12 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  12 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  12 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     12 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       13 ,       $B_HSS_HSH                    ) = 13                      ! From Node
body.sb.ele.to (         13 ,       $B_HSS_HSH                    ) = 14                      ! To Node
body.sb.ele.type (       13 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  13 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_13         ! Cross Section
body.sb.ele.xsec (        2 ,  13 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  13 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  13 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  13 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  13 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  13 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     13 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       14 ,       $B_HSS_HSH                    ) = 14                      ! From Node
body.sb.ele.to (         14 ,       $B_HSS_HSH                    ) = 15                      ! To Node
body.sb.ele.type (       14 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  14 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_14         ! Cross Section
body.sb.ele.xsec (        2 ,  14 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  14 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  14 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  14 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  14 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  14 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     14 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       15 ,       $B_HSS_HSH                    ) = 15                      ! From Node
body.sb.ele.to (         15 ,       $B_HSS_HSH                    ) = 16                      ! To Node
body.sb.ele.type (       15 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  15 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_15         ! Cross Section
body.sb.ele.xsec (        2 ,  15 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  15 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  15 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  15 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  15 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  15 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     15 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.sb.ele.from (       16 ,       $B_HSS_HSH                    ) = 16                      ! From Node
body.sb.ele.to (         16 ,       $B_HSS_HSH                    ) = 17                      ! To Node
body.sb.ele.type (       16 ,       $B_HSS_HSH                    ) = 4                       ! Type
body.sb.ele.xsec (        1 ,  16 , $B_HSS_HSH                    ) = $XSc_HSS_HSH_16         ! Cross Section
body.sb.ele.xsec (        2 ,  16 , $B_HSS_HSH                    ) = null                    ! Cross Section
body.sb.ele.ori.vec (     1 ,  16 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     2 ,  16 , $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Orientation Vector
body.sb.ele.ori.vec (     3 ,  16 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Orientation Vector
body.sb.ele.dmp.par (     1 ,  16 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.dmp.par (     2 ,  16 , $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Damping
body.sb.ele.active (     16 ,       $B_HSS_HSH                    ) = 1                       ! Active
body.m (                            $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_M ! Mass of the Body
body.mp (                           $B_HSS_HSH                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_CM_X ! Center of gravity
body.cg.pos (             2 ,       $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_CM_Y ! Center of gravity
body.cg.pos (             3 ,       $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_CM_Z ! Center of gravity
body.I.tens (             1 ,   1 , $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_IXX ! Moments of inertia
body.I.tens (             2 ,   2 , $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_IYY ! Moments of inertia
body.I.tens (             3 ,   3 , $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_IZZ ! Moments of inertia
body.I.kind (                       $B_HSS_HSH                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.type (                         $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.brf.st.pos (         1 ,       $B_HSS_HSH                    ) = 2.57038844167681990E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         2 ,       $B_HSS_HSH                    ) = 5.56252926776809709E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         3 ,       $B_HSS_HSH                    ) = 3.85961705565933677E-01 ! Position x/y/z/al/be/ga
body.brf.st.pos (         4 ,       $B_HSS_HSH                    ) = -1.14089868296047636E+00 ! Position x/y/z/al/be/ga
body.brf.st.pos (         5 ,       $B_HSS_HSH                    ) = -3.21981438370057803E-04 ! Position x/y/z/al/be/ga
body.brf.st.pos (         6 ,       $B_HSS_HSH                    ) = 4.92512244133478348E-03 ! Position x/y/z/al/be/ga
body.brf.st.vel (         1 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         2 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         3 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         4 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         5 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.brf.st.vel (         6 ,       $B_HSS_HSH                    ) = -0.00000000000000000E+00 ! Velocity x/y/z/al/be/ga
body.flx.file (                     $B_HSS_HSH                    ) = '032_GBX_MSH.fbi'       ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         7 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         8 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         9 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        10 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        11 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        12 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        13 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        14 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        15 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        16 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        17 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        18 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        19 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        20 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        21 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        22 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        23 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (        24 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         7 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         8 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         9 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        10 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        11 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        12 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        13 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        14 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        15 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        16 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        17 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        18 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        19 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        20 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        21 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        22 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        23 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (        24 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         7 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         8 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (         9 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (        10 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (        11 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.dep (        12 ,       $B_HSS_HSH                    ) = 0                       ! State dependency
body.flx.st.scal.stiff (   1 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   2 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   3 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   4 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   5 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   6 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   7 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   8 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   9 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  10 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  11 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (  12 ,      $B_HSS_HSH                    ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.prestress (   1 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   7 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   8 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   9 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  10 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  11 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  12 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  13 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  14 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  15 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  16 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  17 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  18 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  19 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  20 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  21 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  22 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  23 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (  24 ,       $B_HSS_HSH                    ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_HSS_HSH                    ) = 1                       ! Damping mode
body.flx.massprops (                $B_HSS_HSH                    ) = 1                       ! Mass properties on deformation: 0=constant; 1=dependent (default); 2=constant manual
body.flx.massmat (                  $B_HSS_HSH                    ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency value
body.flx.freq.cut.kind (            $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_HSS_HSH                    ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_HSS_HSH                    ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_HSS_HSH                    ) = $I_HSS_HSH_modal_damping ! Input Function
body.flx.st.active (      1 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      7 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      8 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      9 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     10 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     11 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     12 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     13 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     14 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     15 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     16 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     17 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     18 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     19 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     20 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     21 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     22 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     23 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (     24 ,       $B_HSS_HSH                    ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_HSS_HSH                    ) = $M_HSS_HSH_FE_reference ! Reference marker for FE model
body.flx.cosim.job.type (           $B_HSS_HSH                    ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_HSS_HSH                    ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_HSS_HSH                    ) = ''                      ! additional command line options for the abaqus run
body.flx.cosim.job.solver (         $B_HSS_HSH                    ) = 0                       ! 0=Abaqus/Explicit; 1=Abaqus/Standard
body.flx.defhandling (              $B_HSS_HSH                    ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_HSS_HSH                    ) = -1.90000000000000000E+02
body.attr.2d.pos.y (                $B_HSS_HSH                    ) = 3.90000000000000000E+02
body.attr.2d.width (                $B_HSS_HSH                    ) = 1.90000000000000000E+02
body.attr.2d.height (               $B_HSS_HSH                    ) = 4.00000000000000000E+01

marker.type (                       $M_HSS_HSH_FE_reference       ) = 2                       ! Type
marker.parent (                     $M_HSS_HSH_FE_reference       ) = $B_HSS_HSH              ! Body
marker.pos (              1 ,       $M_HSS_HSH_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_HSS_HSH_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_HSS_HSH_FE_reference       ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_HSS_HSH_FE_reference       ) = 4                       ! Flexible type

marker.type (                       $M_HSS_HSH_BRF                ) = 1                       ! Type
marker.parent (                     $M_HSS_HSH_BRF                ) = $B_HSS_HSH              ! Body
marker.flx.type (                   $M_HSS_HSH_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_HSS_HSH_JNT                ) = 2                       ! Type
marker.parent (                     $M_HSS_HSH_JNT                ) = $B_HSS_HSH              ! Body

marker.type (                       $M_HSS_HSH_GW                 ) = 2                       ! Type
marker.parent (                     $M_HSS_HSH_GW                 ) = $B_HSS_HSH              ! Body
marker.ang (              2 ,       $M_HSS_HSH_GW                 ) = { 90deg }               ! Angles

marker.type (                       $M_HSS_HSH_BR1                ) = 2                       ! Type
marker.parent (                     $M_HSS_HSH_BR1                ) = $B_HSS_HSH              ! Body
marker.pos (              1 ,       $M_HSS_HSH_BR1                ) = $G_KP.$G_HSS.$G_HSH.$_BR1_X ! Position
marker.pos (              2 ,       $M_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_HSS_HSH_BR1                ) = 0                       ! Flexible type
marker.flx.node (         1 ,       $M_HSS_HSH_BR1                ) = 3                       ! Referenced flexible nodes

marker.type (                       $M_HSS_HSH_BR2                ) = 2                       ! Type
marker.parent (                     $M_HSS_HSH_BR2                ) = $B_HSS_HSH              ! Body
marker.pos (              1 ,       $M_HSS_HSH_BR2                ) = $G_KP.$G_HSS.$G_HSH.$_BR2_X ! Position
marker.pos (              2 ,       $M_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_HSS_HSH_BR2                ) = 0                       ! Flexible type
marker.flx.node (         1 ,       $M_HSS_HSH_BR2                ) = 9                       ! Referenced flexible nodes

marker.type (                       $M_HSS_HSH_INTERFACE_GBX_CPL  ) = 2                       ! Type
marker.parent (                     $M_HSS_HSH_INTERFACE_GBX_CPL  ) = $B_HSS_HSH              ! Body
marker.pos (              1 ,       $M_HSS_HSH_INTERFACE_GBX_CPL  ) = $G_KP.$G_HSS.$G_HSH.$_CPL_X ! Position
marker.pos (              2 ,       $M_HSS_HSH_INTERFACE_GBX_CPL  ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_HSS_HSH_INTERFACE_GBX_CPL  ) = 0.00000000000000000E+00 ! Position
marker.flx.type (                   $M_HSS_HSH_INTERFACE_GBX_CPL  ) = 0                       ! Flexible type
marker.flx.node (         1 ,       $M_HSS_HSH_INTERFACE_GBX_CPL  ) = 15                      ! Referenced flexible nodes

prim.type (                         $P_HSS_HSH_GW                 ) = 25                      ! Type
prim.ref (                          $P_HSS_HSH_GW                 ) = $M_HSS_HSH_GW           ! Reference Marker
prim.color.r (            1 ,       $P_HSS_HSH_GW                 ) = 2.29000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_HSH_GW                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_HSH_GW                 ) = 2.29000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_HSH_GW                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_HSH_GW                 ) = 2.29000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_HSH_GW                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_HSH_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_HSH_GW                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSS_HSH_GW                 ) = $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,   1 , $P_HSS_HSH_GW                 ) = 3.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   2 , $P_HSS_HSH_GW                 ) = 0.00000000000000000E+00 ! [rad] Initial gear angle
prim.par (                2 ,   3 ,   1 , $P_HSS_HSH_GW           ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_NM ! [m] Normal module
prim.par (                2 ,   3 ,   2 , $P_HSS_HSH_GW           ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_NPA ! [rad] Normal pressure angle
prim.par (                2 ,   3 ,   3 , $P_HSS_HSH_GW           ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_SF ! [-] Shift factor
prim.par (                2 ,   3 ,   4 , $P_HSS_HSH_GW           ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_HA ! [rad] Helix angle
prim.par (                2 ,   3 ,   5 , $P_HSS_HSH_GW           ) = 0.00000000000000000E+00 ! [rad] Bevel angle
prim.par (                2 ,   3 ,   6 ,   1 , $P_HSS_HSH_GW     ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_ADT ! [-] Type
prim.par (                2 ,   3 ,   6 ,   2 , $P_HSS_HSH_GW     ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_ADD ! [m] Addendum value
prim.par (                2 ,   3 ,   6 ,   3 , $P_HSS_HSH_GW     ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_DED ! [m] Dedendum value
prim.par (                2 ,   3 ,   7 ,   1 , $P_HSS_HSH_GW     ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_BLT ! [-] Type
prim.par (                2 ,   3 ,   7 ,   2 , $P_HSS_HSH_GW     ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_BL ! [m] Value
prim.par (                2 ,   3 ,   8 , $P_HSS_HSH_GW           ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_NT ! [-] Number of teeth
prim.par (                2 ,   3 ,   9 , $P_HSS_HSH_GW           ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_FW ! [m] Flank width
prim.par (                2 ,   3 ,  10 , $P_HSS_HSH_GW           ) = 0.00000000000000000E+00 ! [m] Flex Node reference diameter
prim.par (                2 ,   4 ,   1 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Method
prim.par (                2 ,   4 ,   1 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Manufacturing process
prim.par (                2 ,   4 ,   1 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Shaft angle
prim.par (                2 ,   4 ,   1 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Hypoid offset
prim.par (                2 ,   4 ,   1 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (pinion)
prim.par (                2 ,   4 ,   1 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Number of teeth (wheel)
prim.par (                2 ,   4 ,   1 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Mean pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   8 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Outer pitch diameter of wheel
prim.par (                2 ,   4 ,   1 ,   9 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Wheel face width
prim.par (                2 ,   4 ,   1 ,  10 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of pinion
prim.par (                2 ,   4 ,   1 ,  11 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Mean spiral angle of wheel
prim.par (                2 ,   4 ,   1 ,  12 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Cutter radius
prim.par (                2 ,   4 ,   1 ,  13 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Number of blade groups
prim.par (                2 ,   4 ,   2 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (drive side)
prim.par (                2 ,   4 ,   2 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Nom. pres. angle (coast side)
prim.par (                2 ,   4 ,   2 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Limit pres. angle factor
prim.par (                2 ,   4 ,   2 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Profile shift coefficient
prim.par (                2 ,   4 ,   2 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear addendum factor
prim.par (                2 ,   4 ,   2 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Crown gear dedendum factor
prim.par (                2 ,   4 ,   2 ,   8 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Thickness modification coeff.
prim.par (                2 ,   4 ,   2 ,  13 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Backlash
prim.par (                2 ,   4 ,   2 ,  13 ,   1 , $P_HSS_HSH_GW) = 0.00000000000000000E+00 ! [-] Type
prim.par (                2 ,   4 ,   2 ,  13 ,   2 , $P_HSS_HSH_GW) = 0.00000000000000000E+00 ! [m] Value
prim.par (                2 ,   4 ,   2 ,  14 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Addendum angle of wheel
prim.par (                2 ,   4 ,   2 ,  15 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Dedendum angle of wheel
prim.par (                3 ,   1 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_BD ! [m] Bore Diameter
prim.par (                3 ,   2 , $P_HSS_HSH_GW                 ) = 0.00000000000000000E+00 ! [m] Rim thickness
prim.par (                3 ,   3 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_NT ! [-] Number of visible teeth
prim.par (                3 ,   4 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_NHT ! [-] Number of highlighted teeth
prim.par (                3 ,   5 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_TPD ! [-] Tip discretisation
prim.par (                3 ,   6 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_FLD ! [-] Flank discretisation
prim.par (                3 ,   7 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_RTD ! [-] Root discretisation
prim.par (                3 ,   8 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_FCD ! [-] Face discretisation
prim.par (                3 ,   9 , $P_HSS_HSH_GW                 ) = $G_PA.$G_GER.$G_HSS.$G_PIN.$_BRD ! [-] Bore discretisation per tooth
prim.par (                4 ,   1 , $P_HSS_HSH_GW                 ) = 1.00000000000000000E+00 ! [-] Scale factor
prim.par (                4 ,   2 ,   1 , $P_HSS_HSH_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   2 , $P_HSS_HSH_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   2 ,   3 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   3 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   2 ,   3 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   2 ,   3 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   2 ,   3 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   2 ,   3 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   2 ,   3 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   2 ,   4 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   4 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   2 ,   4 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   2 ,   4 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   2 ,   4 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   2 ,   4 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   2 ,   4 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   2 ,   5 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   5 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   2 ,   5 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   2 ,   6 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   6 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   2 ,   6 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   2 ,   7 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   7 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   7 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   7 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   7 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   7 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   7 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   8 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   8 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   2 ,   8 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   2 ,   8 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   2 ,   8 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   2 ,   8 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   2 ,   8 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   2 ,   9 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,   9 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   2 ,  10 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  10 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   2 ,  11 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   2 ,  11 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   2 ,  12 , $P_HSS_HSH_GW           ) = null                    ! [-] Measured ref. L (plot only)
prim.par (                4 ,   3 ,   1 , $P_HSS_HSH_GW           ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   2 , $P_HSS_HSH_GW           ) = null                    ! [-] Ifctn-ID
prim.par (                4 ,   3 ,   3 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   3 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_a
prim.par (                4 ,   3 ,   3 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Ca
prim.par (                4 ,   3 ,   3 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_a
prim.par (                4 ,   3 ,   3 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_a
prim.par (                4 ,   3 ,   3 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Ca
prim.par (                4 ,   3 ,   3 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_a
prim.par (                4 ,   3 ,   4 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   4 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_f
prim.par (                4 ,   3 ,   4 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Cf
prim.par (                4 ,   3 ,   4 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P_f
prim.par (                4 ,   3 ,   4 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: C_f
prim.par (                4 ,   3 ,   4 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: r_Cf
prim.par (                4 ,   3 ,   4 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P_f
prim.par (                4 ,   3 ,   5 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   5 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_alpha
prim.par (                4 ,   3 ,   5 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Calpha
prim.par (                4 ,   3 ,   6 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   6 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: r_Halpha
prim.par (                4 ,   3 ,   6 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Halpha
prim.par (                4 ,   3 ,   7 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   7 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   7 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   7 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   7 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   7 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   7 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   8 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   8 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: l_e
prim.par (                4 ,   3 ,   8 ,   3 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 1: b_e
prim.par (                4 ,   3 ,   8 ,   4 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 1: P
prim.par (                4 ,   3 ,   8 ,   5 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   2: l_e
prim.par (                4 ,   3 ,   8 ,   6 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Distance 2: b_e
prim.par (                4 ,   3 ,   8 ,   7 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Exponent 2: P
prim.par (                4 ,   3 ,   9 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,   9 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [m] Amount   1: C_b
prim.par (                4 ,   3 ,  10 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  10 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: f_Hbeta
prim.par (                4 ,   3 ,  11 ,   1 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [-] Mode
prim.par (                4 ,   3 ,  11 ,   2 , $P_HSS_HSH_GW     ) = 0.00000000000000000E+00 ! [rad] Angle    1: C_vbeta
prim.par (                4 ,   3 ,  12 , $P_HSS_HSH_GW           ) = null                    ! [-] Measured ref. R (plot only)
prim.par (                4 ,   4 ,   1 , $P_HSS_HSH_GW           ) = 0.00000000000000000E+00 ! [m] Circular mod. amount
prim.par (                4 ,   4 ,   2 , $P_HSS_HSH_GW           ) = 0.00000000000000000E+00 ! [m] Lead crowning amount
prim.par (                5 ,   1 , $P_HSS_HSH_GW                 ) = 0.00000000000000000E+00 ! [-] Type
prim.par (                5 ,   2 , $P_HSS_HSH_GW                 ) = 0.00000000000000000E+00 ! [-] Input type
prim.par (                5 ,   3 , $P_HSS_HSH_GW                 ) = null                    ! [-] Input Function F(x)
prim.plot.par (           1 ,       $P_HSS_HSH_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_HSS_HSH_GW                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 , $P_HSS_HSH_GW           ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   2 , $P_HSS_HSH_GW     ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   3 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   4 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   5 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   6 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   2 ,   1 , $P_HSS_HSH_GW     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

prim.type (                         $P_HSS_HSH_Flex               ) = 28                      ! Type
prim.ref (                          $P_HSS_HSH_Flex               ) = $M_HSS_HSH_BRF          ! Reference Marker
prim.color.r (            1 ,       $P_HSS_HSH_Flex               ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_HSH_Flex               ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_HSH_Flex               ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_HSH_Flex               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSS_HSH_Flex               ) = 1                       ! Draw style
prim.transparency (                 $P_HSS_HSH_Flex               ) = $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_HSS_HSH_Flex               ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_HSS_HSH_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_HSS_HSH_Flex               ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor
prim.par (               11 ,       $P_HSS_HSH_Flex               ) = 0.00000000000000000E+00 ! [-] Interpolation type
prim.par (               12 ,       $P_HSS_HSH_Flex               ) = 0.00000000000000000E+00 ! [-] Num. master nodes for interpol
prim.par (               21 ,       $P_HSS_HSH_Flex               ) = 0.00000000000000000E+00 ! [-] Graphics mode

prim.type (                         $P_HSS_HSH_BR1                ) = 2                       ! Type
prim.ref (                          $P_HSS_HSH_BR1                ) = $M_HSS_HSH_BR1          ! Reference Marker
prim.ang (                3 ,       $P_HSS_HSH_BR1                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSS_HSH_BR1                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_HSH_BR1                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_HSH_BR1                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_HSH_BR1                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSS_HSH_BR1                ) = 1                       ! Draw style
prim.transparency (                 $P_HSS_HSH_BR1                ) = $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSS_HSH_BR1                ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_L ! [m] Height
prim.par (                3 ,       $P_HSS_HSH_BR1                ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSS_HSH_BR1                ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_1_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSS_HSH_BR1                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSS_HSH_BR1                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSS_HSH_BR1                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSS_HSH_BR2                ) = 2                       ! Type
prim.ref (                          $P_HSS_HSH_BR2                ) = $M_HSS_HSH_BR2          ! Reference Marker
prim.ang (                3 ,       $P_HSS_HSH_BR2                ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HSS_HSH_BR2                ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_HSH_BR2                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_HSH_BR2                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_HSH_BR2                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_HSS_HSH_BR2                ) = 1                       ! Draw style
prim.transparency (                 $P_HSS_HSH_BR2                ) = $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_ALL ! Transparency
prim.par (                2 ,       $P_HSS_HSH_BR2                ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_L ! [m] Height
prim.par (                3 ,       $P_HSS_HSH_BR2                ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_O ! [m] Outer diameter
prim.par (                4 ,       $P_HSS_HSH_BR2                ) = $G_3D.$G_HSS.$G_HSH.$G_BR.$_2_I ! [m] Inner diameter
prim.par (                5 ,       $P_HSS_HSH_BR2                ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HSS_HSH_BR2                ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HSS_HSH_BR2                ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_HSS_HSH_SH                 ) = 7                       ! Type
prim.ref (                          $P_HSS_HSH_SH                 ) = $M_HSS_HSH_BRF          ! Reference Marker
prim.vtx (                1 ,   1 , $P_HSS_HSH_SH                 ) = -4.05000000000000027E-01 ! Vertices
prim.vtx (                1 ,   2 , $P_HSS_HSH_SH                 ) = -4.05000000000000027E-01 ! Vertices
prim.vtx (                1 ,   3 , $P_HSS_HSH_SH                 ) = -3.90000000000000013E-01 ! Vertices
prim.vtx (                1 ,   4 , $P_HSS_HSH_SH                 ) = -2.86999999999999977E-01 ! Vertices
prim.vtx (                1 ,   5 , $P_HSS_HSH_SH                 ) = -1.83999999999999997E-01 ! Vertices
prim.vtx (                1 ,   6 , $P_HSS_HSH_SH                 ) = -1.49999999999999994E-01 ! Vertices
prim.vtx (                1 ,   7 , $P_HSS_HSH_SH                 ) = -1.49999999999999994E-01 ! Vertices
prim.vtx (                1 ,   8 , $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   9 , $P_HSS_HSH_SH                 ) = 1.49999999999999994E-01 ! Vertices
prim.vtx (                1 ,  10 , $P_HSS_HSH_SH                 ) = 1.49999999999999994E-01 ! Vertices
prim.vtx (                1 ,  11 , $P_HSS_HSH_SH                 ) = 1.70000000000000012E-01 ! Vertices
prim.vtx (                1 ,  12 , $P_HSS_HSH_SH                 ) = 2.84999999999999976E-01 ! Vertices
prim.vtx (                1 ,  13 , $P_HSS_HSH_SH                 ) = 4.00000000000000022E-01 ! Vertices
prim.vtx (                1 ,  14 , $P_HSS_HSH_SH                 ) = 4.40000000000000002E-01 ! Vertices
prim.vtx (                1 ,  15 , $P_HSS_HSH_SH                 ) = 4.65000000000000024E-01 ! Vertices
prim.vtx (                1 ,  16 , $P_HSS_HSH_SH                 ) = 4.89999999999999991E-01 ! Vertices
prim.vtx (                1 ,  17 , $P_HSS_HSH_SH                 ) = 5.00000000000000000E-01 ! Vertices
prim.vtx (                1 ,  18 , $P_HSS_HSH_SH                 ) = 6.40000000000000013E-01 ! Vertices
prim.vtx (                1 ,  19 , $P_HSS_HSH_SH                 ) = 7.80000000000000027E-01 ! Vertices
prim.vtx (                1 ,  20 , $P_HSS_HSH_SH                 ) = 7.90000000000000036E-01 ! Vertices
prim.vtx (                1 ,  21 , $P_HSS_HSH_SH                 ) = 7.90000000000000036E-01 ! Vertices
prim.vtx (                2 ,   1 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_I * 0.5 } ! Vertices
prim.vtx (                2 ,   2 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   3 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   4 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   5 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   6 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   7 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   8 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,   9 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_1 * 0.5 } ! Vertices
prim.vtx (                2 ,  10 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  11 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  12 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  13 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  14 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_3 * 0.5 } ! Vertices
prim.vtx (                2 ,  15 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_4 * 0.5 } ! Vertices
prim.vtx (                2 ,  16 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5 * 0.5 } ! Vertices
prim.vtx (                2 ,  17 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5 * 0.5 } ! Vertices
prim.vtx (                2 ,  18 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5 * 0.5 } ! Vertices
prim.vtx (                2 ,  19 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5 * 0.5 } ! Vertices
prim.vtx (                2 ,  20 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_O_5 * 0.5 } ! Vertices
prim.vtx (                2 ,  21 , $P_HSS_HSH_SH                 ) = { $G_3D.$G_HSS.$G_HSH.$G_SH.$_D_I * 0.5 } ! Vertices
prim.color.r (            1 ,       $P_HSS_HSH_SH                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HSS_HSH_SH                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HSS_HSH_SH                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_HSS_HSH_SH                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HSS_HSH_SH                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_HSS_HSH_SH                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_HSS_HSH_SH                 ) = $G_3D.$G_HSS.$G_HSH.$_TRANSPARENCY_RIGID ! Transparency
prim.par (                2 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Contour by
prim.par (                6 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Curve fitting type
prim.par (               11 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               12 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               13 ,       $P_HSS_HSH_SH                 ) = 1.20000000000000000E+01 ! [-] Number of planes
prim.par (               14 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (               15 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Show bottom cap
prim.par (               16 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Show top cap
prim.par (               17 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Show start cross section Cap
prim.par (               18 ,       $P_HSS_HSH_SH                 ) = 0.00000000000000000E+00 ! [-] Show end cross Section Cap
prim.plot.par (           1 ,       $P_HSS_HSH_SH                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 , $P_HSS_HSH_SH                 ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
prim.plot.par (           1 ,   1 ,   1 ,   1 , $P_HSS_HSH_SH     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter


!**********************************************************************
! Force Elements
!**********************************************************************
forcegroup.begin (                  $G_BR                         )                           ! $G_BR
   force.type (                     $F_LSS_PLC_BR1                ) = 186                     ! Type
   force.from (                     $F_LSS_PLC_BR1                ) = $M_HSG_LSS_PLC_BR1      ! From Marker
   force.to (                       $F_LSS_PLC_BR1                ) = $M_LSS_PLC_BR1          ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLC_BR1                ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLC_BR1                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLC_BR1                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLC_BR1                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLC_BR1                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLC_BR1                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLC_BR1                ) = -1120
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLC_BR1                ) = 580
   force.attr.2d.ori (    1 ,       $F_LSS_PLC_BR1                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR1) = -1120, -1120
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR1) = 620, 597
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR1) = -1120, -1120
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR1) = 540, 563

   force.type (                     $F_LSS_PLC_BR2                ) = 186                     ! Type
   force.from (                     $F_LSS_PLC_BR2                ) = $M_HSG_LSS_PLC_BR2      ! From Marker
   force.to (                       $F_LSS_PLC_BR2                ) = $M_LSS_PLC_BR2          ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLC_BR2                ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLC_BR2                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLC_BR2                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLC_BR2                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLC_BR2                ) = $G_FE.$G_BR.$G_LSS.$G_PLC.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLC_BR2                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLC_BR2                ) = -980
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLC_BR2                ) = 580
   force.attr.2d.ori (    1 ,       $F_LSS_PLC_BR2                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR2) = -980, -980
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR2) = 620, 597
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR2) = -980, -980
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLC_BR2) = 540, 563

   force.type (                     $F_LSS_PLT1_BR1               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT1_BR1               ) = $M_LSS_PLC_PLT1_BR1     ! From Marker
   force.to (                       $F_LSS_PLT1_BR1               ) = $M_LSS_PLT1_BR1         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT1_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT1_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT1_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT1_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT1_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT1_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT1_BR1               ) = -1180
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT1_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT1_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR1) = -1180, -1180
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR1) = -1180, -1180
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR1) = 430, 443

   force.type (                     $F_LSS_PLT1_BR2               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT1_BR2               ) = $M_LSS_PLC_PLT1_BR2     ! From Marker
   force.to (                       $F_LSS_PLT1_BR2               ) = $M_LSS_PLT1_BR2         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT1_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT1_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT1_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT1_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT1_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT1_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT1_BR2               ) = -1140
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT1_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT1_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR2) = -1140, -1140
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR2) = -1140, -1140
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT1_BR2) = 430, 443

   force.type (                     $F_LSS_PLT2_BR1               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT2_BR1               ) = $M_LSS_PLC_PLT2_BR1     ! From Marker
   force.to (                       $F_LSS_PLT2_BR1               ) = $M_LSS_PLT2_BR1         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT2_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT2_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT2_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT2_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT2_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT2_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT2_BR1               ) = -1110
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT2_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT2_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR1) = -1110, -1110
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR1) = -1110, -1110
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR1) = 430, 443

   force.type (                     $F_LSS_PLT2_BR2               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT2_BR2               ) = $M_LSS_PLC_PLT2_BR2     ! From Marker
   force.to (                       $F_LSS_PLT2_BR2               ) = $M_LSS_PLT2_BR2         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT2_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT2_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT2_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT2_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT2_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT2_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT2_BR2               ) = -1070
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT2_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT2_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR2) = -1070, -1070
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR2) = -1070, -1070
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT2_BR2) = 430, 443

   force.type (                     $F_LSS_PLT3_BR1               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT3_BR1               ) = $M_LSS_PLC_PLT3_BR1     ! From Marker
   force.to (                       $F_LSS_PLT3_BR1               ) = $M_LSS_PLT3_BR1         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT3_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT3_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT3_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT3_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT3_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT3_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT3_BR1               ) = -1040
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT3_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT3_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR1) = -1040, -1040
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR1) = -1040, -1040
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR1) = 430, 443

   force.type (                     $F_LSS_PLT3_BR2               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT3_BR2               ) = $M_LSS_PLC_PLT3_BR2     ! From Marker
   force.to (                       $F_LSS_PLT3_BR2               ) = $M_LSS_PLT3_BR2         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT3_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT3_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT3_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT3_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT3_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT3_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT3_BR2               ) = -1000
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT3_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT3_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR2) = -1000, -1000
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR2) = -1000, -1000
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT3_BR2) = 430, 443

   force.type (                     $F_LSS_PLT4_BR1               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT4_BR1               ) = $M_LSS_PLC_PLT4_BR1     ! From Marker
   force.to (                       $F_LSS_PLT4_BR1               ) = $M_LSS_PLT4_BR1         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT4_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT4_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT4_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT4_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT4_BR1               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT4_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT4_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT4_BR1               ) = -970
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT4_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT4_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR1) = -970, -970
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR1) = -970, -970
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR1) = 430, 443

   force.type (                     $F_LSS_PLT4_BR2               ) = 186                     ! Type
   force.from (                     $F_LSS_PLT4_BR2               ) = $M_LSS_PLC_PLT4_BR2     ! From Marker
   force.to (                       $F_LSS_PLT4_BR2               ) = $M_LSS_PLT4_BR2         ! To Marker
   force.st.desc (        1 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_PLT4_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_PLT4_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_PLT4_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_PLT4_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_PLT4_BR2               ) = $G_FE.$G_BR.$G_LSS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_PLT4_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_PLT4_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_PLT4_BR2               ) = -930
   force.attr.2d.pos.y (   1 ,      $F_LSS_PLT4_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_LSS_PLT4_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR2) = -930, -930
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR2) = -930, -930
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_PLT4_BR2) = 430, 443

   force.type (                     $F_IMS_PLC_BR1                ) = 186                     ! Type
   force.from (                     $F_IMS_PLC_BR1                ) = $M_HSG_IMS_PLC_BR1      ! From Marker
   force.to (                       $F_IMS_PLC_BR1                ) = $M_IMS_PLC_BR1          ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLC_BR1                ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLC_BR1                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLC_BR1                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLC_BR1                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLC_BR1                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLC_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLC_BR1                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLC_BR1                ) = -700
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLC_BR1                ) = 580
   force.attr.2d.ori (    1 ,       $F_IMS_PLC_BR1                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR1) = -700, -700
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR1) = 620, 597
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR1) = -700, -700
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR1) = 540, 563

   force.type (                     $F_IMS_PLC_BR2                ) = 186                     ! Type
   force.from (                     $F_IMS_PLC_BR2                ) = $M_HSG_IMS_PLC_BR2      ! From Marker
   force.to (                       $F_IMS_PLC_BR2                ) = $M_IMS_PLC_BR2          ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLC_BR2                ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLC_BR2                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLC_BR2                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLC_BR2                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLC_BR2                ) = $G_FE.$G_BR.$G_IMS.$G_PLC.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLC_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLC_BR2                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLC_BR2                ) = -540
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLC_BR2                ) = 580
   force.attr.2d.ori (    1 ,       $F_IMS_PLC_BR2                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR2) = -540.00000000000011, -540.00000000000011, -540, -540
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR2) = 620, 610, 610, 597
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR2) = -540, -540
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLC_BR2) = 540, 563

   force.type (                     $F_IMS_PLT1_BR1               ) = 186                     ! Type
   force.from (                     $F_IMS_PLT1_BR1               ) = $M_IMS_PLC_PLT1_BR1     ! From Marker
   force.to (                       $F_IMS_PLT1_BR1               ) = $M_IMS_PLT1_BR1         ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLT1_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLT1_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLT1_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLT1_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLT1_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLT1_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLT1_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLT1_BR1               ) = -680
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLT1_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_IMS_PLT1_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR1) = -680, -680
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR1) = -680, -680
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR1) = 430, 443

   force.type (                     $F_IMS_PLT1_BR2               ) = 186                     ! Type
   force.from (                     $F_IMS_PLT1_BR2               ) = $M_IMS_PLC_PLT1_BR2     ! From Marker
   force.to (                       $F_IMS_PLT1_BR2               ) = $M_IMS_PLT1_BR2         ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLT1_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLT1_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLT1_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLT1_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLT1_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLT1_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLT1_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLT1_BR2               ) = -640
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLT1_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_IMS_PLT1_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR2) = -640, -640
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR2) = -640, -640
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT1_BR2) = 430, 443

   force.type (                     $F_IMS_PLT2_BR1               ) = 186                     ! Type
   force.from (                     $F_IMS_PLT2_BR1               ) = $M_IMS_PLC_PLT2_BR1     ! From Marker
   force.to (                       $F_IMS_PLT2_BR1               ) = $M_IMS_PLT2_BR1         ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLT2_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLT2_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLT2_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLT2_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLT2_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLT2_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLT2_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLT2_BR1               ) = -610
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLT2_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_IMS_PLT2_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR1) = -610, -610
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR1) = -610, -610
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR1) = 430, 443

   force.type (                     $F_IMS_PLT2_BR2               ) = 186                     ! Type
   force.from (                     $F_IMS_PLT2_BR2               ) = $M_IMS_PLC_PLT2_BR2     ! From Marker
   force.to (                       $F_IMS_PLT2_BR2               ) = $M_IMS_PLT2_BR2         ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLT2_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLT2_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLT2_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLT2_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLT2_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLT2_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLT2_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLT2_BR2               ) = -570
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLT2_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_IMS_PLT2_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR2) = -570, -570
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR2) = -570, -570
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT2_BR2) = 430, 443

   force.type (                     $F_IMS_PLT3_BR1               ) = 186                     ! Type
   force.from (                     $F_IMS_PLT3_BR1               ) = $M_IMS_PLC_PLT3_BR1     ! From Marker
   force.to (                       $F_IMS_PLT3_BR1               ) = $M_IMS_PLT3_BR1         ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLT3_BR1               ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLT3_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLT3_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLT3_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLT3_BR1               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLT3_BR1               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLT3_BR1               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLT3_BR1               ) = -500
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLT3_BR1               ) = 460
   force.attr.2d.ori (    1 ,       $F_IMS_PLT3_BR1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR1) = -500, -500
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR1) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR1) = -500, -500
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR1) = 430, 443

   force.type (                     $F_IMS_PLT3_BR2               ) = 186                     ! Type
   force.from (                     $F_IMS_PLT3_BR2               ) = $M_IMS_PLC_PLT3_BR2     ! From Marker
   force.to (                       $F_IMS_PLT3_BR2               ) = $M_IMS_PLT3_BR2         ! To Marker
   force.st.desc (        1 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_PLT3_BR2               ) = ''                      ! Internal state
   force.par (            5 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_PLT3_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_PLT3_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_PLT3_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_PLT3_BR2               ) = $G_FE.$G_BR.$G_IMS.$G_PLT.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_PLT3_BR2               ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_PLT3_BR2               ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_PLT3_BR2               ) = -540
   force.attr.2d.pos.y (   1 ,      $F_IMS_PLT3_BR2               ) = 460
   force.attr.2d.ori (    1 ,       $F_IMS_PLT3_BR2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR2) = -540, -540
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR2) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR2) = -540, -540
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_PLT3_BR2) = 430, 443

   force.type (                     $F_HSS_BGR_BR1                ) = 186                     ! Type
   force.from (                     $F_HSS_BGR_BR1                ) = $M_HSG_HSS_BGR_BR1      ! From Marker
   force.to (                       $F_HSS_BGR_BR1                ) = $M_HSS_BGR_BR1          ! To Marker
   force.st.desc (        1 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_HSS_BGR_BR1                ) = ''                      ! Internal state
   force.par (            5 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_HSS_BGR_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_HSS_BGR_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_HSS_BGR_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_HSS_BGR_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_HSS_BGR_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_HSS_BGR_BR1                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_HSS_BGR_BR1                ) = -320
   force.attr.2d.pos.y (   1 ,      $F_HSS_BGR_BR1                ) = 580
   force.attr.2d.ori (    1 ,       $F_HSS_BGR_BR1                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR1) = -320, -320
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR1) = 620, 597
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR1) = -320, -320
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR1) = 540, 563

   force.type (                     $F_HSS_BGR_BR2                ) = 186                     ! Type
   force.from (                     $F_HSS_BGR_BR2                ) = $M_HSG_HSS_BGR_BR2      ! From Marker
   force.to (                       $F_HSS_BGR_BR2                ) = $M_HSS_BGR_BR2          ! To Marker
   force.st.desc (        1 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_HSS_BGR_BR2                ) = ''                      ! Internal state
   force.par (            5 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_HSS_BGR_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_HSS_BGR_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_HSS_BGR_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_HSS_BGR_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_BGR.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_HSS_BGR_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_HSS_BGR_BR2                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_HSS_BGR_BR2                ) = -190
   force.attr.2d.pos.y (   1 ,      $F_HSS_BGR_BR2                ) = 580
   force.attr.2d.ori (    1 ,       $F_HSS_BGR_BR2                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR2) = -190, -190
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR2) = 620, 597
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR2) = -190, -190
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_BR2) = 540, 563

   force.type (                     $F_HSS_HSH_BR1                ) = 186                     ! Type
   force.from (                     $F_HSS_HSH_BR1                ) = $M_HSG_HSS_HSH_BR1      ! From Marker
   force.to (                       $F_HSS_HSH_BR1                ) = $M_HSS_HSH_BR1          ! To Marker
   force.st.desc (        1 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_HSS_HSH_BR1                ) = ''                      ! Internal state
   force.par (            5 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_HSS_HSH_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_HSS_HSH_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_HSS_HSH_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_HSS_HSH_BR1                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_1_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_HSS_HSH_BR1                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_HSS_HSH_BR1                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_HSS_HSH_BR1                ) = -100
   force.attr.2d.pos.y (   1 ,      $F_HSS_HSH_BR1                ) = 520
   force.attr.2d.ori (    1 ,       $F_HSS_HSH_BR1                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR1) = -100, -100
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR1) = 620, 537
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR1) = -100, -100
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR1) = 430, 503

   force.type (                     $F_HSS_HSH_BR2                ) = 186                     ! Type
   force.from (                     $F_HSS_HSH_BR2                ) = $M_HSG_HSS_HSH_BR2      ! From Marker
   force.to (                       $F_HSS_HSH_BR2                ) = $M_HSS_HSH_BR2          ! To Marker
   force.st.desc (        1 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_HSS_HSH_BR2                ) = ''                      ! Internal state
   force.par (            5 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_HSS_HSH_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_HSS_HSH_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_HSS_HSH_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_HSS_HSH_BR2                ) = $G_FE.$G_BR.$G_HSS.$G_HSH.$_2_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_HSS_HSH_BR2                ) = 0.00000000000000000E+00 ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_HSS_HSH_BR2                ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_HSS_HSH_BR2                ) = -20
   force.attr.2d.pos.y (   1 ,      $F_HSS_HSH_BR2                ) = 520
   force.attr.2d.ori (    1 ,       $F_HSS_HSH_BR2                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR2) = -20, -20
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR2) = 620, 537
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR2) = -20, -20
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_HSS_HSH_BR2) = 430, 503

forcegroup.end (                    $G_BR                         )                           ! $G_BR

forcegroup.begin (                  $G_SPB                        )                           ! $G_SPB
   force.type (                     $F_SPB2                       ) = 43                      ! Type
   force.from (                     $F_SPB2                       ) = $M_Isys_INTERFACE_MFR_GBX_SPB2 ! From Marker
   force.to (                       $F_SPB2                       ) = $M_HSG_SPB2             ! To Marker
   force.st.intern (                $F_SPB2                       ) = ''                      ! Internal state
   force.par (            1 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [N] Nominal force in x
   force.par (            2 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [N] Nominal force in y
   force.par (            3 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [N] Nominal force in z
   force.par (            4 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in al
   force.par (            5 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in be
   force.par (            6 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in ga
   force.par (            7 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_C_X    ! [N/m] Transl. stiffness in x
   force.par (            8 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_C_Y    ! [N/m] Transl. stiffness in y
   force.par (            9 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_C_Z    ! [N/m] Transl. stiffness in z
   force.par (           10 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in al
   force.par (           11 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_C_BE   ! [Nm/rad] Rotat. stiffness in be
   force.par (           12 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in ga
   force.par (           13 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_D_X    ! [Ns/m] Transl. damping in x
   force.par (           14 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_D_Y    ! [Ns/m] Transl. damping in y
   force.par (           15 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_D_Z    ! [Ns/m] Transl. damping in z
   force.par (           16 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in al
   force.par (           17 ,       $F_SPB2                       ) = $G_FE.$G_SPB.$_2_D_BE   ! [Nms/rad] Rotat. damping in be
   force.par (           18 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in ga
   force.par (           19 ,       $F_SPB2                       ) = null                    ! [-] Input Function F_c(x)
   force.par (           20 ,       $F_SPB2                       ) = null                    ! [-] Input Function F_c(y)
   force.par (           21 ,       $F_SPB2                       ) = null                    ! [-] Input Function F_c(z)
   force.par (           22 ,       $F_SPB2                       ) = null                    ! [-] Input Function T_c(al)
   force.par (           23 ,       $F_SPB2                       ) = null                    ! [-] Input Function T_c(be)
   force.par (           24 ,       $F_SPB2                       ) = null                    ! [-] Input Function T_c(ga)
   force.par (           25 ,       $F_SPB2                       ) = null                    ! [-] Input Function F_d(xd)
   force.par (           26 ,       $F_SPB2                       ) = null                    ! [-] Input Function F_d(yd)
   force.par (           27 ,       $F_SPB2                       ) = null                    ! [-] Input Function F_d(zd)
   force.par (           28 ,       $F_SPB2                       ) = null                    ! [-] Input Function T_d(ald)
   force.par (           29 ,       $F_SPB2                       ) = null                    ! [-] Input Function T_d(bed)
   force.par (           30 ,       $F_SPB2                       ) = null                    ! [-] Input Function T_d(gad)
   force.par (           31 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [-] Mode of angle calculation
   force.par (           33 ,       $F_SPB2                       ) = null                    ! [-] Expression for force in x
   force.par (           34 ,       $F_SPB2                       ) = null                    ! [-] Expression for force in y
   force.par (           35 ,       $F_SPB2                       ) = null                    ! [-] Expression for force in z
   force.par (           36 ,       $F_SPB2                       ) = null                    ! [-] Expression for torque in al
   force.par (           37 ,       $F_SPB2                       ) = null                    ! [-] Expression for torque in be
   force.par (           38 ,       $F_SPB2                       ) = null                    ! [-] Expression for torque in ga
   force.par (           39 ,       $F_SPB2                       ) = null                    ! [-] Input Function Set
   force.par (           40 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [m] Nominal displacement in x
   force.par (           41 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [m] Nominal displacement in y
   force.par (           42 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [m] Nominal displacement in z
   force.par (           43 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [rad] Nominal angle in al
   force.par (           44 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [rad] Nominal angle in be
   force.par (           45 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [rad] Nominal angle in ga
   force.par (           46 ,       $F_SPB2                       ) = 0.00000000000000000E+00 ! [-] Output force in To Marker
   force.attr.2d.pos.x (   1 ,      $F_SPB2                       ) = -320
   force.attr.2d.pos.y (   1 ,      $F_SPB2                       ) = 730
   force.attr.2d.ori (    1 ,       $F_SPB2                       ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_SPB2   ) = -320, -320
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_SPB2   ) = 800, 747
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_SPB2     ) = -320, -320
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_SPB2     ) = 660, 713

   force.type (                     $F_SPB1                       ) = 43                      ! Type
   force.from (                     $F_SPB1                       ) = $M_Isys_INTERFACE_MFR_GBX_SPB1 ! From Marker
   force.to (                       $F_SPB1                       ) = $M_HSG_SPB1             ! To Marker
   force.st.intern (                $F_SPB1                       ) = ''                      ! Internal state
   force.par (            1 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [N] Nominal force in x
   force.par (            2 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [N] Nominal force in y
   force.par (            3 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [N] Nominal force in z
   force.par (            4 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in al
   force.par (            5 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in be
   force.par (            6 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nm] Nominal torque in ga
   force.par (            7 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_C_X    ! [N/m] Transl. stiffness in x
   force.par (            8 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_C_Y    ! [N/m] Transl. stiffness in y
   force.par (            9 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_C_Z    ! [N/m] Transl. stiffness in z
   force.par (           10 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in al
   force.par (           11 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_C_BE   ! [Nm/rad] Rotat. stiffness in be
   force.par (           12 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nm/rad] Rotat. stiffness in ga
   force.par (           13 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_D_X    ! [Ns/m] Transl. damping in x
   force.par (           14 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_D_Y    ! [Ns/m] Transl. damping in y
   force.par (           15 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_D_Z    ! [Ns/m] Transl. damping in z
   force.par (           16 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in al
   force.par (           17 ,       $F_SPB1                       ) = $G_FE.$G_SPB.$_1_D_BE   ! [Nms/rad] Rotat. damping in be
   force.par (           18 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [Nms/rad] Rotat. damping in ga
   force.par (           19 ,       $F_SPB1                       ) = null                    ! [-] Input Function F_c(x)
   force.par (           20 ,       $F_SPB1                       ) = null                    ! [-] Input Function F_c(y)
   force.par (           21 ,       $F_SPB1                       ) = null                    ! [-] Input Function F_c(z)
   force.par (           22 ,       $F_SPB1                       ) = null                    ! [-] Input Function T_c(al)
   force.par (           23 ,       $F_SPB1                       ) = null                    ! [-] Input Function T_c(be)
   force.par (           24 ,       $F_SPB1                       ) = null                    ! [-] Input Function T_c(ga)
   force.par (           25 ,       $F_SPB1                       ) = null                    ! [-] Input Function F_d(xd)
   force.par (           26 ,       $F_SPB1                       ) = null                    ! [-] Input Function F_d(yd)
   force.par (           27 ,       $F_SPB1                       ) = null                    ! [-] Input Function F_d(zd)
   force.par (           28 ,       $F_SPB1                       ) = null                    ! [-] Input Function T_d(ald)
   force.par (           29 ,       $F_SPB1                       ) = null                    ! [-] Input Function T_d(bed)
   force.par (           30 ,       $F_SPB1                       ) = null                    ! [-] Input Function T_d(gad)
   force.par (           31 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [-] Mode of angle calculation
   force.par (           33 ,       $F_SPB1                       ) = null                    ! [-] Expression for force in x
   force.par (           34 ,       $F_SPB1                       ) = null                    ! [-] Expression for force in y
   force.par (           35 ,       $F_SPB1                       ) = null                    ! [-] Expression for force in z
   force.par (           36 ,       $F_SPB1                       ) = null                    ! [-] Expression for torque in al
   force.par (           37 ,       $F_SPB1                       ) = null                    ! [-] Expression for torque in be
   force.par (           38 ,       $F_SPB1                       ) = null                    ! [-] Expression for torque in ga
   force.par (           39 ,       $F_SPB1                       ) = null                    ! [-] Input Function Set
   force.par (           40 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [m] Nominal displacement in x
   force.par (           41 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [m] Nominal displacement in y
   force.par (           42 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [m] Nominal displacement in z
   force.par (           43 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [rad] Nominal angle in al
   force.par (           44 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [rad] Nominal angle in be
   force.par (           45 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [rad] Nominal angle in ga
   force.par (           46 ,       $F_SPB1                       ) = 0.00000000000000000E+00 ! [-] Output force in To Marker
   force.attr.2d.pos.x (   1 ,      $F_SPB1                       ) = -980
   force.attr.2d.pos.y (   1 ,      $F_SPB1                       ) = 730
   force.attr.2d.ori (    1 ,       $F_SPB1                       ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_SPB1   ) = -980, -980
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_SPB1   ) = 800, 747
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_SPB1     ) = -980, -980
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_SPB1     ) = 660, 713

forcegroup.end (                    $G_SPB                        )                           ! $G_SPB

forcegroup.begin (                  $G_SCN                        )                           ! $G_SCN
   force.type (                     $F_LSS_2_IMS                  ) = 186                     ! Type
   force.from (                     $F_LSS_2_IMS                  ) = $M_LSS_SUN_IMS_PLC      ! From Marker
   force.to (                       $F_LSS_2_IMS                  ) = $M_IMS_PLC_LSS_SUN      ! To Marker
   force.st.desc (        1 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_LSS_2_IMS                  ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_ENABLED ! Disabled
   force.par (            5 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_LSS_2_IMS                  ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_ROT ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_C_TLT ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_ROT ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_LSS_2_IMS                  ) = $G_FE.$G_SCN.$G_LSS_2_IMS.$_D_TLT ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_LSS_2_IMS                  ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_LSS_2_IMS                  ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_LSS_2_IMS                  ) = -740
   force.attr.2d.pos.y (   1 ,      $F_LSS_2_IMS                  ) = 290
   force.attr.2d.ori (    1 ,       $F_LSS_2_IMS                  ) = 90
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_2_IMS) = -740, -740
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_2_IMS) = 90, 273
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_2_IMS) = -740, -740
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_2_IMS) = 500, 307

   force.type (                     $F_IMS_2_HSS                  ) = 186                     ! Type
   force.from (                     $F_IMS_2_HSS                  ) = $M_IMS_SUN_HSS_BGR      ! From Marker
   force.to (                       $F_IMS_2_HSS                  ) = $M_HSS_BGR_IMS_SUN      ! To Marker
   force.st.desc (        1 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        2 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        3 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        4 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        5 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.desc (        6 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! Descriptive states
   force.st.intern (                $F_IMS_2_HSS                  ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_ENABLED ! Disabled
   force.par (            5 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [-] Axial direction
   force.par (           10 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [N] Nominal force x
   force.par (           11 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [N] Nominal force y
   force.par (           12 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [N] Nominal force z
   force.par (           13 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [Nm] Nominal torque x
   force.par (           14 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [Nm] Nominal torque y
   force.par (           15 ,       $F_IMS_2_HSS                  ) = 0.00000000000000000E+00 ! [Nm] Nominal torque z
   force.par (           18 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_A ! [N/m] Axial stiffness
   force.par (           19 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_R ! [N/m] Radial stiffness
   force.par (           20 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_ROT ! [Nm/rad] Torsional stiffness
   force.par (           21 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_C_TLT ! [Nm/rad] Tilting stiffness
   force.par (           23 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_A ! [Ns/m] Axial damping
   force.par (           24 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_R ! [Ns/m] Radial damping
   force.par (           26 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_ROT ! [Nms/rad] Torsional damping
   force.par (           27 ,       $F_IMS_2_HSS                  ) = $G_FE.$G_SCN.$G_IMS_2_HSS.$_D_TLT ! [Nms/rad] Tilting damping
   force.par (           30 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn ax. stif. frc Fc(x)
   force.par (           31 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn rad. stif. frc Fc(r)
   force.par (           32 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn tors. stif. trq Tc(al)
   force.par (           33 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn tilt. stif. trq Tc(psi)
   force.par (           35 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn ax. damp. frc Fd(xd)
   force.par (           36 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn rad. damp. frc Fd(rd)
   force.par (           38 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn tors. damp. trq Td(ald)
   force.par (           39 ,       $F_IMS_2_HSS                  ) = null                    ! [-] IFctn tilt. damp. trq Td(psid)
   force.par (           42 ,       $F_IMS_2_HSS                  ) = null                    ! [-] Input Function Set
   force.attr.2d.pos.x (   1 ,      $F_IMS_2_HSS                  ) = -340
   force.attr.2d.pos.y (   1 ,      $F_IMS_2_HSS                  ) = 290
   force.attr.2d.ori (    1 ,       $F_IMS_2_HSS                  ) = 90
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_2_HSS) = -340, -340
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_2_HSS) = 90, 273
   force.attr.2d.pts.to.x (   1 ,   1 ,   1 , $F_IMS_2_HSS        ) = -340
   force.attr.2d.pts.to.y (   1 ,   1 ,   1 , $F_IMS_2_HSS        ) = 450
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_2_HSS) = -340, -340
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_2_HSS) = 450, 307
   force.attr.2d.paths.to.x (   1 ,   1 ,   2 ,   1 , $F_IMS_2_HSS) = -340, -340
   force.attr.2d.paths.to.y (   1 ,   1 ,   2 ,   1 , $F_IMS_2_HSS) = 500, 450

forcegroup.end (                    $G_SCN                        )                           ! $G_SCN

forcegroup.begin (                  $G_GP_adv                     )                           ! $G_GP_adv
   force.type (                     $F_LSS_RNG_PLT1               ) = 225                     ! Type
   force.from (                     $F_LSS_RNG_PLT1               ) = $M_LSS_PLT1_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT1               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.st.intern (                $F_LSS_RNG_PLT1               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_RNG_PLT1               ) = $P_LSS_PLT1_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_RNG_PLT1               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_RNG_PLT1               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_RNG_PLT1               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_RNG_PLT1               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_RNG_PLT1               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_RNG_PLT1               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_RNG_PLT1               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_RNG_PLT1               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_RNG_PLT1               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_RNG_PLT1               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT1               ) = -870
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT1               ) = 200
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT1               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = -1130, -887
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = 200, 200
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = -850, -850, -853
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = 620, 200, 200

   force.type (                     $F_LSS_RNG_PLT2               ) = 225                     ! Type
   force.from (                     $F_LSS_RNG_PLT2               ) = $M_LSS_PLT2_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT2               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.st.intern (                $F_LSS_RNG_PLT2               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_RNG_PLT2               ) = $P_LSS_PLT2_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_RNG_PLT2               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_RNG_PLT2               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_RNG_PLT2               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_RNG_PLT2               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_RNG_PLT2               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_RNG_PLT2               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_RNG_PLT2               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_RNG_PLT2               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_RNG_PLT2               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_RNG_PLT2               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 , $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   1 , $F_LSS_RNG_PLT2         ) = 1.28000000000000000E+02 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   2 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   3 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   4 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   5 , $F_LSS_RNG_PLT2         ) = 5.00000000000000000E-01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   6 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   7 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   1 ,   1 , $F_LSS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   2 ,   1 , $F_LSS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   1 ,   1 , $F_LSS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   2 ,   1 , $F_LSS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 , $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   1 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   2 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   3 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   4 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   5 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   6 , $F_LSS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   7 ,   1 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   8 ,   1 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT2               ) = -870
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT2               ) = 250
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT2               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = -1060, -887
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = 250, 250
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = -840, -840, -843, -853
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = 620, 250, 250, 250

   force.type (                     $F_LSS_RNG_PLT3               ) = 225                     ! Type
   force.from (                     $F_LSS_RNG_PLT3               ) = $M_LSS_PLT3_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT3               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.st.intern (                $F_LSS_RNG_PLT3               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_RNG_PLT3               ) = $P_LSS_PLT3_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_RNG_PLT3               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_RNG_PLT3               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_RNG_PLT3               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_RNG_PLT3               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_RNG_PLT3               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_RNG_PLT3               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_RNG_PLT3               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_RNG_PLT3               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_RNG_PLT3               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_RNG_PLT3               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT3               ) = -870
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT3               ) = 300
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT3               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = -990, -887
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = 300, 300
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = -830, -830, -843, -853
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = 620, 300, 300, 300

   force.type (                     $F_LSS_RNG_PLT4               ) = 225                     ! Type
   force.from (                     $F_LSS_RNG_PLT4               ) = $M_LSS_PLT4_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT4               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.st.intern (                $F_LSS_RNG_PLT4               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_RNG_PLT4               ) = $P_LSS_PLT4_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_RNG_PLT4               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_RNG_PLT4               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_RNG_PLT4               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_RNG_PLT4               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_RNG_PLT4               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_RNG_PLT4               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_RNG_PLT4               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_RNG_PLT4               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_RNG_PLT4               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_RNG_PLT4               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_RNG_PLT4               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_RNG_PLT4               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT4   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 , $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   1 , $F_LSS_RNG_PLT4         ) = 1.28000000000000000E+02 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   2 , $F_LSS_RNG_PLT4         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   3 , $F_LSS_RNG_PLT4         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   4 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   5 , $F_LSS_RNG_PLT4         ) = 5.00000000000000000E-01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   6 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   7 , $F_LSS_RNG_PLT4         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   1 ,   1 , $F_LSS_RNG_PLT4) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   2 ,   1 , $F_LSS_RNG_PLT4) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   1 ,   1 , $F_LSS_RNG_PLT4) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   2 ,   1 , $F_LSS_RNG_PLT4) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 , $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   1 , $F_LSS_RNG_PLT4         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   2 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   3 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   7 ,   1 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   8 ,   1 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT4               ) = -870
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT4               ) = 350
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT4               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = -920, -887
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = 350, 350
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = -820, -820, -826, -843, -853
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = 620, 350, 350, 350, 350

   force.type (                     $F_LSS_SUN_PLT1               ) = 225                     ! Type
   force.from (                     $F_LSS_SUN_PLT1               ) = $M_LSS_PLT1_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT1               ) = $M_LSS_SUN_GW           ! To Marker
   force.st.intern (                $F_LSS_SUN_PLT1               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_SUN_PLT1               ) = $P_LSS_PLT1_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_SUN_PLT1               ) = $P_LSS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_SUN_PLT1               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_SUN_PLT1               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_SUN_PLT1               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_SUN_PLT1               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_SUN_PLT1               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_SUN_PLT1               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_SUN_PLT1               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_SUN_PLT1               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_SUN_PLT1               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT1               ) = -1160
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT1               ) = 130
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = -1160, -1160
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = 170, 147
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = -1160, -1160
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = 90, 113

   force.type (                     $F_LSS_SUN_PLT2               ) = 225                     ! Type
   force.from (                     $F_LSS_SUN_PLT2               ) = $M_LSS_PLT2_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT2               ) = $M_LSS_SUN_GW           ! To Marker
   force.st.intern (                $F_LSS_SUN_PLT2               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_SUN_PLT2               ) = $P_LSS_PLT2_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_SUN_PLT2               ) = $P_LSS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_SUN_PLT2               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_SUN_PLT2               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_SUN_PLT2               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_SUN_PLT2               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_SUN_PLT2               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_SUN_PLT2               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_SUN_PLT2               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_SUN_PLT2               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_SUN_PLT2               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT2               ) = -1090
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT2               ) = 130
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = -1090, -1090
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = 220, 147
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = -1090, -1090
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = 90, 113

   force.type (                     $F_LSS_SUN_PLT3               ) = 225                     ! Type
   force.from (                     $F_LSS_SUN_PLT3               ) = $M_LSS_PLT3_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT3               ) = $M_LSS_SUN_GW           ! To Marker
   force.st.intern (                $F_LSS_SUN_PLT3               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_SUN_PLT3               ) = $P_LSS_PLT3_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_SUN_PLT3               ) = $P_LSS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_SUN_PLT3               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_SUN_PLT3               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_SUN_PLT3               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_SUN_PLT3               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_SUN_PLT3               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_SUN_PLT3               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_SUN_PLT3               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_SUN_PLT3               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_SUN_PLT3               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT3               ) = -1020
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT3               ) = 130
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT3               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = -1020, -1020
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = 260, 147
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = -1020, -1020
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = 90, 113

   force.type (                     $F_LSS_SUN_PLT4               ) = 225                     ! Type
   force.from (                     $F_LSS_SUN_PLT4               ) = $M_LSS_PLT4_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT4               ) = $M_LSS_SUN_GW           ! To Marker
   force.st.intern (                $F_LSS_SUN_PLT4               ) = ''                      ! Internal state
   force.disabled (                 $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_LSS_SUN_PLT4               ) = $P_LSS_PLT4_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_LSS_SUN_PLT4               ) = $P_LSS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_LSS_SUN_PLT4               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_LSS_SUN_PLT4               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_LSS_SUN_PLT4               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_LSS_SUN_PLT4               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_LSS_SUN_PLT4               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_LSS_SUN_PLT4               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_LSS_SUN_PLT4               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_LSS_SUN_PLT4               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_LSS_SUN_PLT4               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_LSS_SUN_PLT4               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_LSS_SUN_PLT4               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT4   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT4               ) = -950
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT4               ) = 130
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT4               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = -950, -950
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = 310, 147
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = -950, -950
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = 90, 113

   force.type (                     $F_IMS_RNG_PLT1               ) = 225                     ! Type
   force.from (                     $F_IMS_RNG_PLT1               ) = $M_IMS_PLT1_GW          ! From Marker
   force.to (                       $F_IMS_RNG_PLT1               ) = $M_HSG_IMS_RNG_GW       ! To Marker
   force.st.intern (                $F_IMS_RNG_PLT1               ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_IMS_RNG_PLT1               ) = $P_IMS_PLT1_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_IMS_RNG_PLT1               ) = $P_HSG_IMS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_IMS_RNG_PLT1               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_IMS_RNG_PLT1               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_IMS_RNG_PLT1               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_IMS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_IMS_RNG_PLT1               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_IMS_RNG_PLT1               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_IMS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_IMS_RNG_PLT1               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_IMS_RNG_PLT1               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_IMS_RNG_PLT1               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_IMS_RNG_PLT1               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_RNG_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_RNG_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_RNG_PLT1               ) = -450
   force.attr.2d.pos.y (   1 ,      $F_IMS_RNG_PLT1               ) = 200
   force.attr.2d.ori (    1 ,       $F_IMS_RNG_PLT1               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = -630, -467
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = 200, 200
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = -430.00000000000011, -430.00000000000011, -433
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = 620, 200, 200

   force.type (                     $F_IMS_RNG_PLT2               ) = 225                     ! Type
   force.from (                     $F_IMS_RNG_PLT2               ) = $M_IMS_PLT2_GW          ! From Marker
   force.to (                       $F_IMS_RNG_PLT2               ) = $M_HSG_IMS_RNG_GW       ! To Marker
   force.st.intern (                $F_IMS_RNG_PLT2               ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_IMS_RNG_PLT2               ) = $P_IMS_PLT2_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_IMS_RNG_PLT2               ) = $P_HSG_IMS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_IMS_RNG_PLT2               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_IMS_RNG_PLT2               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_IMS_RNG_PLT2               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_IMS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_IMS_RNG_PLT2               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_IMS_RNG_PLT2               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_IMS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_IMS_RNG_PLT2               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_IMS_RNG_PLT2               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_IMS_RNG_PLT2               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_IMS_RNG_PLT2               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_RNG_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 , $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   1 , $F_IMS_RNG_PLT2         ) = 1.28000000000000000E+02 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   2 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   3 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   4 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   5 , $F_IMS_RNG_PLT2         ) = 5.00000000000000000E-01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   6 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   7 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   1 ,   1 , $F_IMS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   2 ,   1 , $F_IMS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   1 ,   1 , $F_IMS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   2 ,   1 , $F_IMS_RNG_PLT2) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 , $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   1 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   2 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   3 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   4 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   5 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   6 , $F_IMS_RNG_PLT2         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   7 ,   1 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   8 ,   1 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_RNG_PLT2               ) = -450
   force.attr.2d.pos.y (   1 ,      $F_IMS_RNG_PLT2               ) = 270
   force.attr.2d.ori (    1 ,       $F_IMS_RNG_PLT2               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = -560, -467
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = 270, 270
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = -420, -420, -423, -433
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = 620, 270, 270, 270

   force.type (                     $F_IMS_RNG_PLT3               ) = 225                     ! Type
   force.from (                     $F_IMS_RNG_PLT3               ) = $M_IMS_PLT3_GW          ! From Marker
   force.to (                       $F_IMS_RNG_PLT3               ) = $M_HSG_IMS_RNG_GW       ! To Marker
   force.st.intern (                $F_IMS_RNG_PLT3               ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_IMS_RNG_PLT3               ) = $P_IMS_PLT3_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_IMS_RNG_PLT3               ) = $P_HSG_IMS_RNG_GW       ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_IMS_RNG_PLT3               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_IMS_RNG_PLT3               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_IMS_RNG_PLT3               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_IMS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_IMS_RNG_PLT3               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_IMS_RNG_PLT3               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_IMS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_IMS_RNG_PLT3               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_IMS_RNG_PLT3               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_IMS_RNG_PLT3               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_IMS_RNG_PLT3               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_RNG_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_RNG_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_RNG_PLT3               ) = -450
   force.attr.2d.pos.y (   1 ,      $F_IMS_RNG_PLT3               ) = 340
   force.attr.2d.ori (    1 ,       $F_IMS_RNG_PLT3               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = -490, -467
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = 340, 340
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = -410, -410, -423, -433
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = 620, 340, 340, 340

   force.type (                     $F_IMS_SUN_PLT1               ) = 225                     ! Type
   force.from (                     $F_IMS_SUN_PLT1               ) = $M_IMS_PLT1_GW          ! From Marker
   force.to (                       $F_IMS_SUN_PLT1               ) = $M_IMS_SUN_BRF          ! To Marker
   force.st.intern (                $F_IMS_SUN_PLT1               ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_IMS_SUN_PLT1               ) = $P_IMS_PLT1_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_IMS_SUN_PLT1               ) = $P_IMS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_IMS_SUN_PLT1               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_IMS_SUN_PLT1               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_IMS_SUN_PLT1               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_IMS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_IMS_SUN_PLT1               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_IMS_SUN_PLT1               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_IMS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_IMS_SUN_PLT1               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_IMS_SUN_PLT1               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_IMS_SUN_PLT1               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_IMS_SUN_PLT1               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_SUN_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_SUN_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_SUN_PLT1               ) = -660
   force.attr.2d.pos.y (   1 ,      $F_IMS_SUN_PLT1               ) = 130
   force.attr.2d.ori (    1 ,       $F_IMS_SUN_PLT1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = -660, -660
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = 170, 147
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = -660, -660
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = 90, 113

   force.type (                     $F_IMS_SUN_PLT2               ) = 225                     ! Type
   force.from (                     $F_IMS_SUN_PLT2               ) = $M_IMS_PLT2_GW          ! From Marker
   force.to (                       $F_IMS_SUN_PLT2               ) = $M_IMS_SUN_BRF          ! To Marker
   force.st.intern (                $F_IMS_SUN_PLT2               ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_IMS_SUN_PLT2               ) = $P_IMS_PLT2_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_IMS_SUN_PLT2               ) = $P_IMS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_IMS_SUN_PLT2               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_IMS_SUN_PLT2               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_IMS_SUN_PLT2               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_IMS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_IMS_SUN_PLT2               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_IMS_SUN_PLT2               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_IMS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_IMS_SUN_PLT2               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_IMS_SUN_PLT2               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_IMS_SUN_PLT2               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_IMS_SUN_PLT2               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_SUN_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_SUN_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_SUN_PLT2               ) = -590
   force.attr.2d.pos.y (   1 ,      $F_IMS_SUN_PLT2               ) = 130
   force.attr.2d.ori (    1 ,       $F_IMS_SUN_PLT2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = -590, -590
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = 240, 147
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = -590, -590
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = 90, 113

   force.type (                     $F_IMS_SUN_PLT3               ) = 225                     ! Type
   force.from (                     $F_IMS_SUN_PLT3               ) = $M_IMS_PLT3_GW          ! From Marker
   force.to (                       $F_IMS_SUN_PLT3               ) = $M_IMS_SUN_BRF          ! To Marker
   force.st.intern (                $F_IMS_SUN_PLT3               ) = ''                      ! Internal state
   force.disabled (                 $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_IMS_SUN_PLT3               ) = $P_IMS_PLT3_GW          ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_IMS_SUN_PLT3               ) = $P_IMS_SUN_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_IMS_SUN_PLT3               ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            6 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           12 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           14 ,       $F_IMS_SUN_PLT3               ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_IMS_SUN_PLT3               ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_IMS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_IMS_SUN_PLT3               ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_IMS_SUN_PLT3               ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_IMS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_IMS_SUN_PLT3               ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_IMS_SUN_PLT3               ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_IMS_SUN_PLT3               ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_IMS_SUN_PLT3               ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_SUN_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 , $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   1 , $F_IMS_SUN_PLT3         ) = 1.28000000000000000E+02 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   2 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   3 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   4 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   5 , $F_IMS_SUN_PLT3         ) = 5.00000000000000000E-01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   6 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   7 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   1 ,   1 , $F_IMS_SUN_PLT3) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   2 ,   1 , $F_IMS_SUN_PLT3) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   1 ,   1 , $F_IMS_SUN_PLT3) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   2 ,   1 , $F_IMS_SUN_PLT3) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 , $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   1 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   2 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   3 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   4 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   5 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   6 , $F_IMS_SUN_PLT3         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   7 ,   1 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   8 ,   1 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_SUN_PLT3               ) = -520
   force.attr.2d.pos.y (   1 ,      $F_IMS_SUN_PLT3               ) = 140
   force.attr.2d.ori (    1 ,       $F_IMS_SUN_PLT3               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = -520, -520
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = 310, 157
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = -520, -520
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = 90, 123

   force.type (                     $F_HSS_BGR_PIN                ) = 225                     ! Type
   force.from (                     $F_HSS_BGR_PIN                ) = $M_HSS_BGR_GW           ! From Marker
   force.to (                       $F_HSS_BGR_PIN                ) = $M_HSS_HSH_GW           ! To Marker
   force.st.intern (                $F_HSS_BGR_PIN                ) = ''                      ! Internal state
   force.disabled (                 $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   force.par (            1 ,       $F_HSS_BGR_PIN                ) = $P_HSS_BGR_GW           ! [-] Geometry (Gear 1)
   force.par (            2 ,       $F_HSS_BGR_PIN                ) = $P_HSS_HSH_GW           ! [-] Geometry (Gear 2)
   force.par (            3 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Basic Output Values
   force.par (            4 ,       $F_HSS_BGR_PIN                ) = 3.00000000000000000E+00 ! [-] Advanced Output Values
   force.par (            5 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Calculation mode
   force.par (            6 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Damping model
   force.par (            7 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Friction model
   force.par (            8 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_NOS ! [-] Number of slices
   force.par (           10 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_GBF ! [-] Gear blank factor
   force.par (           11 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Tooth stiffness method
   force.par (           12 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_TSR ! [-] Teeth stiffness ratio
   force.par (           13 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Premature/Posterior meshing
   force.par (           14 ,       $F_HSS_BGR_PIN                ) = null                    ! [-] Material (Gear 1)
   force.par (           15 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 1)
   force.par (           16 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 1)
   force.par (           17 ,       $F_HSS_BGR_PIN                ) = null                    ! [-] Material (Gear 2)
   force.par (           18 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_YMD ! [N/m²] Young's modulus (Gear 2)
   force.par (           19 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_PRT ! [-] Poisson's ratio (Gear 2)
   force.par (           20 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Hertzian scaling factor
   force.par (           21 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_HSS.$_D_IN ! [Ns/m] Damping coefficient IN
   force.par (           22 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_HSS.$_D_OUT ! [Ns/m] Damping coefficient OUT
   force.par (           24 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Full damping starts at
   force.par (           31 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_FRC ! [-] Friction coefficient
   force.par (           32 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_RGV ! [m/s] Regularization velocity
   force.par (           44 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Tuning parameters (deprecated)
   force.par (           50 ,       $F_HSS_BGR_PIN                ) = null                    ! [-] Measured stiffness (plot only)
   force.par (           51 ,       $F_HSS_BGR_PIN                ) = null                    ! [-] Measured TE (plot only)
   force.par (           52 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Contact side (plot only)
   force.par (           53 ,       $F_HSS_BGR_PIN                ) = 7.00000000000000000E+00 ! [-] No. Torques Gear 2 (plot only)
   force.par (           54 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+04 ! [Nm] Torque values  1
   force.par (           55 ,       $F_HSS_BGR_PIN                ) = 5.00000000000000000E+04 ! [Nm] Torque values  2
   force.par (           56 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+05 ! [Nm] Torque values  3
   force.par (           57 ,       $F_HSS_BGR_PIN                ) = 5.00000000000000000E+05 ! [Nm] Torque values  4
   force.par (           58 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+06 ! [Nm] Torque values  5
   force.par (           59 ,       $F_HSS_BGR_PIN                ) = 5.00000000000000000E+06 ! [Nm] Torque values  6
   force.par (           60 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+07 ! [Nm] Torque values  7
   force.plot.par (       1 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_HSS_BGR_PIN    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 , $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   1 , $F_HSS_BGR_PIN          ) = 1.28000000000000000E+02 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   2 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   3 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   4 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   5 , $F_HSS_BGR_PIN          ) = 5.00000000000000000E-01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   6 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   7 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   1 ,   1 , $F_HSS_BGR_PIN) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   8 ,   2 ,   1 , $F_HSS_BGR_PIN) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   1 ,   1 , $F_HSS_BGR_PIN) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   2 ,   9 ,   2 ,   1 , $F_HSS_BGR_PIN) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 , $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   1 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   2 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+01 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   3 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   4 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   5 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   6 , $F_HSS_BGR_PIN          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   7 ,   1 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   3 ,   8 ,   1 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_HSS_BGR_PIN                ) = -160
   force.attr.2d.pos.y (   1 ,      $F_HSS_BGR_PIN                ) = 460
   force.attr.2d.ori (    1 ,       $F_HSS_BGR_PIN                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = -160, -160
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = -160, -160
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = 430, 443

forcegroup.end (                    $G_GP_adv                     )                           ! $G_GP_adv
forcegroup.txt (                    $G_GP_adv                     ) = 'Gear Pair advanced'    ! Comment

forcegroup.begin (                  $G_GP_basic                   )                           ! $G_GP_basic
   force.type (                     $F_LSS_RNG_PLT1               ) = 204                     ! Type
   force.from (                     $F_LSS_RNG_PLT1               ) = $M_LSS_PLT1_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT1               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.disabled (                 $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_RNG_PLT1               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_RNG_PLT1               ) = $P_LSS_PLT1_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_LSS_RNG_PLT1               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_LSS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT1               ) = -890
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT1               ) = 190
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT1               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = -1130, -907
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = 190, 190
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = -870, -870, -873
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT1) = 620, 190, 190

   force.type (                     $F_LSS_RNG_PLT2               ) = 204                     ! Type
   force.from (                     $F_LSS_RNG_PLT2               ) = $M_LSS_PLT2_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT2               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.disabled (                 $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_RNG_PLT2               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_RNG_PLT2               ) = $P_LSS_PLT2_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_LSS_RNG_PLT2               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_LSS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT2               ) = -890
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT2               ) = 230
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT2               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = -1060, -907
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = 230, 230
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = -810, -810, -820, -840, -850, -860, -863, -873
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT2) = 620, 230, 230, 230, 230, 230, 230, 230

   force.type (                     $F_LSS_RNG_PLT3               ) = 204                     ! Type
   force.from (                     $F_LSS_RNG_PLT3               ) = $M_LSS_PLT3_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT3               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.disabled (                 $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_RNG_PLT3               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_RNG_PLT3               ) = $P_LSS_PLT3_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_LSS_RNG_PLT3               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_LSS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT3               ) = -890
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT3               ) = 280
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT3               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = -990, -907
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = 280, 280
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = -800, -800, -820, -840, -850, -860, -863, -873
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT3) = 620, 280, 280, 280, 280, 280, 280, 280

   force.type (                     $F_LSS_RNG_PLT4               ) = 204                     ! Type
   force.from (                     $F_LSS_RNG_PLT4               ) = $M_LSS_PLT4_GW          ! From Marker
   force.to (                       $F_LSS_RNG_PLT4               ) = $M_HSG_LSS_RNG_GW       ! To Marker
   force.disabled (                 $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_RNG_PLT4               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_RNG_PLT4               ) = $P_LSS_PLT4_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_LSS_RNG_PLT4               ) = $P_HSG_LSS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_LSS_RNG_PLT4               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_RNG_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_RNG_PLT4               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_RNG_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_RNG_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_RNG_PLT4   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_RNG_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_RNG_PLT4               ) = -890
   force.attr.2d.pos.y (   1 ,      $F_LSS_RNG_PLT4               ) = 330
   force.attr.2d.ori (    1 ,       $F_LSS_RNG_PLT4               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = -920, -907
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = 330, 330
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = -790, -790, -820, -840, -850, -860, -863, -873
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_RNG_PLT4) = 620, 330, 330, 330, 330, 330, 330, 330

   force.type (                     $F_LSS_SUN_PLT1               ) = 204                     ! Type
   force.from (                     $F_LSS_SUN_PLT1               ) = $M_LSS_PLT1_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT1               ) = $M_LSS_SUN_GW           ! To Marker
   force.disabled (                 $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_SUN_PLT1               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_SUN_PLT1               ) = $P_LSS_SUN_GW           ! [-] Geometry Gear 1
   force.par (            7 ,       $F_LSS_SUN_PLT1               ) = $P_LSS_PLT1_GW          ! [-] Geometry Gear 2
   force.par (           31 ,       $F_LSS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT1               ) = -1170
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT1               ) = 150
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = -1170, -1170
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = 170, 167
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = -1170, -1170
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT1) = 90, 133

   force.type (                     $F_LSS_SUN_PLT2               ) = 204                     ! Type
   force.from (                     $F_LSS_SUN_PLT2               ) = $M_LSS_PLT2_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT2               ) = $M_LSS_SUN_GW           ! To Marker
   force.disabled (                 $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_SUN_PLT2               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_SUN_PLT2               ) = $P_LSS_SUN_GW           ! [-] Geometry Gear 1
   force.par (            7 ,       $F_LSS_SUN_PLT2               ) = $P_LSS_PLT2_GW          ! [-] Geometry Gear 2
   force.par (           31 ,       $F_LSS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT2               ) = -1100
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT2               ) = 150
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = -1100, -1100
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = 220, 167
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = -1100, -1100
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT2) = 90, 133

   force.type (                     $F_LSS_SUN_PLT3               ) = 204                     ! Type
   force.from (                     $F_LSS_SUN_PLT3               ) = $M_LSS_PLT3_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT3               ) = $M_LSS_SUN_GW           ! To Marker
   force.disabled (                 $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_SUN_PLT3               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_SUN_PLT3               ) = $P_LSS_SUN_GW           ! [-] Geometry Gear 1
   force.par (            7 ,       $F_LSS_SUN_PLT3               ) = $P_LSS_PLT3_GW          ! [-] Geometry Gear 2
   force.par (           31 ,       $F_LSS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT3               ) = -1030
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT3               ) = 150
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT3               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = -1030, -1030
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = 260, 167
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = -1030, -1030
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT3) = 90, 133

   force.type (                     $F_LSS_SUN_PLT4               ) = 204                     ! Type
   force.from (                     $F_LSS_SUN_PLT4               ) = $M_LSS_PLT4_GW          ! From Marker
   force.to (                       $F_LSS_SUN_PLT4               ) = $M_LSS_SUN_GW           ! To Marker
   force.disabled (                 $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_LSS_SUN_PLT4               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_LSS_SUN_PLT4               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_LSS_SUN_PLT4               ) = $P_LSS_SUN_GW           ! [-] Geometry Gear 1
   force.par (            7 ,       $F_LSS_SUN_PLT4               ) = $P_LSS_PLT4_GW          ! [-] Geometry Gear 2
   force.par (           31 ,       $F_LSS_SUN_PLT4               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_LSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_LSS_SUN_PLT4               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_LSS_SUN_PLT4               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_LSS_SUN_PLT4               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_LSS_SUN_PLT4         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_LSS_SUN_PLT4   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_LSS_SUN_PLT4   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_LSS_SUN_PLT4               ) = -960
   force.attr.2d.pos.y (   1 ,      $F_LSS_SUN_PLT4               ) = 150
   force.attr.2d.ori (    1 ,       $F_LSS_SUN_PLT4               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = -960, -960
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = 310, 167
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = -960, -960
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_LSS_SUN_PLT4) = 90, 133

   force.type (                     $F_IMS_RNG_PLT1               ) = 204                     ! Type
   force.from (                     $F_IMS_RNG_PLT1               ) = $M_IMS_PLT1_GW          ! From Marker
   force.to (                       $F_IMS_RNG_PLT1               ) = $M_HSG_IMS_RNG_GW       ! To Marker
   force.disabled (                 $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_IMS_RNG_PLT1               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_IMS_RNG_PLT1               ) = $P_IMS_PLT1_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_IMS_RNG_PLT1               ) = $P_HSG_IMS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_IMS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_IMS_RNG_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_IMS_RNG_PLT1               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_RNG_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_RNG_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_RNG_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_RNG_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_RNG_PLT1               ) = -470
   force.attr.2d.pos.y (   1 ,      $F_IMS_RNG_PLT1               ) = 180
   force.attr.2d.ori (    1 ,       $F_IMS_RNG_PLT1               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = -630, -487
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = 180, 180
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = -400, -400, -420, -430, -440, -443, -453
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT1) = 620, 180, 180, 180, 180, 180, 180

   force.type (                     $F_IMS_RNG_PLT2               ) = 204                     ! Type
   force.from (                     $F_IMS_RNG_PLT2               ) = $M_IMS_PLT2_GW          ! From Marker
   force.to (                       $F_IMS_RNG_PLT2               ) = $M_HSG_IMS_RNG_GW       ! To Marker
   force.disabled (                 $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_IMS_RNG_PLT2               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_IMS_RNG_PLT2               ) = $P_IMS_PLT2_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_IMS_RNG_PLT2               ) = $P_HSG_IMS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_IMS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_IMS_RNG_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_IMS_RNG_PLT2               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_RNG_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_RNG_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_RNG_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_RNG_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_RNG_PLT2               ) = -470
   force.attr.2d.pos.y (   1 ,      $F_IMS_RNG_PLT2               ) = 260
   force.attr.2d.ori (    1 ,       $F_IMS_RNG_PLT2               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = -560, -487
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = 260, 260
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = -450, -450, -453
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT2) = 620, 260, 260

   force.type (                     $F_IMS_RNG_PLT3               ) = 204                     ! Type
   force.from (                     $F_IMS_RNG_PLT3               ) = $M_IMS_PLT3_GW          ! From Marker
   force.to (                       $F_IMS_RNG_PLT3               ) = $M_HSG_IMS_RNG_GW       ! To Marker
   force.disabled (                 $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_IMS_RNG_PLT3               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_IMS_RNG_PLT3               ) = $P_IMS_PLT3_GW          ! [-] Geometry Gear 1 (external)
   force.par (            7 ,       $F_IMS_RNG_PLT3               ) = $P_HSG_IMS_RNG_GW       ! [-] Geometry Gear 2 (internal)
   force.par (           31 ,       $F_IMS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_C_RNG_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_IMS_RNG_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_IMS_RNG_PLT3               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_RNG_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_RNG_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_RNG_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_RNG_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_RNG_PLT3               ) = -470
   force.attr.2d.pos.y (   1 ,      $F_IMS_RNG_PLT3               ) = 320
   force.attr.2d.ori (    1 ,       $F_IMS_RNG_PLT3               ) = 0
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = -490, -487
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = 320, 320
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = -389.99999999999989, -389.99999999999989, -400, -420, -430, -440, -443, -453
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_RNG_PLT3) = 620, 320, 320, 320, 320, 320, 320, 320

   force.type (                     $F_IMS_SUN_PLT1               ) = 204                     ! Type
   force.from (                     $F_IMS_SUN_PLT1               ) = $M_IMS_PLT1_GW          ! From Marker
   force.to (                       $F_IMS_SUN_PLT1               ) = $M_IMS_SUN_GW           ! To Marker
   force.disabled (                 $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_IMS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_IMS_SUN_PLT1               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_IMS_SUN_PLT1               ) = $P_IMS_PLT1_GW          ! [-] Geometry Gear 1
   force.par (            7 ,       $F_IMS_SUN_PLT1               ) = $P_IMS_SUN_GW           ! [-] Geometry Gear 2
   force.par (           31 ,       $F_IMS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_IMS_SUN_PLT1               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_IMS_SUN_PLT1               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_SUN_PLT1               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_SUN_PLT1         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_SUN_PLT1   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_SUN_PLT1   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_SUN_PLT1               ) = -670
   force.attr.2d.pos.y (   1 ,      $F_IMS_SUN_PLT1               ) = 150
   force.attr.2d.ori (    1 ,       $F_IMS_SUN_PLT1               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = -670, -670
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = 170, 167
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = -670, -670
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT1) = 90, 133

   force.type (                     $F_IMS_SUN_PLT2               ) = 204                     ! Type
   force.from (                     $F_IMS_SUN_PLT2               ) = $M_IMS_PLT2_GW          ! From Marker
   force.to (                       $F_IMS_SUN_PLT2               ) = $M_IMS_SUN_GW           ! To Marker
   force.disabled (                 $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_IMS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_IMS_SUN_PLT2               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_IMS_SUN_PLT2               ) = $P_IMS_PLT2_GW          ! [-] Geometry Gear 1
   force.par (            7 ,       $F_IMS_SUN_PLT2               ) = $P_IMS_SUN_GW           ! [-] Geometry Gear 2
   force.par (           31 ,       $F_IMS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_IMS_SUN_PLT2               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_IMS_SUN_PLT2               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_SUN_PLT2               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_SUN_PLT2         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_SUN_PLT2   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_SUN_PLT2   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_SUN_PLT2               ) = -600
   force.attr.2d.pos.y (   1 ,      $F_IMS_SUN_PLT2               ) = 150
   force.attr.2d.ori (    1 ,       $F_IMS_SUN_PLT2               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = -600, -600
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = 240, 167
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = -600, -600
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT2) = 90, 133

   force.type (                     $F_IMS_SUN_PLT3               ) = 204                     ! Type
   force.from (                     $F_IMS_SUN_PLT3               ) = $M_IMS_PLT3_GW          ! From Marker
   force.to (                       $F_IMS_SUN_PLT3               ) = $M_IMS_SUN_GW           ! To Marker
   force.disabled (                 $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_IMS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_IMS_SUN_PLT3               ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_IMS_SUN_PLT3               ) = $P_IMS_PLT3_GW          ! [-] Geometry Gear 1
   force.par (            7 ,       $F_IMS_SUN_PLT3               ) = $P_IMS_SUN_GW           ! [-] Geometry Gear 2
   force.par (           31 ,       $F_IMS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_C_SUN_PLT ! [N/m] Stiffness constant
   force.par (           35 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_IMS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_IMS_SUN_PLT3               ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_IMS_SUN_PLT3               ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_IMS_SUN_PLT3               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_IMS_SUN_PLT3         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_IMS_SUN_PLT3   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_IMS_SUN_PLT3   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_IMS_SUN_PLT3               ) = -530
   force.attr.2d.pos.y (   1 ,      $F_IMS_SUN_PLT3               ) = 160
   force.attr.2d.ori (    1 ,       $F_IMS_SUN_PLT3               ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = -530, -530
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = 310, 177
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = -530, -530
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_IMS_SUN_PLT3) = 90, 143

   force.type (                     $F_HSS_BGR_PIN                ) = 204                     ! Type
   force.from (                     $F_HSS_BGR_PIN                ) = $M_HSS_BGR_GW           ! From Marker
   force.to (                       $F_HSS_BGR_PIN                ) = $M_HSS_HSH_GW           ! To Marker
   force.disabled (                 $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   force.par (            2 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Gear type
   force.par (            3 ,       $F_HSS_BGR_PIN                ) = 2.00000000000000000E+00 ! [-] Modeling approach
   force.par (            5 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Geometry input mode
   force.par (            6 ,       $F_HSS_BGR_PIN                ) = $P_HSS_BGR_GW           ! [-] Geometry Gear 1
   force.par (            7 ,       $F_HSS_BGR_PIN                ) = $P_HSS_HSH_GW           ! [-] Geometry Gear 2
   force.par (           31 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Stiffness method
   force.par (           32 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_HSS.$_C ! [N/m] Stiffness constant
   force.par (           35 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_HSS.$_D_IN ! [Ns/m] Damping constant
   force.par (           36 ,       $F_HSS_BGR_PIN                ) = $G_FE.$G_GPA.$G_ALL.$_D_FULL ! [m] Damping transition depth
   force.par (           40 ,       $F_HSS_BGR_PIN                ) = 0.00000000000000000E+00 ! [-] Power loss input mode
   force.plot.par (       1 ,       $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 , $F_HSS_BGR_PIN                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 , $F_HSS_BGR_PIN          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   2 , $F_HSS_BGR_PIN    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   3 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   4 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   5 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   6 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   7 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   1 ,   8 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.plot.par (       1 ,   1 ,   2 ,   1 , $F_HSS_BGR_PIN    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   force.attr.2d.pos.x (   1 ,      $F_HSS_BGR_PIN                ) = -180
   force.attr.2d.pos.y (   1 ,      $F_HSS_BGR_PIN                ) = 460
   force.attr.2d.ori (    1 ,       $F_HSS_BGR_PIN                ) = 270
   force.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = -180, -180
   force.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = 500, 477
   force.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = -180, -180
   force.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $F_HSS_BGR_PIN) = 430, 443

forcegroup.end (                    $G_GP_basic                   )                           ! $G_GP_basic
forcegroup.txt (                    $G_GP_basic                   ) = 'Gear Pair basic'       ! Comment

!**********************************************************************
! Connection Elements
!**********************************************************************
connectgroup.begin (                $G_SHAFT                      )                           ! $G_SHAFT
   connect.type (                   $CTN_HSG                      ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_HSG                      ) = -2.46253126327610524E-04 ! Position states
   connect.st.pos (       2 ,       $CTN_HSG                      ) = 4.34232923304312454E-03 ! Position states
   connect.st.pos (       3 ,       $CTN_HSG                      ) = 2.34535819150114575E-03 ! Position states
   connect.st.pos (       4 ,       $CTN_HSG                      ) = 4.69969478605538449E-01 ! Position states
   connect.st.pos (       5 ,       $CTN_HSG                      ) = 1.09922993757791522E-03 ! Position states
   connect.st.pos (       6 ,       $CTN_HSG                      ) = -4.47935947065289906E-03 ! Position states
   connect.st.vel (       1 ,       $CTN_HSG                      ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_HSG                      ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_HSG                      ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_HSG                      ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_HSG                      ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_HSG                      ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_HSG                      ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_HSG                      ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_HSG                      ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_HSG                      ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_HSG                      ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_HSG                      ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_HSG                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_HSG                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_HSG                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_HSG                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_HSG                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_HSG                      ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_HSG                      ) = -5.23532347428463845E-16 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_HSG                      ) = 1.70522783478320546E-13 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_HSG                      ) = -2.84616971683120979E-14 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_HSG                      ) = -2.72799062317474392E-12 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_HSG                      ) = 7.83954418137387347E-15 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_HSG                      ) = 1.25530314497435015E-13 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_HSG                      ) = $M_Isys_INTERFACE_MFR_GBX ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_HSG                      ) = $M_HSG_JNT              ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_HSG                      ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_HSG                      ) = $G_DOF.$G_HSG.$_TLT     ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_HSG                      ) = $G_DOF.$G_HSG.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_HSG                      ) = $G_DOF.$G_HSG.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_HSG                      ) = $G_DOF.$G_HSG.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_HSG                      ) = -680
   connect.attr.2d.pos.y (   1 ,    $CTN_HSG                      ) = 720
   connect.attr.2d.ori (   1 ,      $CTN_HSG                      ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_HSG) = -680, -680
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_HSG) = 800, 737
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_HSG  ) = -680, -680
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_HSG  ) = 660, 703

   connect.type (                   $CTN_LSS_PLC                  ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_LSS_PLC                  ) = 2.09280889884365119E-04 ! Position states
   connect.st.pos (       2 ,       $CTN_LSS_PLC                  ) = -2.59220828191142334E-06 ! Position states
   connect.st.pos (       3 ,       $CTN_LSS_PLC                  ) = 2.93677789702131808E-08 ! Position states
   connect.st.pos (       4 ,       $CTN_LSS_PLC                  ) = 3.33257368408743414E-08 ! Position states
   connect.st.pos (       5 ,       $CTN_LSS_PLC                  ) = -1.67831587339634054E-08 ! Position states
   connect.st.pos (       6 ,       $CTN_LSS_PLC                  ) = -1.45685747641725492E-05 ! Position states
   connect.st.vel (       1 ,       $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_LSS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_PLC                  ) = -7.54896195841379734E-17 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_PLC                  ) = 9.39309932708114804E-16 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_PLC                  ) = -3.42465788615820054E-18 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_PLC                  ) = -6.17780948000487703E-20 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_PLC                  ) = -9.99049746750388245E-18 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_PLC                  ) = 6.13221568887750622E-15 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_LSS_PLC                  ) = $M_HSG_LSS_PLC          ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_PLC                  ) = $M_LSS_PLC_HSG          ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_PLC                  ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_LSS_PLC                  ) = $G_DOF.$G_LSS.$G_PLC.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_LSS_PLC                  ) = $G_DOF.$G_LSS.$G_PLC.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_LSS_PLC                  ) = $G_DOF.$G_LSS.$G_PLC.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_LSS_PLC                  ) = $G_DOF.$G_LSS.$G_PLC.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_PLC                  ) = -1050
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_PLC                  ) = 580
   connect.attr.2d.ori (   1 ,      $CTN_LSS_PLC                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLC) = -1050, -1050
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLC) = 620, 597
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLC) = -1050, -1050
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLC) = 540, 563

   connect.type (                   $CTN_LSS_PLT1                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_LSS_PLT1                 ) = 1.85985496271553666E-04 ! Position states
   connect.st.pos (       2 ,       $CTN_LSS_PLT1                 ) = -3.71694002047005536E-13 ! Position states
   connect.st.pos (       3 ,       $CTN_LSS_PLT1                 ) = 9.16250954815492473E-09 ! Position states
   connect.st.pos (       4 ,       $CTN_LSS_PLT1                 ) = 7.57436797457184630E-09 ! Position states
   connect.st.pos (       5 ,       $CTN_LSS_PLT1                 ) = -2.27853979780249235E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_LSS_PLT1                 ) = -1.74635990422359547E-06 ! Position states
   connect.st.vel (       1 ,       $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_LSS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_PLT1                 ) = 5.60946828254011327E-19 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_PLT1                 ) = -9.37623607356835084E-21 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_PLT1                 ) = 3.62144276412405384E-19 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_PLT1                 ) = -1.09545132798688073E-21 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_PLT1                 ) = 1.27283822653222947E-29 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_PLT1                 ) = -1.73109983726210360E-33 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_LSS_PLT1                 ) = $M_LSS_PLC_PLT1         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_PLT1                 ) = $M_LSS_PLT1_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_PLT1                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_LSS_PLT1                 ) = $G_DOF.$G_LSS.$G_PLT.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_LSS_PLT1                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_LSS_PLT1                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_LSS_PLT1                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_PLT1                 ) = -1160
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_PLT1                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_LSS_PLT1                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT1) = -1160, -1160
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT1) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT1) = -1160, -1160
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT1) = 430, 443

   connect.type (                   $CTN_LSS_PLT2                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_LSS_PLT2                 ) = -4.62594811179481216E-02 ! Position states
   connect.st.pos (       2 ,       $CTN_LSS_PLT2                 ) = 9.16064031644564058E-09 ! Position states
   connect.st.pos (       3 ,       $CTN_LSS_PLT2                 ) = 3.58352056246924738E-13 ! Position states
   connect.st.pos (       4 ,       $CTN_LSS_PLT2                 ) = 9.13513039858686180E-09 ! Position states
   connect.st.pos (       5 ,       $CTN_LSS_PLT2                 ) = -1.74635993489851037E-06 ! Position states
   connect.st.pos (       6 ,       $CTN_LSS_PLT2                 ) = 2.27847233293233224E-09 ! Position states
   connect.st.vel (       1 ,       $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_LSS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_PLT2                 ) = -6.37793089605477683E-18 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_PLT2                 ) = -1.35112720771415092E-16 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_PLT2                 ) = -1.60595636483322281E-15 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_PLT2                 ) = -1.09532208941340895E-21 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_PLT2                 ) = 6.47938673249580310E-19 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_PLT2                 ) = 1.39196592170284709E-17 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_LSS_PLT2                 ) = $M_LSS_PLC_PLT2         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_PLT2                 ) = $M_LSS_PLT2_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_PLT2                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_LSS_PLT2                 ) = $G_DOF.$G_LSS.$G_PLT.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_LSS_PLT2                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_LSS_PLT2                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_LSS_PLT2                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_PLT2                 ) = -1090
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_PLT2                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_LSS_PLT2                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT2) = -1090, -1090
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT2) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT2) = -1090, -1090
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT2) = 430, 443

   connect.type (                   $CTN_LSS_PLT3                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_LSS_PLT3                 ) = 9.24765723347511781E-02 ! Position states
   connect.st.pos (       2 ,       $CTN_LSS_PLT3                 ) = 3.50824164838600083E-13 ! Position states
   connect.st.pos (       3 ,       $CTN_LSS_PLT3                 ) = -9.16252221516301864E-09 ! Position states
   connect.st.pos (       4 ,       $CTN_LSS_PLT3                 ) = -2.23734065310855236E-08 ! Position states
   connect.st.pos (       5 ,       $CTN_LSS_PLT3                 ) = 2.27853449645374951E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_LSS_PLT3                 ) = 1.74635990323466650E-06 ! Position states
   connect.st.vel (       1 ,       $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_LSS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_PLT3                 ) = 5.68370408666767421E-14 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_PLT3                 ) = -9.37167245373173121E-16 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_PLT3                 ) = -4.11362347098403845E-16 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_PLT3                 ) = -1.09570220372827308E-21 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_PLT3                 ) = -7.13230940892257048E-18 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_PLT3                 ) = -2.23658911551860750E-16 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_LSS_PLT3                 ) = $M_LSS_PLC_PLT3         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_PLT3                 ) = $M_LSS_PLT3_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_PLT3                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_LSS_PLT3                 ) = $G_DOF.$G_LSS.$G_PLT.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_LSS_PLT3                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_LSS_PLT3                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_LSS_PLT3                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_PLT3                 ) = -1020
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_PLT3                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_LSS_PLT3                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT3) = -1020, -1020
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT3) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT3) = -1020, -1020
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT3) = 430, 443

   connect.type (                   $CTN_LSS_PLT4                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_LSS_PLT4                 ) = 4.62835187001146495E-02 ! Position states
   connect.st.pos (       2 ,       $CTN_LSS_PLT4                 ) = -9.16187464848164066E-09 ! Position states
   connect.st.pos (       3 ,       $CTN_LSS_PLT4                 ) = -3.47723968971794997E-13 ! Position states
   connect.st.pos (       4 ,       $CTN_LSS_PLT4                 ) = 6.01168554373428075E-09 ! Position states
   connect.st.pos (       5 ,       $CTN_LSS_PLT4                 ) = 1.74635991625082233E-06 ! Position states
   connect.st.pos (       6 ,       $CTN_LSS_PLT4                 ) = -2.27882088642092414E-09 ! Position states
   connect.st.vel (       1 ,       $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_LSS_PLT4                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_PLT4                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_PLT4                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_PLT4                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_PLT4                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_PLT4                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_PLT4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_PLT4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_PLT4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_PLT4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_PLT4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_PLT4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_PLT4                 ) = -6.37787757912020732E-18 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_PLT4                 ) = -3.22354400635362722E-16 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_PLT4                 ) = -1.49309083768476124E-17 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_PLT4                 ) = -1.09557668543757120E-21 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_PLT4                 ) = -6.45638683324140284E-19 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_PLT4                 ) = 1.38627615501063534E-17 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_LSS_PLT4                 ) = $M_LSS_PLC_PLT4         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_PLT4                 ) = $M_LSS_PLT4_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_PLT4                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_LSS_PLT4                 ) = $G_DOF.$G_LSS.$G_PLT.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_LSS_PLT4                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_LSS_PLT4                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_LSS_PLT4                 ) = $G_DOF.$G_LSS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_PLT4                 ) = -950
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_PLT4                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_LSS_PLT4                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT4) = -950, -950
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT4) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT4) = -950, -950
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_PLT4) = 430, 443

   connect.type (                   $CTN_LSS_SUN                  ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_LSS_SUN                  ) = 1.11152733085983423E-08 ! Position states
   connect.st.pos (       2 ,       $CTN_LSS_SUN                  ) = -8.33629830037968093E-07 ! Position states
   connect.st.pos (       3 ,       $CTN_LSS_SUN                  ) = -1.40841471422662336E-10 ! Position states
   connect.st.pos (       4 ,       $CTN_LSS_SUN                  ) = -1.21654754985496570E-07 ! Position states
   connect.st.pos (       5 ,       $CTN_LSS_SUN                  ) = 1.02095699870074083E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_LSS_SUN                  ) = -1.55586145695462619E-06 ! Position states
   connect.st.vel (       1 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_SUN                  ) = 8.24802870268481532E-14 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_SUN                  ) = 1.93946586223113945E-14 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_SUN                  ) = -1.54851893239051686E-13 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_SUN                  ) = 4.25154945329679752E-17 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_SUN                  ) = -1.04768220200103615E-13 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_SUN                  ) = -1.56966117025964313E-14 ! Constraint forces (locked directions)
   connect.disabled (               $CTN_LSS_SUN                  ) = $G_DOF.$G_LSS.$G_SUN.$_SCN_SHAFT_ACTIVE ! Disabled
   connect.par (          2 ,   2 , $CTN_LSS_SUN                  ) = $M_IMS_PLC_LSS_SUN      ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_SUN                  ) = $M_LSS_SUN_IMS_PLC      ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_LSS_SUN                  ) = $G_DOF.$G_LSS.$G_SUN.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_LSS_SUN                  ) = $G_DOF.$G_LSS.$G_SUN.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_LSS_SUN                  ) = $G_DOF.$G_LSS.$G_SUN.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_LSS_SUN                  ) = $G_DOF.$G_LSS.$G_SUN.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_SUN                  ) = -760
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_SUN                  ) = 280
   connect.attr.2d.ori (   1 ,      $CTN_LSS_SUN                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = -760, -760
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = 500, 297
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = -760, -760
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = 90, 263

   connect.type (                   $CTN_IMS_PLC                  ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_IMS_PLC                  ) = 2.35828548998430612E-04 ! Position states
   connect.st.pos (       2 ,       $CTN_IMS_PLC                  ) = -8.85718215715199927E-06 ! Position states
   connect.st.pos (       3 ,       $CTN_IMS_PLC                  ) = 5.34822688778959540E-09 ! Position states
   connect.st.pos (       4 ,       $CTN_IMS_PLC                  ) = -4.39489428379611384E-07 ! Position states
   connect.st.pos (       5 ,       $CTN_IMS_PLC                  ) = -5.03451756517136361E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_IMS_PLC                  ) = -5.82199195500128077E-06 ! Position states
   connect.st.vel (       1 ,       $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_IMS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_IMS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_IMS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_IMS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_IMS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_IMS_PLC                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_IMS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_IMS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_IMS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_IMS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_IMS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_IMS_PLC                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_IMS_PLC                  ) = -4.54747351411552152E-13 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_IMS_PLC                  ) = 2.89858951088013483E-14 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_IMS_PLC                  ) = 3.42316959941310488E-17 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_IMS_PLC                  ) = 2.84217072945093378E-14 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_IMS_PLC                  ) = -1.13188180547195244E-19 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_IMS_PLC                  ) = -1.27768898249904809E-15 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_IMS_PLC                  ) = $M_HSG_IMS_PLC          ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_IMS_PLC                  ) = $M_IMS_PLC_HSG          ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_IMS_PLC                  ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_IMS_PLC                  ) = $G_DOF.$G_IMS.$G_PLC.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_IMS_PLC                  ) = $G_DOF.$G_IMS.$G_PLC.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_IMS_PLC                  ) = $G_DOF.$G_IMS.$G_PLC.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_IMS_PLC                  ) = $G_DOF.$G_IMS.$G_PLC.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_IMS_PLC                  ) = -620
   connect.attr.2d.pos.y (   1 ,    $CTN_IMS_PLC                  ) = 580
   connect.attr.2d.ori (   1 ,      $CTN_IMS_PLC                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLC) = -620, -620
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLC) = 620, 597
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLC) = -620, -620
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLC) = 540, 563

   connect.type (                   $CTN_IMS_PLT1                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_IMS_PLT1                 ) = -8.49078779284869606E-02 ! Position states
   connect.st.pos (       2 ,       $CTN_IMS_PLT1                 ) = 5.49053593136561742E-08 ! Position states
   connect.st.pos (       3 ,       $CTN_IMS_PLT1                 ) = 6.56685605407117596E-09 ! Position states
   connect.st.pos (       4 ,       $CTN_IMS_PLT1                 ) = -4.49415454451457480E-08 ! Position states
   connect.st.pos (       5 ,       $CTN_IMS_PLT1                 ) = -4.19215911666450951E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_IMS_PLT1                 ) = -6.46226669991240436E-07 ! Position states
   connect.st.vel (       1 ,       $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_IMS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_IMS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_IMS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_IMS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_IMS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_IMS_PLT1                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_IMS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_IMS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_IMS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_IMS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_IMS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_IMS_PLT1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_IMS_PLT1                 ) = -7.11418221178169572E-14 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_IMS_PLT1                 ) = -9.68735272423118428E-15 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_IMS_PLT1                 ) = 8.46238135741730964E-16 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_IMS_PLT1                 ) = -2.69079231069747104E-15 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_IMS_PLT1                 ) = 6.11250654549123058E-18 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_IMS_PLT1                 ) = 7.18169792431683049E-17 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_IMS_PLT1                 ) = $M_IMS_PLC_PLT1         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_IMS_PLT1                 ) = $M_IMS_PLT1_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_IMS_PLT1                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_IMS_PLT1                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_X ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_IMS_PLT1                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_IMS_PLT1                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_IMS_PLT1                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_IMS_PLT1                 ) = -660
   connect.attr.2d.pos.y (   1 ,    $CTN_IMS_PLT1                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_IMS_PLT1                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT1) = -660, -660
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT1) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT1) = -660, -660
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT1) = 430, 443

   connect.type (                   $CTN_IMS_PLT2                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_IMS_PLT2                 ) = -3.19820012786295216E+00 ! Position states
   connect.st.pos (       2 ,       $CTN_IMS_PLT2                 ) = -2.63104302978749186E-08 ! Position states
   connect.st.pos (       3 ,       $CTN_IMS_PLT2                 ) = -1.25775723798918857E-07 ! Position states
   connect.st.pos (       4 ,       $CTN_IMS_PLT2                 ) = -4.19942395011559293E-08 ! Position states
   connect.st.pos (       5 ,       $CTN_IMS_PLT2                 ) = -5.10209834362316326E-07 ! Position states
   connect.st.pos (       6 ,       $CTN_IMS_PLT2                 ) = 3.19594751848652257E-07 ! Position states
   connect.st.vel (       1 ,       $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_IMS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_IMS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_IMS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_IMS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_IMS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_IMS_PLT2                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_IMS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_IMS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_IMS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_IMS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_IMS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_IMS_PLT2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_IMS_PLT2                 ) = 4.10499296543940887E-15 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_IMS_PLT2                 ) = -1.91363484306832992E-14 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_IMS_PLT2                 ) = 1.06456597594565817E-14 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_IMS_PLT2                 ) = -9.14435352378033598E-16 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_IMS_PLT2                 ) = 7.25340387152309554E-16 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_IMS_PLT2                 ) = 1.66509383327296684E-15 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_IMS_PLT2                 ) = $M_IMS_PLC_PLT2         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_IMS_PLT2                 ) = $M_IMS_PLT2_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_IMS_PLT2                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_IMS_PLT2                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_X ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_IMS_PLT2                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_IMS_PLT2                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_IMS_PLT2                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_IMS_PLT2                 ) = -590
   connect.attr.2d.pos.y (   1 ,    $CTN_IMS_PLT2                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_IMS_PLT2                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT2) = -590, -590
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT2) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT2) = -590, -590
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT2) = 430, 443

   connect.type (                   $CTN_IMS_PLT3                 ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_IMS_PLT3                 ) = -2.83025965976737778E-02 ! Position states
   connect.st.pos (       2 ,       $CTN_IMS_PLT3                 ) = -3.30248231274485008E-08 ! Position states
   connect.st.pos (       3 ,       $CTN_IMS_PLT3                 ) = 4.39140315846424345E-08 ! Position states
   connect.st.pos (       4 ,       $CTN_IMS_PLT3                 ) = -4.28044146304854177E-08 ! Position states
   connect.st.pos (       5 ,       $CTN_IMS_PLT3                 ) = 5.45602355974172892E-07 ! Position states
   connect.st.pos (       6 ,       $CTN_IMS_PLT3                 ) = 3.25487573712338319E-07 ! Position states
   connect.st.vel (       1 ,       $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_IMS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_IMS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_IMS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_IMS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_IMS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_IMS_PLT3                 ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_IMS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_IMS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_IMS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_IMS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_IMS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_IMS_PLT3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_IMS_PLT3                 ) = 5.24414302597410625E-15 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_IMS_PLT3                 ) = -1.16156318688575600E-14 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_IMS_PLT3                 ) = 7.16863731085441698E-15 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_IMS_PLT3                 ) = 1.34539621538690514E-15 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_IMS_PLT3                 ) = -1.63175294549469216E-16 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_IMS_PLT3                 ) = -6.12233908020465850E-16 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_IMS_PLT3                 ) = $M_IMS_PLC_PLT3         ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_IMS_PLT3                 ) = $M_IMS_PLT3_PLC         ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_IMS_PLT3                 ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_IMS_PLT3                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_X ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_IMS_PLT3                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_IMS_PLT3                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_IMS_PLT3                 ) = $G_DOF.$G_IMS.$G_PLT.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_IMS_PLT3                 ) = -520
   connect.attr.2d.pos.y (   1 ,    $CTN_IMS_PLT3                 ) = 460
   connect.attr.2d.ori (   1 ,      $CTN_IMS_PLT3                 ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT3) = -520, -520
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT3) = 500, 477
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT3) = -520, -520
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_PLT3) = 430, 443

   connect.type (                   $CTN_IMS_SUN                  ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_IMS_SUN                  ) = -7.78731194843697044E-11 ! Position states
   connect.st.pos (       2 ,       $CTN_IMS_SUN                  ) = -2.98498986492799064E-07 ! Position states
   connect.st.pos (       3 ,       $CTN_IMS_SUN                  ) = 9.72315619584053944E-08 ! Position states
   connect.st.pos (       4 ,       $CTN_IMS_SUN                  ) = 3.00388988603504392E-09 ! Position states
   connect.st.pos (       5 ,       $CTN_IMS_SUN                  ) = -2.15159893490003039E-07 ! Position states
   connect.st.pos (       6 ,       $CTN_IMS_SUN                  ) = -6.64111207942857804E-07 ! Position states
   connect.st.vel (       1 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_IMS_SUN                  ) = -5.73996751567173411E-18 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_IMS_SUN                  ) = 9.07934758971760825E-15 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_IMS_SUN                  ) = 3.01546259722356876E-15 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_IMS_SUN                  ) = -1.47964146616533851E-17 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_IMS_SUN                  ) = 1.74380661518354668E-15 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_IMS_SUN                  ) = -3.13017317918218746E-15 ! Constraint forces (locked directions)
   connect.disabled (               $CTN_IMS_SUN                  ) = $G_DOF.$G_IMS.$G_SUN.$_SCN_SHAFT_ACTIVE ! Disabled
   connect.par (          2 ,   2 , $CTN_IMS_SUN                  ) = $M_HSS_BGR_IMS_SUN      ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_IMS_SUN                  ) = $M_IMS_SUN_HSS_BGR      ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_IMS_SUN                  ) = $G_DOF.$G_IMS.$G_SUN.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_IMS_SUN                  ) = $G_DOF.$G_IMS.$G_SUN.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_IMS_SUN                  ) = $G_DOF.$G_IMS.$G_SUN.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_IMS_SUN                  ) = $G_DOF.$G_IMS.$G_SUN.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_IMS_SUN                  ) = -320
   connect.attr.2d.pos.y (   1 ,    $CTN_IMS_SUN                  ) = 290
   connect.attr.2d.ori (   1 ,      $CTN_IMS_SUN                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = -320, -320
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = 500, 307
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = -320, -320
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = 90, 273

   connect.type (                   $CTN_HSS_BGR                  ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_HSS_BGR                  ) = 3.14395117597489338E-01 ! Position states
   connect.st.pos (       2 ,       $CTN_HSS_BGR                  ) = -4.03873108845006173E-06 ! Position states
   connect.st.pos (       3 ,       $CTN_HSS_BGR                  ) = 1.62900581696620709E-09 ! Position states
   connect.st.pos (       4 ,       $CTN_HSS_BGR                  ) = 1.13211379312985492E-08 ! Position states
   connect.st.pos (       5 ,       $CTN_HSS_BGR                  ) = 3.56384969476071592E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_HSS_BGR                  ) = -2.51349127182666556E-06 ! Position states
   connect.st.vel (       1 ,       $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_HSS_BGR                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_HSS_BGR                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_HSS_BGR                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_HSS_BGR                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_HSS_BGR                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_HSS_BGR                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_HSS_BGR                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_HSS_BGR                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_HSS_BGR                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_HSS_BGR                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_HSS_BGR                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_HSS_BGR                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_HSS_BGR                  ) = -6.10376625498273604E-21 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_HSS_BGR                  ) = -1.91832904260411272E-18 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_HSS_BGR                  ) = 2.93982495423463902E-17 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_HSS_BGR                  ) = -1.20702836132917165E-14 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_HSS_BGR                  ) = -5.01469590630284398E-16 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_HSS_BGR                  ) = 7.16195406676833428E-17 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_HSS_BGR                  ) = $M_HSG_HSS_BGR          ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_HSS_BGR                  ) = $M_HSS_BGR_JNT          ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_HSS_BGR                  ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_HSS_BGR                  ) = $G_DOF.$G_HSS.$G_BGR.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_HSS_BGR                  ) = $G_DOF.$G_HSS.$G_BGR.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_HSS_BGR                  ) = $G_DOF.$G_HSS.$G_BGR.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_HSS_BGR                  ) = $G_DOF.$G_HSS.$G_BGR.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_HSS_BGR                  ) = -250
   connect.attr.2d.pos.y (   1 ,    $CTN_HSS_BGR                  ) = 580
   connect.attr.2d.ori (   1 ,      $CTN_HSS_BGR                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_HSS_BGR) = -250, -250
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_HSS_BGR) = 620, 597
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_HSS_BGR) = -250, -250
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_HSS_BGR) = 540, 563

   connect.type (                   $CTN_HSS_HSH                  ) = 63                      ! Type
   connect.st.pos (       1 ,       $CTN_HSS_HSH                  ) = -1.14065831435541720E+00 ! Position states
   connect.st.pos (       2 ,       $CTN_HSS_HSH                  ) = 4.62928413149740169E-07 ! Position states
   connect.st.pos (       3 ,       $CTN_HSS_HSH                  ) = -2.43538833727428298E-09 ! Position states
   connect.st.pos (       4 ,       $CTN_HSS_HSH                  ) = 3.11998464018395236E-09 ! Position states
   connect.st.pos (       5 ,       $CTN_HSS_HSH                  ) = -2.80918425680050423E-09 ! Position states
   connect.st.pos (       6 ,       $CTN_HSS_HSH                  ) = -4.21826058669507554E-07 ! Position states
   connect.st.vel (       1 ,       $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       2 ,       $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       3 ,       $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       4 ,       $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       5 ,       $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.vel (       6 ,       $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! Velocity states
   connect.st.equi (      1 ,       $CTN_HSS_HSH                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_HSS_HSH                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_HSS_HSH                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_HSS_HSH                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_HSS_HSH                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_HSS_HSH                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_HSS_HSH                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_HSS_HSH                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_HSS_HSH                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_HSS_HSH                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_HSS_HSH                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_HSS_HSH                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_HSS_HSH                  ) = -2.30719752132889452E-19 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_HSS_HSH                  ) = -1.81921967862096076E-15 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_HSS_HSH                  ) = -3.52344728596593946E-15 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_HSS_HSH                  ) = 1.66015412035222108E-16 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_HSS_HSH                  ) = 5.71506555751620084E-16 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_HSS_HSH                  ) = 2.58545500017309878E-16 ! Constraint forces (locked directions)
   connect.par (          2 ,   2 , $CTN_HSS_HSH                  ) = $M_HSG_HSS_HSH          ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_HSS_HSH                  ) = $M_HSS_HSH_JNT          ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_HSS_HSH                  ) = 0.00000000000000000E+00 ! [-] Axis of rotation
   connect.par (          3 ,   5 , $CTN_HSS_HSH                  ) = $G_DOF.$G_HSS.$G_HSH.$_TLT ! [-] Tilting
   connect.par (          3 ,   7 , $CTN_HSS_HSH                  ) = $G_DOF.$G_HSS.$G_HSH.$_TRANS_X ! [-] Translation in x
   connect.par (          3 ,   8 , $CTN_HSS_HSH                  ) = $G_DOF.$G_HSS.$G_HSH.$_TRANS_Y ! [-] Translation in y
   connect.par (          3 ,   9 , $CTN_HSS_HSH                  ) = $G_DOF.$G_HSS.$G_HSH.$_TRANS_Z ! [-] Translation in z
   connect.attr.2d.pos.x (   1 ,    $CTN_HSS_HSH                  ) = -60
   connect.attr.2d.pos.y (   1 ,    $CTN_HSS_HSH                  ) = 520
   connect.attr.2d.ori (   1 ,      $CTN_HSS_HSH                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_HSS_HSH) = -60, -60
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_HSS_HSH) = 620, 537
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_HSS_HSH) = -60, -60
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_HSS_HSH) = 430, 503

connectgroup.end (                  $G_SHAFT                      )                           ! $G_SHAFT

connectgroup.begin (                $G_RIGID                      )                           ! $G_RIGID
   connect.type (                   $CTN_LSS_SUN                  ) = 2                       ! Type
   connect.st.equi (      1 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_LSS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_LSS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.disabled (               $CTN_LSS_SUN                  ) = $G_DOF.$G_LSS.$G_SUN.$_SCN_RIGID_ACTIVE ! Disabled
   connect.par (          2 ,   2 , $CTN_LSS_SUN                  ) = $M_IMS_PLC_LSS_SUN      ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_LSS_SUN                  ) = $M_LSS_SUN_IMS_PLC      ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [m] Translation in x
   connect.par (          3 ,   4 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [m] Translation in y
   connect.par (          3 ,   5 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [m] Translation in z
   connect.par (          3 ,   6 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [-] Rotation sequence
   connect.par (          3 ,   7 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [rad] Rotation alpha
   connect.par (          3 ,   8 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [rad] Rotation beta
   connect.par (          3 ,   9 , $CTN_LSS_SUN                  ) = 0.00000000000000000E+00 ! [rad] Rotation gamma
   connect.attr.2d.pos.x (   1 ,    $CTN_LSS_SUN                  ) = -720
   connect.attr.2d.pos.y (   1 ,    $CTN_LSS_SUN                  ) = 280
   connect.attr.2d.ori (   1 ,      $CTN_LSS_SUN                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = -720, -720
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = 500, 297
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = -730, -730, -720, -720, -720
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_LSS_SUN) = 90, 102.875, 102.875, 125.75, 263

   connect.type (                   $CTN_IMS_SUN                  ) = 2                       ! Type
   connect.st.equi (      1 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      2 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      3 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      4 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      5 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.equi (      6 ,       $CTN_IMS_SUN                  ) = 0                       ! Equilibrium calculation flags
   connect.st.lin (       1 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       2 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       3 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       4 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       5 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.lin (       6 ,       $CTN_IMS_SUN                  ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
   connect.st.force (     1 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     2 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     3 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     4 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     5 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.st.force (     6 ,       $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
   connect.disabled (               $CTN_IMS_SUN                  ) = $G_DOF.$G_IMS.$G_SUN.$_SCN_RIGID_ACTIVE ! Disabled
   connect.par (          2 ,   2 , $CTN_IMS_SUN                  ) = $M_HSS_BGR_IMS_SUN      ! [-] From Marker
   connect.par (          2 ,   3 , $CTN_IMS_SUN                  ) = $M_IMS_SUN_HSS_BGR      ! [-] To Marker
   connect.par (          3 ,   3 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [m] Translation in x
   connect.par (          3 ,   4 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [m] Translation in y
   connect.par (          3 ,   5 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [m] Translation in z
   connect.par (          3 ,   6 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [-] Rotation sequence
   connect.par (          3 ,   7 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [rad] Rotation alpha
   connect.par (          3 ,   8 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [rad] Rotation beta
   connect.par (          3 ,   9 , $CTN_IMS_SUN                  ) = 0.00000000000000000E+00 ! [rad] Rotation gamma
   connect.attr.2d.pos.x (   1 ,    $CTN_IMS_SUN                  ) = -290
   connect.attr.2d.pos.y (   1 ,    $CTN_IMS_SUN                  ) = 290
   connect.attr.2d.ori (   1 ,      $CTN_IMS_SUN                  ) = 270
   connect.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = -290, -290
   connect.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = 500, 307
   connect.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = -300, -290, -290
   connect.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $CTN_IMS_SUN) = 80, 80, 273

connectgroup.end (                  $G_RIGID                      )                           ! $G_RIGID

!**********************************************************************
! Initial Conditions
!**********************************************************************
inicongroup.begin (                 $G_GEAR_adv                   )                           ! $G_GEAR_adv
   inicon.type (                    $IC_LSS_RNG_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT1              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT1        ) = $G_GP_adv.$F_LSS_RNG_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT1              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_LSS_RNG_PLT2              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT2              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT2        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT2        ) = $G_GP_adv.$F_LSS_RNG_PLT2 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT2              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_LSS_RNG_PLT3              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT3              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT3        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT3        ) = $G_GP_adv.$F_LSS_RNG_PLT3 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT3              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_LSS_RNG_PLT4              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT4              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT4        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT4        ) = $G_GP_adv.$F_LSS_RNG_PLT4 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT4        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT4        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT4              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_LSS_SUN_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_SUN_PLT1              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_SUN_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_SUN_PLT1        ) = $G_GP_adv.$F_LSS_SUN_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_SUN_PLT1              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_IMS_RNG_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_RNG_PLT1              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_RNG_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_RNG_PLT1        ) = $G_GP_adv.$F_IMS_RNG_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_RNG_PLT1              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_IMS_RNG_PLT2              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_RNG_PLT2              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_RNG_PLT2        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_RNG_PLT2        ) = $G_GP_adv.$F_IMS_RNG_PLT2 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_RNG_PLT2              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_IMS_RNG_PLT3              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_RNG_PLT3              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_RNG_PLT3        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_RNG_PLT3        ) = $G_GP_adv.$F_IMS_RNG_PLT3 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_RNG_PLT3              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_IMS_SUN_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_SUN_PLT1              ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_SUN_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_SUN_PLT1        ) = $G_GP_adv.$F_IMS_SUN_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_SUN_PLT1              ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

   inicon.type (                    $IC_HSS_BGR_PIN               ) = 12                      ! Type
   inicon.disabled (                $IC_HSS_BGR_PIN               ) = $G_FE.$G_GPA.$_GPA_225_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_HSS_BGR_PIN         ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_HSS_BGR_PIN         ) = $G_GP_adv.$F_HSS_BGR_PIN ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_HSS_BGR_PIN         ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_HSS_BGR_PIN         ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_HSS_BGR_PIN               ) = $G_IC.$_GP_TTH_MATCHING ! [-] Tooth matching

inicongroup.end (                   $G_GEAR_adv                   )                           ! $G_GEAR_adv

inicongroup.begin (                 $G_GEAR_basic                 )                           ! $G_GEAR_basic
   inicon.type (                    $IC_LSS_RNG_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT1              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT1        ) = $G_GP_basic.$F_LSS_RNG_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_LSS_RNG_PLT2              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT2              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT2        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT2        ) = $G_GP_basic.$F_LSS_RNG_PLT2 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_LSS_RNG_PLT3              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT3              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT3        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT3        ) = $G_GP_basic.$F_LSS_RNG_PLT3 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_LSS_RNG_PLT4              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_RNG_PLT4              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_RNG_PLT4        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_RNG_PLT4        ) = $G_GP_basic.$F_LSS_RNG_PLT4 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_RNG_PLT4        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_RNG_PLT4        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_RNG_PLT4              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_LSS_SUN_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_LSS_SUN_PLT1              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_LSS_SUN_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_LSS_SUN_PLT1        ) = $G_GP_basic.$F_LSS_SUN_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_LSS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_LSS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_LSS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_IMS_RNG_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_RNG_PLT1              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_RNG_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_RNG_PLT1        ) = $G_GP_basic.$F_IMS_RNG_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_RNG_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_RNG_PLT1              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_IMS_RNG_PLT2              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_RNG_PLT2              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_RNG_PLT2        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_RNG_PLT2        ) = $G_GP_basic.$F_IMS_RNG_PLT2 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_RNG_PLT2        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_RNG_PLT2              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_IMS_RNG_PLT3              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_RNG_PLT3              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_RNG_PLT3        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_RNG_PLT3        ) = $G_GP_basic.$F_IMS_RNG_PLT3 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_RNG_PLT3        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_RNG_PLT3              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_IMS_SUN_PLT1              ) = 12                      ! Type
   inicon.disabled (                $IC_IMS_SUN_PLT1              ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_IMS_SUN_PLT1        ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_IMS_SUN_PLT1        ) = $G_GP_basic.$F_IMS_SUN_PLT1 ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_IMS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_IMS_SUN_PLT1        ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_IMS_SUN_PLT1              ) = 0.00000000000000000E+00 ! [-] Tooth matching

   inicon.type (                    $IC_HSS_BGR_PIN               ) = 12                      ! Type
   inicon.disabled (                $IC_HSS_BGR_PIN               ) = $G_FE.$G_GPA.$_GPA_204_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   1 ,   1 , $IC_HSS_BGR_PIN         ) = 0.00000000000000000E+00 ! [-] Interface type
   inicon.par (           1 ,   1 ,   2 , $IC_HSS_BGR_PIN         ) = $G_GP_basic.$F_HSS_BGR_PIN ! [-] Gear Force Element
   inicon.par (           1 ,   1 ,   3 , $IC_HSS_BGR_PIN         ) = null                    ! [-] Gear Primitive 1
   inicon.par (           1 ,   1 ,   4 , $IC_HSS_BGR_PIN         ) = null                    ! [-] Gear Primitive 2
   inicon.par (           2 ,       $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] Configuration
   inicon.par (           2 ,   1 , $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 , $IC_HSS_BGR_PIN               ) = 0.00000000000000000E+00 ! [-] Tooth matching

inicongroup.end (                   $G_GEAR_basic                 )                           ! $G_GEAR_basic

inicongroup.begin (                 $G_CTN_SHAFT                  )                           ! $G_CTN_SHAFT
   inicon.type (                    $IC_HSG                       ) = 2                       ! Type
   inicon.par (           1 ,       $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_HSG                       ) = $G_SHAFT.$CTN_HSG       ! [-] Connection
   inicon.par (           2 ,       $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_HSG                 ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_HSG                 ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_HSG                 ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_HSG                 ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_HSG                 ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_HSG                       ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_HSG                 ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_HSG                 ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_LSS_PLC                   ) = 2                       ! Type
   inicon.disabled (                $IC_LSS_PLC                   ) = 0                       ! Disabled
   inicon.par (           1 ,       $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_LSS_PLC                   ) = $G_SHAFT.$CTN_LSS_PLC   ! [-] Connection
   inicon.par (           2 ,       $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_LSS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_LSS_PLC             ) = $G_IC.$_LSS_PLC_ANG     ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_LSS_PLC             ) = $G_IC.$_LSS_PLC_VEL     ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_LSS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_LSS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_LSS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_LSS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_LSS_PLC                   ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_LSS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_LSS_PLC             ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_LSS_PLT1                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_LSS_PLT1                  ) = $G_SHAFT.$CTN_LSS_PLT1  ! [-] Connection
   inicon.par (           2 ,       $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_LSS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_LSS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_LSS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_LSS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_LSS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_LSS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_LSS_PLT1            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_LSS_PLT2                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_LSS_PLT2                  ) = $G_SHAFT.$CTN_LSS_PLT2  ! [-] Connection
   inicon.par (           2 ,       $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_LSS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_LSS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_LSS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_LSS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_LSS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_LSS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_LSS_PLT2            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_LSS_PLT3                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_LSS_PLT3                  ) = $G_SHAFT.$CTN_LSS_PLT3  ! [-] Connection
   inicon.par (           2 ,       $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_LSS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_LSS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_LSS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_LSS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_LSS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_LSS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_LSS_PLT3            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_LSS_PLT4                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_LSS_PLT4                  ) = $G_SHAFT.$CTN_LSS_PLT4  ! [-] Connection
   inicon.par (           2 ,       $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_LSS_PLT4            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_LSS_PLT4            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_LSS_PLT4            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_LSS_PLT4            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_LSS_PLT4                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_LSS_PLT4            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_LSS_PLT4            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_LSS_SUN                   ) = 2                       ! Type
   inicon.disabled (                $IC_LSS_SUN                   ) = $G_DOF.$G_LSS.$G_SUN.$_SCN_SHAFT_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_LSS_SUN                   ) = $G_SHAFT.$CTN_LSS_SUN   ! [-] Connection
   inicon.par (           2 ,       $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_LSS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_LSS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_LSS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_LSS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_LSS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_LSS_SUN                   ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_LSS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_LSS_SUN             ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_IMS_PLC                   ) = 2                       ! Type
   inicon.par (           1 ,       $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_IMS_PLC                   ) = $G_SHAFT.$CTN_IMS_PLC   ! [-] Connection
   inicon.par (           2 ,       $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_IMS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_IMS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_IMS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_IMS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_IMS_PLC                   ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_IMS_PLC             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_IMS_PLC             ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_IMS_PLT1                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_IMS_PLT1                  ) = $G_SHAFT.$CTN_IMS_PLT1  ! [-] Connection
   inicon.par (           2 ,       $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_IMS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_IMS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_IMS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_IMS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_IMS_PLT1                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_IMS_PLT1            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_IMS_PLT1            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_IMS_PLT2                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_IMS_PLT2                  ) = $G_SHAFT.$CTN_IMS_PLT2  ! [-] Connection
   inicon.par (           2 ,       $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_IMS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_IMS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_IMS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_IMS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_IMS_PLT2                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_IMS_PLT2            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_IMS_PLT2            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_IMS_PLT3                  ) = 2                       ! Type
   inicon.par (           1 ,       $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_IMS_PLT3                  ) = $G_SHAFT.$CTN_IMS_PLT3  ! [-] Connection
   inicon.par (           2 ,       $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_IMS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_IMS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_IMS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_IMS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_IMS_PLT3                  ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_IMS_PLT3            ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_IMS_PLT3            ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_IMS_SUN                   ) = 2                       ! Type
   inicon.disabled (                $IC_IMS_SUN                   ) = $G_DOF.$G_IMS.$G_SUN.$_SCN_SHAFT_ACTIVE ! Disabled
   inicon.par (           1 ,       $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_IMS_SUN                   ) = $G_SHAFT.$CTN_IMS_SUN   ! [-] Connection
   inicon.par (           2 ,       $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_IMS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_IMS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_IMS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_IMS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_IMS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_IMS_SUN                   ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_IMS_SUN             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_IMS_SUN             ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_HSS_BGR                   ) = 2                       ! Type
   inicon.par (           1 ,       $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_HSS_BGR                   ) = $G_SHAFT.$CTN_HSS_BGR   ! [-] Connection
   inicon.par (           2 ,       $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_HSS_BGR             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_HSS_BGR             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_HSS_BGR             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_HSS_BGR             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_HSS_BGR                   ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_HSS_BGR             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_HSS_BGR             ) = 0.00000000000000000E+00 ! [m/s] Velocity

   inicon.type (                    $IC_HSS_HSH                   ) = 2                       ! Type
   inicon.disabled (                $IC_HSS_HSH                   ) = 0                       ! Disabled
   inicon.par (           1 ,       $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] General
   inicon.par (           1 ,   2 , $IC_HSS_HSH                   ) = $G_SHAFT.$CTN_HSS_HSH   ! [-] Connection
   inicon.par (           2 ,       $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] States
   inicon.par (           2 ,   1 , $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] Rotation alpha
   inicon.par (           2 ,   1 ,   1 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   1 ,   2 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   1 ,   3 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   2 , $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] Tilting beta
   inicon.par (           2 ,   2 ,   1 , $IC_HSS_HSH             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   2 ,   2 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   2 ,   3 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   3 , $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] Tilting gamma
   inicon.par (           2 ,   3 ,   1 , $IC_HSS_HSH             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   3 ,   2 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [rad] Position
   inicon.par (           2 ,   3 ,   3 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [rad/s] Velocity
   inicon.par (           2 ,   4 , $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] Translation in x
   inicon.par (           2 ,   4 ,   1 , $IC_HSS_HSH             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   4 ,   2 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   4 ,   3 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   5 , $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] Translation in y
   inicon.par (           2 ,   5 ,   1 , $IC_HSS_HSH             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   5 ,   2 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   5 ,   3 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [m/s] Velocity
   inicon.par (           2 ,   6 , $IC_HSS_HSH                   ) = 0.00000000000000000E+00 ! [-] Translation in z
   inicon.par (           2 ,   6 ,   1 , $IC_HSS_HSH             ) = 3.00000000000000000E+00 ! [-] Condition
   inicon.par (           2 ,   6 ,   2 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [m] Position
   inicon.par (           2 ,   6 ,   3 , $IC_HSS_HSH             ) = 0.00000000000000000E+00 ! [m/s] Velocity

inicongroup.end (                   $G_CTN_SHAFT                  )                           ! $G_CTN_SHAFT

!**********************************************************************
! Input Functions
!**********************************************************************
ifctn.x (                 1 ,       $I_HSG_modal_damping          ) = { dimless($G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_HSG_modal_damping          ) = { dimless($G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_HSG_modal_damping          ) = { dimless($G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_HSG_modal_damping          ) = { dimless($G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_HSG_modal_damping          ) = { dimless($G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_HSG_modal_damping          ) = { dimless($G_BP.$G_HSG.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_HSG_modal_damping          ) = $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_HSG_modal_damping          ) = $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_HSG_modal_damping          ) = $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_HSG_modal_damping          ) = $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_HSG_modal_damping          ) = $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_HSG_modal_damping          ) = $G_BP.$G_HSG.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_HSG_modal_damping          ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_HSG_modal_damping          ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_HSG_modal_damping          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_HSG_modal_damping          ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_HSG_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_HSG_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_HSG_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_HSG_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_HSG_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_HSG_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_HSG_modal_damping    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_HSG_modal_damping    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_HSG_modal_damping    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_LSS_RNG_modal_damping      ) = { dimless((0 Hz)) }     ! X values
ifctn.x (                 2 ,       $I_LSS_RNG_modal_damping      ) = { dimless((15 Hz)) }    ! X values
ifctn.x (                 3 ,       $I_LSS_RNG_modal_damping      ) = { dimless((30 Hz)) }    ! X values
ifctn.x (                 4 ,       $I_LSS_RNG_modal_damping      ) = { dimless((45 Hz)) }    ! X values
ifctn.x (                 5 ,       $I_LSS_RNG_modal_damping      ) = { dimless((60 Hz)) }    ! X values
ifctn.x (                 6 ,       $I_LSS_RNG_modal_damping      ) = { dimless((180 Hz)) }   ! X values
ifctn.y (                 1 ,       $I_LSS_RNG_modal_damping      ) = 2.99999999999999989E-02 ! Y values
ifctn.y (                 2 ,       $I_LSS_RNG_modal_damping      ) = 2.99999999999999989E-02 ! Y values
ifctn.y (                 3 ,       $I_LSS_RNG_modal_damping      ) = 2.99999999999999989E-02 ! Y values
ifctn.y (                 4 ,       $I_LSS_RNG_modal_damping      ) = 2.99999999999999989E-02 ! Y values
ifctn.y (                 5 ,       $I_LSS_RNG_modal_damping      ) = 1.49999999999999994E-01 ! Y values
ifctn.y (                 6 ,       $I_LSS_RNG_modal_damping      ) = 1.49999999999999994E-01 ! Y values
ifctn.intpol.type (                 $I_LSS_RNG_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_LSS_RNG_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_LSS_RNG_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_LSS_RNG_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_LSS_RNG_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_LSS_RNG_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_LSS_RNG_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_LSS_RNG_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_LSS_RNG_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_LSS_RNG_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_LSS_RNG_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_LSS_RNG_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_LSS_RNG_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_LSS_PLC_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_LSS_PLC_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_LSS_PLC_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_LSS_PLC_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_LSS_PLC_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_LSS_PLC_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_LSS_PLC_modal_damping      ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_LSS_PLC_modal_damping      ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_LSS_PLC_modal_damping      ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_LSS_PLC_modal_damping      ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_LSS_PLC_modal_damping      ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_LSS_PLC_modal_damping      ) = $G_BP.$G_LSS.$G_PLC.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_LSS_PLC_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_LSS_PLC_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_LSS_PLC_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_LSS_PLC_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_LSS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_LSS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_LSS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_LSS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_LSS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_LSS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_LSS_PLC_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_LSS_PLC_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_LSS_PLC_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_LSS_PLT_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_LSS_PLT_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_LSS_PLT_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_LSS_PLT_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_LSS_PLT_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_LSS_PLT_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_LSS_PLT_modal_damping      ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_LSS_PLT_modal_damping      ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_LSS_PLT_modal_damping      ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_LSS_PLT_modal_damping      ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_LSS_PLT_modal_damping      ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_LSS_PLT_modal_damping      ) = $G_BP.$G_LSS.$G_PLT.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_LSS_PLT_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_LSS_PLT_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_LSS_PLT_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_LSS_PLT_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_LSS_PLT_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_LSS_PLT_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_LSS_PLT_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_LSS_PLT_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_LSS_PLT_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_LSS_PLT_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_LSS_PLT_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_LSS_PLT_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_LSS_PLT_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_LSS_SUN_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_LSS_SUN_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_LSS_SUN_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_LSS_SUN_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_LSS_SUN_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_LSS_SUN_modal_damping      ) = { dimless($G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_LSS_SUN_modal_damping      ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_LSS_SUN_modal_damping      ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_LSS_SUN_modal_damping      ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_LSS_SUN_modal_damping      ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_LSS_SUN_modal_damping      ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_LSS_SUN_modal_damping      ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_LSS_SUN_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_LSS_SUN_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_LSS_SUN_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_LSS_SUN_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_LSS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_LSS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_LSS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_LSS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_LSS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_LSS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_LSS_SUN_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_LSS_SUN_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_LSS_SUN_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_IMS_PLC_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_IMS_PLC_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_IMS_PLC_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_IMS_PLC_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_IMS_PLC_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_IMS_PLC_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_IMS_PLC_modal_damping      ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_IMS_PLC_modal_damping      ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_IMS_PLC_modal_damping      ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_IMS_PLC_modal_damping      ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_IMS_PLC_modal_damping      ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_IMS_PLC_modal_damping      ) = $G_BP.$G_IMS.$G_PLC.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_IMS_PLC_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_IMS_PLC_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_IMS_PLC_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_IMS_PLC_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_IMS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_IMS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_IMS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_IMS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_IMS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_IMS_PLC_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_IMS_PLC_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_IMS_PLC_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_IMS_PLC_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_IMS_SUN_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_IMS_SUN_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_IMS_SUN_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_IMS_SUN_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_IMS_SUN_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_IMS_SUN_modal_damping      ) = { dimless($G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_IMS_SUN_modal_damping      ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_IMS_SUN_modal_damping      ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_IMS_SUN_modal_damping      ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_IMS_SUN_modal_damping      ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_IMS_SUN_modal_damping      ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_IMS_SUN_modal_damping      ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_IMS_SUN_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_IMS_SUN_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_IMS_SUN_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_IMS_SUN_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_IMS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_IMS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_IMS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_IMS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_IMS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_IMS_SUN_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_IMS_SUN_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_IMS_SUN_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_IMS_SUN_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctn.x (                 1 ,       $I_HSS_HSH_modal_damping      ) = { dimless($G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_HSS_HSH_modal_damping      ) = { dimless($G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_HSS_HSH_modal_damping      ) = { dimless($G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_HSS_HSH_modal_damping      ) = { dimless($G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_HSS_HSH_modal_damping      ) = { dimless($G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_HSS_HSH_modal_damping      ) = { dimless($G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_HSS_HSH_modal_damping      ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_HSS_HSH_modal_damping      ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_HSS_HSH_modal_damping      ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_HSS_HSH_modal_damping      ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_HSS_HSH_modal_damping      ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_HSS_HSH_modal_damping      ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_HSS_HSH_modal_damping      ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_HSS_HSH_modal_damping      ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_HSS_HSH_modal_damping      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_HSS_HSH_modal_damping      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_HSS_HSH_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_HSS_HSH_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_HSS_HSH_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_HSS_HSH_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_HSS_HSH_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_HSS_HSH_modal_damping      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_HSS_HSH_modal_damping) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_HSS_HSH_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_HSS_HSH_modal_damping) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

!**********************************************************************
! Result Elements
!**********************************************************************
result.container (                  $RS_RES_ALY                   ) = null                    ! Parent result element
result.type (                       $RS_RES_ALY                   ) = 22                      ! Type
result.par (              1 ,       $RS_RES_ALY                   ) = 2.00000000000000000E+00 ! [-] Number of Result channels
result.channel.indep.ele (   1 ,    $RS_RES_ALY                   ) = null                    ! Independent channel element
result.channel.par (      1 ,   1 , $RS_RES_ALY                   ) = 5.00000000000000000E+00 ! [-] Kind
result.channel.par (      3 ,   1 , $RS_RES_ALY                   ) = 0.00000000000000000E+00 ! [-] Direction
result.channel.par (      4 ,   1 , $RS_RES_ALY                   ) = $M_HSG_LSS_RNG          ! [-] From Marker
result.channel.par (      5 ,   1 , $RS_RES_ALY                   ) = $M_LSS_PLC_BRF          ! [-] To Marker
result.channel.par (      6 ,   1 , $RS_RES_ALY                   ) = $M_HSG_LSS_RNG          ! [-] Reference Marker
result.channel.indep.ele (   2 ,    $RS_RES_ALY                   ) = null                    ! Independent channel element
result.channel.par (      1 ,   2 , $RS_RES_ALY                   ) = 5.00000000000000000E+00 ! [-] Kind
result.channel.par (      3 ,   2 , $RS_RES_ALY                   ) = 0.00000000000000000E+00 ! [-] Direction
result.channel.par (      4 ,   2 , $RS_RES_ALY                   ) = $M_HSG_HSS_HSH          ! [-] From Marker
result.channel.par (      5 ,   2 , $RS_RES_ALY                   ) = $M_HSS_HSH_BRF          ! [-] To Marker
result.channel.par (      6 ,   2 , $RS_RES_ALY                   ) = $M_HSG_HSS_HSH          ! [-] Reference Marker

!**********************************************************************
! Senders
!**********************************************************************
sender.ref (                        $COM_S_________SUBVARS        ) = null                    ! Source object
sender.alias (                      $COM_S_________SUBVARS        ) = ''                      ! Alias

sender.ref (                        $COM_G_INTERFACE_G_032_GBX_G_PA_G_SCN__MSH_2_LSS_X) = $G_INTERFACE.$G_032_GBX.$G_PA.$G_SCN.$_MSH_2_LSS_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_032_GBX_G_HP_G_GBX_G_LSS__X) = $G_INTERFACE.$G_032_GBX.$G_HP.$G_GBX.$G_LSS.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_032_GBX_G_HL__GBX_I) = $G_INTERFACE.$G_032_GBX.$G_HL.$_GBX_I ! Source object

sender.ref (                        $COM_S_________MARKER         ) = null                    ! Source object
sender.alias (                      $COM_S_________MARKER         ) = ''                      ! Alias

sender.ref (                        $COM_M_INTERFACE_GBX_CPL      ) = $M_HSS_HSH_INTERFACE_GBX_CPL ! Source object

sender.ref (                        $COM_M_INTERFACE_GBX_MSH      ) = $M_LSS_PLC_INTERFACE_GBX_MSH ! Source object

!**********************************************************************
! Receivers
!**********************************************************************
receiver.ref (                      $COM_R_________SUBVARS        ) = null                    ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_01__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_01__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_01__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Z ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_02__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_02__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Y ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_02__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Z ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_PA_G_BR_G_MSH__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_GBX__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_MSH__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__R) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__ang) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_HL__TLT_ANG) = $G_INTERFACE.$G_031_MFR.$G_HL.$_TLT_ANG ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_HSG_G_SPB__D_O) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_O ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_HSG_G_SPB__D_I) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_I ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_HSG_G_SPB__L) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_L ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_MSH_G_BR__D_O) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_O ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_MSH_G_BR__D_I) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_I ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_031_MFR_G_3D_G_MSH_G_BR__L) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_L ! Destination object

receiver.ref (                      $COM_G_INTERFACE_G_034_CPL_G_PA_G_SCN__GBX_2_CPL_X) = $G_INTERFACE.$G_034_CPL.$G_PA.$G_SCN.$_GBX_2_CPL_X ! Destination object

receiver.ref (                      $COM_R_________MARKER         ) = null                    ! Destination object

receiver.ref (                      $COM_M_INTERFACE_MFR_GBX      ) = $M_Isys_INTERFACE_MFR_GBX ! Destination object

receiver.ref (                      $COM_M_INTERFACE_MFR_GBX_SPB1 ) = $M_Isys_INTERFACE_MFR_GBX_SPB1 ! Destination object

receiver.ref (                      $COM_M_INTERFACE_MFR_GBX_SPB2 ) = $M_Isys_INTERFACE_MFR_GBX_SPB2 ! Destination object

!**********************************************************************
! Materials
!**********************************************************************
material.type (                     $Mat_LSS_SUN                  ) = 1                       ! Type
material.par (            2 ,       $Mat_LSS_SUN                  ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_DEN ! [kg/m³] Density
material.par (            3 ,       $Mat_LSS_SUN                  ) = 0.00000000000000000E+00 ! [-] Input mode
material.par (            4 ,       $Mat_LSS_SUN                  ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_YMD ! [Pa] Young's modulus
material.par (            5 ,       $Mat_LSS_SUN                  ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_PRT ! [-] Poisson's ratio

material.type (                     $Mat_IMS_SUN                  ) = 1                       ! Type
material.par (            2 ,       $Mat_IMS_SUN                  ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_DEN ! [kg/m³] Density
material.par (            3 ,       $Mat_IMS_SUN                  ) = 0.00000000000000000E+00 ! [-] Input mode
material.par (            4 ,       $Mat_IMS_SUN                  ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_YMD ! [Pa] Young's modulus
material.par (            5 ,       $Mat_IMS_SUN                  ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_MAT.$_PRT ! [-] Poisson's ratio

material.type (                     $Mat_HSS_HSH                  ) = 1                       ! Type
material.par (            2 ,       $Mat_HSS_HSH                  ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT.$_DEN ! [kg/m³] Density
material.par (            3 ,       $Mat_HSS_HSH                  ) = 0.00000000000000000E+00 ! [-] Input mode
material.par (            4 ,       $Mat_HSS_HSH                  ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT.$_YMD ! [Pa] Young's modulus
material.par (            5 ,       $Mat_HSS_HSH                  ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_MAT.$_PRT ! [-] Poisson's ratio

!**********************************************************************
! Cross Sections
!**********************************************************************
xsection.type (                     $XSc_LSS_SUN_01               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_01               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_01               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_1 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_01               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_01               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_01               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_01         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_01         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_02               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_02               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_02               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_2 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_02               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_02               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_02               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_02         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_02         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_03               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_03               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_03               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_3 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_03               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_03               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_03               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_03         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_03         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_04               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_04               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_04               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_4 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_04               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_04               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_04               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_04         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_04         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_05               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_05               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_05               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_5 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_05               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_05               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_05               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_05         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_05         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_06               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_06               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_06               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_6 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_06               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_06               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_06               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_06         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_06         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_07               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_07               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_07               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_7 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_07               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_07               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_07               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_07         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_07         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_08               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_08               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_08               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_8 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_08               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_08               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_08               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_08         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_08         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_LSS_SUN_09               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_LSS_SUN_09               ) = $Mat_LSS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_LSS_SUN_09               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_9 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_LSS_SUN_09               ) = $G_BP.$G_LSS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_LSS_SUN_09               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_LSS_SUN_09               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_LSS_SUN_09         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_LSS_SUN_09         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_01               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_01               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_01               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_1 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_01               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_01               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_01               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_01         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_01         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_02               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_02               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_02               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_2 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_02               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_02               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_02               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_02         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_02         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_03               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_03               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_03               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_3 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_03               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_03               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_03               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_03         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_03         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_04               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_04               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_04               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_4 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_04               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_04               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_04               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_04         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_04         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_05               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_05               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_05               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_5 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_05               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_05               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_05               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_05         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_05         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_06               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_06               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_06               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_6 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_06               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_06               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_06               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_06         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_06         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_07               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_07               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_07               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_7 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_07               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_07               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_07               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_07         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_07         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_08               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_08               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_08               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_8 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_08               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_08               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_08               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_08         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_08         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_09               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_09               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_09               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_9 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_09               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_09               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_09               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_09         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_09         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_10               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_10               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_10               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_10 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_10               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_10               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_10               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_10         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_10         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_11               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_11               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_11               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_11 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_11               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_11               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_11               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_11         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_11         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_IMS_SUN_12               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_IMS_SUN_12               ) = $Mat_IMS_SUN            ! [-] Material
xsection.par (            3 ,       $XSc_IMS_SUN_12               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_O_12 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_IMS_SUN_12               ) = $G_BP.$G_IMS.$G_SUN.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_IMS_SUN_12               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_IMS_SUN_12               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_IMS_SUN_12         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_IMS_SUN_12         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_01               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_01               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_01               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_1 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_01               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_01               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes

xsection.type (                     $XSc_HSS_HSH_02               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_02               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_02               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_2 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_02               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_02               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_02               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_02         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_02         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_03               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_03               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_03               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_3 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_03               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_03               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_03               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_03         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_03         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_04               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_04               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_04               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_4 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_04               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_04               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_04               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_04         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_04         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_05               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_05               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_05               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_5 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_05               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_05               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_05               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_05         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_05         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_06               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_06               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_06               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_6 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_06               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_06               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_06               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_06         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_06         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_07               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_07               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_07               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_7 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_07               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_07               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_07               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_07         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_07         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_08               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_08               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_08               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_8 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_08               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_08               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_08               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_08         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_08         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_09               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_09               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_09               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_9 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_09               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_09               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_09               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_09         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_09         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_10               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_10               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_10               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_10 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_10               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_10               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_10               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_10         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_10         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_11               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_11               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_11               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_11 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_11               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_11               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_11               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_11         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_11         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_12               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_12               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_12               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_12 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_12               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_12               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_12               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_12         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_12         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_13               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_13               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_13               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_13 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_13               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_13               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_13               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_13         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_13         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_14               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_14               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_14               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_14 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_14               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_14               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_14               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_14         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_14         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_15               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_15               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_15               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_15 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_15               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_15               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_15               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_15         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_15         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

xsection.type (                     $XSc_HSS_HSH_16               ) = 2                       ! Type
xsection.par (            1 ,       $XSc_HSS_HSH_16               ) = $Mat_HSS_HSH            ! [-] Material
xsection.par (            3 ,       $XSc_HSS_HSH_16               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_O_16 ! [m] Outer diameter
xsection.par (            4 ,       $XSc_HSS_HSH_16               ) = $G_BP.$G_HSS.$G_HSH.$G_FLX.$G_SBM.$G_XSC.$_D_I ! [m] Inner diameter
xsection.par (            5 ,       $XSc_HSS_HSH_16               ) = 3.60000000000000000E+01 ! [-] Number of cross section nodes
xsection.plot.par (       1 ,       $XSc_HSS_HSH_16               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   1 ,   1 , $XSc_HSS_HSH_16         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
xsection.plot.par (       1 ,   2 ,   1 , $XSc_HSS_HSH_16         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter

                                                                                                                                                            
