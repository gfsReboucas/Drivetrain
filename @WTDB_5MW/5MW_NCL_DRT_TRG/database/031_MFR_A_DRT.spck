!file.version=3.3! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20200100
version.desc   = ''
version.build  = 82

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
searchpath (              2                                       ) = '../../../@NREL_5MW/input_functions'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
glob.rhs.tuning.type                                                = 0                       ! Formalism Tuning Type
glob.rhs.tuning.flags (   1                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   2                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   3                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   4                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   5                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   6                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   7                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   8                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (   9                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  10                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  11                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  12                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  13                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  14                                       ) = 1                       ! Formalism Tuning Flags
glob.rhs.tuning.flags (  15                                       ) = 1                       ! Formalism Tuning Flags
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
model.txt                                                           = 'Mainframe#Mainframe (detailed) for drivetrain analysis.[br]Switchable between rigid and flexible body.' ! Comment
glob.ifctn.bounds                                                   = 1                       ! Cubic spline boundary conditions
prop3d.bg.base.color.r                                              = 9.90000000000000000E+01 ! Background color (red component)
prop3d.bg.base.color.g                                              = 1.84000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.55000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = -1.82959709167480469E+01 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -2.61494216918945313E+01 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 1.37158355712890625E+01 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 5.30324757099151611E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = -1.91486462950706482E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -2.46567487716674805E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = 7.88221418857574463E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 3.14159274101257324E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 1.00000001490000004E-01 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 1.00000000000000000E+03 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved
view.stereo.active (                $V_WorkingView                ) = 0                       ! Stereo enabled
view.stereo.balance (               $V_WorkingView                ) = 1.00000000000000000E+00 ! Stereo balance
view.stereo.offset (                $V_WorkingView                ) = 1.00000000000000000E+00 ! Stereo offset

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

view.type (                         $V_perspective                ) = 0                       ! Projection type
view.pos (                1 ,       $V_perspective                ) = -7.55710672168061137E+00 ! Position
view.pos (                2 ,       $V_perspective                ) = -2.23003687942400575E+01 ! Position
view.pos (                3 ,       $V_perspective                ) = 7.26600708084879443E+00 ! Position
view.orient (             1 ,       $V_perspective                ) = 5.98538339138031006E-01 ! Orientation
view.orient (             2 ,       $V_perspective                ) = -1.13521769642829895E-01 ! Orientation
view.orient (             3 ,       $V_perspective                ) = -1.60114407539367676E-01 ! Orientation
view.orient (             4 ,       $V_perspective                ) = 7.76677608489990234E-01 ! Orientation
view.angle (                        $V_perspective                ) = 3.14159274101257324E-01 ! Lens angle
view.fclip.auto (                   $V_perspective                ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_perspective                ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_perspective                ) = 1.00000001490000004E-01 ! Front clipping plane value
view.bclip.value (                  $V_perspective                ) = 1.00000000000000000E+03 ! Back clipping plane value
view.rotcenter.type (               $V_perspective                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_perspective                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_perspective                ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 0.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 2 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force outpur values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.acc (                 $SLV_SolverSettings           ) = 1                       ! Body acceleration to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.eva.enabled (            $SLV_SolverSettings           ) = 1                       ! eva file generation 0 = disable; 1 = enable
slv.output.fileinlining.enabled (   $SLV_SolverSettings           ) = 0                       ! file inlining 0 = disable; 1 = enable
slv.compat.solver (                 $SLV_SolverSettings           ) = 1                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.init.tol (                      $SLV_SolverSettings           ) = 1.00000000000000002E-08 ! Tolerance used for Assemble System and Initial Conditions
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! SubVars
!**********************************************************************
subvargroup.begin (                 $G_PA                         )                           ! $G_PA
   subvargroup.begin (              $G_SPB                        )                           ! $G_PA.$G_SPB
      subvargroup.begin (           $G_GBX                        )                           ! $G_PA.$G_SPB.$G_GBX
         subvargroup.begin (        $G_01                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_01
            subvar.str (            $_X                           ) = '-0.470 m'              ! $G_PA.$G_SPB.$G_GBX.$G_01.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame (HP 4))' ! Comment

            subvar.str (            $_Y                           ) = '1.7000 m'              ! $G_PA.$G_SPB.$G_GBX.$G_01.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame (HP 4))' ! Comment

            subvar.str (            $_Z                           ) = '0 m'                   ! $G_PA.$G_SPB.$G_GBX.$G_01.$_Z, Definition
            subvar.txt (            $_Z                           ) = 'z-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame (HP 4))' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_01
         subvargroup.txt (          $G_01                         ) = 'SuPport Bolt 1'        ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_02
            subvar.str (            $_X                           ) = '-0.470 m'              ! $G_PA.$G_SPB.$G_GBX.$G_02.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame (HP 4))' ! Comment

            subvar.str (            $_Y                           ) = '-1.7000 m'             ! $G_PA.$G_SPB.$G_GBX.$G_02.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame (HP 4))' ! Comment

            subvar.str (            $_Z                           ) = '0 m'                   ! $G_PA.$G_SPB.$G_GBX.$G_02.$_Z, Definition
            subvar.txt (            $_Z                           ) = 'z-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame (HP 4))' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_PA.$G_SPB.$G_GBX.$G_02
         subvargroup.txt (          $G_02                         ) = 'SuPport Bolt 2'        ! Comment
      subvargroup.end (             $G_GBX                        )                           ! $G_PA.$G_SPB.$G_GBX
      subvargroup.txt (             $G_GBX                        ) = 'GearBoX'               ! Comment
   subvargroup.end (                $G_SPB                        )                           ! $G_PA.$G_SPB
   subvargroup.txt (                $G_SPB                        ) = 'SuPport Bolts'         ! Comment
   subvargroup.begin (              $G_BR                         )                           ! $G_PA.$G_BR
      subvargroup.begin (           $G_MSH                        )                           ! $G_PA.$G_BR.$G_MSH
         subvar.str (               $_X                           ) = '-1.5471 m'             ! $G_PA.$G_BR.$G_MSH.$_X, Definition
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of Main SHaft BeaRing (wrt. Main SHaft reference frame (HP 3))' ! Comment

      subvargroup.end (             $G_MSH                        )                           ! $G_PA.$G_BR.$G_MSH
      subvargroup.txt (             $G_MSH                        ) = 'Main SHaft'            ! Comment
   subvargroup.end (                $G_BR                         )                           ! $G_PA.$G_BR
   subvargroup.txt (                $G_BR                         ) = 'BeaRing'               ! Comment
   subvargroup.begin (              $G_BU                         )                           ! $G_PA.$G_BU
      subvargroup.begin (           $G_GEN                        )                           ! $G_PA.$G_BU.$G_GEN
         subvargroup.begin (        $G_01                         )                           ! $G_PA.$G_BU.$G_GEN.$G_01
            subvar.str (            $_X                           ) = '-0.9 m'                ! $G_PA.$G_BU.$G_GEN.$G_01.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STatoR BUshing 1 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Y                           ) = '0.69675 m'             ! $G_PA.$G_BU.$G_GEN.$G_01.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 1 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Z                           ) = '-0.667694 m'           ! $G_PA.$G_BU.$G_GEN.$G_01.$_Z, Definition
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 1 (wrt. GENerator reference frame (HP 6))' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_PA.$G_BU.$G_GEN.$G_01
         subvargroup.txt (          $G_01                         ) = 'STatoR BUshing 1'      ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_PA.$G_BU.$G_GEN.$G_02
            subvar.str (            $_X                           ) = '-0.9 m'                ! $G_PA.$G_BU.$G_GEN.$G_02.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 2 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Y                           ) = '-0.69675 m'            ! $G_PA.$G_BU.$G_GEN.$G_02.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 2 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Z                           ) = '-0.667694 m'           ! $G_PA.$G_BU.$G_GEN.$G_02.$_Z, Definition
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 2 (wrt. GENerator reference frame(HP 6))' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_PA.$G_BU.$G_GEN.$G_02
         subvargroup.txt (          $G_02                         ) = 'STatoR BUshing 2'      ! Comment
         subvargroup.begin (        $G_03                         )                           ! $G_PA.$G_BU.$G_GEN.$G_03
            subvar.str (            $_X                           ) = '0.9 m'                 ! $G_PA.$G_BU.$G_GEN.$G_03.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 3 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Y                           ) = '0.69675 m'             ! $G_PA.$G_BU.$G_GEN.$G_03.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 3 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Z                           ) = '-0.667694 m'           ! $G_PA.$G_BU.$G_GEN.$G_03.$_Z, Definition
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 3 (wrt. GENerator reference frame (HP 6))' ! Comment

         subvargroup.end (          $G_03                         )                           ! $G_PA.$G_BU.$G_GEN.$G_03
         subvargroup.txt (          $G_03                         ) = 'STatoR BUshing 3'      ! Comment
         subvargroup.begin (        $G_04                         )                           ! $G_PA.$G_BU.$G_GEN.$G_04
            subvar.str (            $_X                           ) = '0.9 m'                 ! $G_PA.$G_BU.$G_GEN.$G_04.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 4 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Y                           ) = '-0.69675 m'            ! $G_PA.$G_BU.$G_GEN.$G_04.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 4 (wrt. GENerator reference frame (HP 6))' ! Comment

            subvar.str (            $_Z                           ) = '-0.667694 m'           ! $G_PA.$G_BU.$G_GEN.$G_04.$_Z, Definition
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 4 (wrt. GENerator reference frame (HP 6))' ! Comment

         subvargroup.end (          $G_04                         )                           ! $G_PA.$G_BU.$G_GEN.$G_04
         subvargroup.txt (          $G_04                         ) = 'STatoR BUshing 4'      ! Comment
      subvargroup.end (             $G_GEN                        )                           ! $G_PA.$G_BU.$G_GEN
      subvargroup.txt (             $G_GEN                        ) = 'GENerator'             ! Comment
   subvargroup.end (                $G_BU                         )                           ! $G_PA.$G_BU
   subvargroup.txt (                $G_BU                         ) = 'BUshings'              ! Comment
subvargroup.end (                   $G_PA                         )                           ! $G_PA
subvargroup.txt (                   $G_PA                         ) = 'PArameters'            ! Comment

subvargroup.begin (                 $G_HP                         )                           ! $G_HP
   subvargroup.begin (              $G_DRT                        )                           ! $G_HP.$G_DRT
      subvar.str (                  $_X                           ) = '0 m'                   ! $G_HP.$G_DRT.$_X, Definition
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of DriveTRain reference marker, HP 0 (wrt. Main FRame reference frame)' ! Comment

      subvar.str (                  $_Z                           ) = '0 m'                   ! $G_HP.$G_DRT.$_Z, Definition
      subvar.status (               $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_Z                           ) = 'z-pos. of DriveTRain reference marker, HP 0 (wrt. Main FRame reference frame)' ! Comment

      subvar.str (                  $_ang                         ) = '0 deg'                 ! $G_HP.$G_DRT.$_ang, Definition
      subvar.status (               $_ang                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_ang                         ) = 'angle (about beta) of DriveTRain reference marker, HP 0 (wrt. Main FRame reference frame)' ! Comment

   subvargroup.end (                $G_DRT                        )                           ! $G_HP.$G_DRT
   subvargroup.txt (                $G_DRT                        ) = 'DRiveTrain'            ! Comment
   subvargroup.begin (              $G_HSG                        )                           ! $G_HP.$G_HSG
      subvar.str (                  $_X                           ) = '0.871048 m'            ! $G_HP.$G_HSG.$_X, Definition
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of HouSinG connection to Main FRame, HP 1 (wrt. Main FRame reference frame)' ! Comment

      subvar.str (                  $_Z                           ) = '-1.95509 m'            ! $G_HP.$G_HSG.$_Z, Definition
      subvar.status (               $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_Z                           ) = 'z-pos. HouSinG connection to Main FRame, HP 1 (wrt. Main FRame reference frame)' ! Comment

      subvar.str (                  $_ang                         ) = '-5 deg'                ! $G_HP.$G_HSG.$_ang, Definition
      subvar.txt (                  $_ang                         ) = 'angle (about beta) HouSinG connection to Main FRame, HP 1 (wrt. Main FRame reference frame)' ! Comment

   subvargroup.end (                $G_HSG                        )                           ! $G_HP.$G_HSG
   subvargroup.txt (                $G_HSG                        ) = 'HouSinG '              ! Comment
   subvargroup.begin (              $G_HUB                        )                           ! $G_HP.$G_HUB
      subvar.str (                  $_X                           ) = '-3.3191 m'             ! $G_HP.$G_HUB.$_X, Definition
      subvar.txt (                  $_X                           ) = 'x-pos. of Main SHaft connection to HUB; HP 2 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

   subvargroup.end (                $G_HUB                        )                           ! $G_HP.$G_HUB
   subvargroup.txt (                $G_HUB                        ) = 'HUB'                   ! Comment
   subvargroup.begin (              $G_MSH                        )                           ! $G_HP.$G_MSH
      subvar.str (                  $_X                           ) = '- 0.86 m'              ! $G_HP.$G_MSH.$_X, Definition
      subvar.txt (                  $_X                           ) = 'x-pos. of Main FRame connection to Main SHaft, HP 3 (wrt. DRiveTrain reference frame, HP 0); corresponds to Main SHaft reference frame' ! Comment

   subvargroup.end (                $G_MSH                        )                           ! $G_HP.$G_MSH
   subvargroup.txt (                $G_MSH                        ) = 'Main SHaft'            ! Comment
   subvargroup.begin (              $G_GBX                        )                           ! $G_HP.$G_GBX
      subvar.str (                  $_X                           ) = '0 m'                   ! $G_HP.$G_GBX.$_X, Definition
      subvar.txt (                  $_X                           ) = 'x-pos. of Main FRame connection to GearBoX, HP 4 (wrt. DriveTRain reference frame, HP 0); corresponds to GearBoX reference frame' ! Comment

   subvargroup.end (                $G_GBX                        )                           ! $G_HP.$G_GBX
   subvargroup.txt (                $G_GBX                        ) = 'GearBoX'               ! Comment
   subvargroup.begin (              $G_CPL                        )                           ! $G_HP.$G_CPL
      subvar.str (                  $_X                           ) = '2.89 m'                ! $G_HP.$G_CPL.$_X, Definition
      subvar.txt (                  $_X                           ) = 'x-pos. of CouPLing reference marker, HP 5 (wrt. to DRiveTrain reference frame, HP 0)' ! Comment

      subvar.str (                  $_R                           ) = '0.68 m'                ! $G_HP.$G_CPL.$_R, Definition
      subvar.txt (                  $_R                           ) = 'radial pos. of CouPLing reference marker, HP 5 (wrt. DriveTRain reference frame, HP 0)' ! Comment

      subvar.str (                  $_ang                         ) = '36 deg'                ! $G_HP.$G_CPL.$_ang, Definition
      subvar.txt (                  $_ang                         ) = 'offset angle (about alpha) of CouPLing reference marker, HP 5 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

   subvargroup.end (                $G_CPL                        )                           ! $G_HP.$G_CPL
   subvargroup.txt (                $G_CPL                        ) = 'CouPLing'              ! Comment
   subvargroup.begin (              $G_GEN                        )                           ! $G_HP.$G_GEN
      subvar.str (                  $_X                           ) = '5.2425 m'              ! $G_HP.$G_GEN.$_X, Definition
      subvar.status (               $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_X                           ) = 'x-pos. of Main FRame connection to GENerator, HP 6 (wrt. DriveTRain reference frame, HP 0); corresponds to GENerator reference frame' ! Comment

   subvargroup.end (                $G_GEN                        )                           ! $G_HP.$G_GEN
   subvargroup.txt (                $G_GEN                        ) = 'GENerator'             ! Comment
subvargroup.end (                   $G_HP                         )                           ! $G_HP
subvargroup.desc (        1 ,       $G_HP                         ) = ''                      ! Description
subvargroup.txt (                   $G_HP                         ) = 'Hard Points[br]0: DriveTRain[br]1: HouSinG[br]2: HUB[br]3: MainSHaft[br]4: GearBoX[br]4a: Low Speed Stage[br]4b: InterMediate Speed Stage[br]4c: High Speed Stage[br]5: CouPLing[br]6: GENerator[br]7: BRaKe' ! Comment

subvargroup.begin (                 $G_KP                         )                           ! $G_KP
   subvargroup.begin (              $G_MFR                        )                           ! $G_KP.$G_MFR
      subvargroup.begin (           $G_HSG                        )                           ! $G_KP.$G_MFR.$G_HSG
         subvar.str (               $_X                           ) = '$G_HP.$G_HSG.$_X'      ! $G_KP.$G_MFR.$G_HSG.$_X, Definition
         subvar.intent (            $_X                           ) = 2                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. HouSinG connection to Main FRame (wrt. Main FRame reference frame)' ! Comment

         subvar.str (               $_Z                           ) = '$G_HP.$G_HSG.$_Z'      ! $G_KP.$G_MFR.$G_HSG.$_Z, Definition
         subvar.intent (            $_Z                           ) = 2                       ! Intent
         subvar.status (            $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Z                           ) = 'z-pos. HouSinG connection to Main FRame (wrt. Main FRame reference frame)' ! Comment

         subvar.str (               $_ang                         ) = '$G_HP.$G_HSG.$_ang'    ! $G_KP.$G_MFR.$G_HSG.$_ang, Definition
         subvar.intent (            $_ang                         ) = 2                       ! Intent
         subvar.status (            $_ang                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_ang                         ) = 'angle (around beta) HouSinG connection to Main FRame (wrt. Main FRame reference frame)' ! Comment

      subvargroup.end (             $G_HSG                        )                           ! $G_KP.$G_MFR.$G_HSG
      subvargroup.txt (             $G_HSG                        ) = 'HouSinG'               ! Comment
      subvargroup.begin (           $G_DRT                        )                           ! $G_KP.$G_MFR.$G_DRT
         subvar.str (               $_X                           ) = '$G_HP.$G_DRT.$_X'      ! $G_KP.$G_MFR.$G_DRT.$_X, Definition
         subvar.intent (            $_X                           ) = 2                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of DriveTRain reference marker' ! Comment

         subvar.str (               $_Z                           ) = '$G_HP.$G_DRT.$_Z'      ! $G_KP.$G_MFR.$G_DRT.$_Z, Definition
         subvar.intent (            $_Z                           ) = 2                       ! Intent
         subvar.status (            $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Z                           ) = 'z-pos. of DriveTRain reference marker' ! Comment

         subvar.str (               $_ang                         ) = '$G_HP.$G_DRT.$_ang'    ! $G_KP.$G_MFR.$G_DRT.$_ang, Definition
         subvar.intent (            $_ang                         ) = 2                       ! Intent
         subvar.status (            $_ang                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_ang                         ) = 'angle (around beta) of DriveTRain reference marker' ! Comment

      subvargroup.end (             $G_DRT                        )                           ! $G_KP.$G_MFR.$G_DRT
      subvargroup.txt (             $G_DRT                        ) = 'DRiveTrain'            ! Comment
      subvargroup.begin (           $G_GBX                        )                           ! $G_KP.$G_MFR.$G_GBX
         subvar.str (               $_X                           ) = '$G_HP.$G_GBX.$_X'      ! $G_KP.$G_MFR.$G_GBX.$_X, Definition
         subvar.intent (            $_X                           ) = 2                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of Main FRame connection to GearBoX (wrt. DriveTRain reference frame)' ! Comment

      subvargroup.end (             $G_GBX                        )                           ! $G_KP.$G_MFR.$G_GBX
      subvargroup.txt (             $G_GBX                        ) = 'GearBoX'               ! Comment
      subvargroup.begin (           $G_GBX_SPB                    )                           ! $G_KP.$G_MFR.$G_GBX_SPB
         subvargroup.begin (        $G_01                         )                           ! $G_KP.$G_MFR.$G_GBX_SPB.$G_01
            subvar.str (            $_X                           ) = '$G_HP.$G_GBX.$_X +\n$G_PA.$G_SPB.$G_GBX.$G_01.$_X' ! $G_KP.$G_MFR.$G_GBX_SPB.$G_01.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of SuPport Bolt 1 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_Y' ! $G_KP.$G_MFR.$G_GBX_SPB.$G_01.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of SuPport Bolt 1 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_Z' ! $G_KP.$G_MFR.$G_GBX_SPB.$G_01.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.txt (            $_Z                           ) = 'z-pos. of SuPport Bolt 1 (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_KP.$G_MFR.$G_GBX_SPB.$G_01
         subvargroup.txt (          $G_01                         ) = 'SuPport Bolt 1'        ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_KP.$G_MFR.$G_GBX_SPB.$G_02
            subvar.str (            $_X                           ) = '$G_HP.$G_GBX.$_X +\n$G_PA.$G_SPB.$G_GBX.$G_02.$_X' ! $G_KP.$G_MFR.$G_GBX_SPB.$G_02.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of SuPport Bolt 2 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_Y' ! $G_KP.$G_MFR.$G_GBX_SPB.$G_02.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of SuPport Bolt 2 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_Z' ! $G_KP.$G_MFR.$G_GBX_SPB.$G_02.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.txt (            $_Z                           ) = 'z-pos. of SuPport Bolt 2 (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_KP.$G_MFR.$G_GBX_SPB.$G_02
         subvargroup.txt (          $G_02                         ) = 'SuPport Bolt 2'        ! Comment
      subvargroup.end (             $G_GBX_SPB                    )                           ! $G_KP.$G_MFR.$G_GBX_SPB
      subvargroup.txt (             $G_GBX_SPB                    ) = 'GearBoX SuPport Bolts' ! Comment
      subvargroup.begin (           $G_GEN                        )                           ! $G_KP.$G_MFR.$G_GEN
         subvar.str (               $_X                           ) = '$G_HP.$G_GEN.$_X'      ! $G_KP.$G_MFR.$G_GEN.$_X, Definition
         subvar.intent (            $_X                           ) = 2                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of Main FRame connection to GENerator (wrt. DriveTRain reference frame);[br]corresponds to GENerator reference marker' ! Comment

         subvar.str (               $_Y                           ) = 'cos($G_HP.$G_CPL.$_ang) * $G_HP.$G_CPL.$_R' ! $G_KP.$G_MFR.$G_GEN.$_Y, Definition
         subvar.intent (            $_Y                           ) = 2                       ! Intent
         subvar.status (            $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Y                           ) = 'y-pos. of Main FRame connection to GENerator (wrt. DriveTRain reference frame); corresponds to GENerator reference marker' ! Comment

         subvar.str (               $_Z                           ) = 'sin($G_HP.$G_CPL.$_ang) * $G_HP.$G_CPL.$_R' ! $G_KP.$G_MFR.$G_GEN.$_Z, Definition
         subvar.intent (            $_Z                           ) = 2                       ! Intent
         subvar.status (            $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_Z                           ) = 'rel. z-pos. of Main FRame connection to GENerator (wrt. DriveTRain reference frame); corresponds to GENerator reference marker' ! Comment

      subvargroup.end (             $G_GEN                        )                           ! $G_KP.$G_MFR.$G_GEN
      subvargroup.txt (             $G_GEN                        ) = 'GENerator'             ! Comment
      subvargroup.begin (           $G_GEN_BU                     )                           ! $G_KP.$G_MFR.$G_GEN_BU
         subvargroup.begin (        $G_01                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_01
            subvar.str (            $_X                           ) = '$G_KP.$G_MFR.$G_GEN.$_X + \n$G_PA.$G_BU.$G_GEN.$G_01.$_X' ! $G_KP.$G_MFR.$G_GEN_BU.$G_01.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 1 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_KP.$G_MFR.$G_GEN.$_Y +\n$G_PA.$G_BU.$G_GEN.$G_01.$_Y' ! $G_KP.$G_MFR.$G_GEN_BU.$G_01.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 1 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_KP.$G_MFR.$G_GEN.$_Z + \n$G_PA.$G_BU.$G_GEN.$G_01.$_Z' ! $G_KP.$G_MFR.$G_GEN_BU.$G_01.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 1 (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_01                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_01
         subvargroup.txt (          $G_01                         ) = 'GENerator BUshing 1'   ! Comment
         subvargroup.begin (        $G_02                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_02
            subvar.str (            $_X                           ) = '$G_KP.$G_MFR.$G_GEN.$_X + \n$G_PA.$G_BU.$G_GEN.$G_02.$_X' ! $G_KP.$G_MFR.$G_GEN_BU.$G_02.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 2 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_KP.$G_MFR.$G_GEN.$_Y + \n$G_PA.$G_BU.$G_GEN.$G_02.$_Y' ! $G_KP.$G_MFR.$G_GEN_BU.$G_02.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 2 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_KP.$G_MFR.$G_GEN.$_Z + \n$G_PA.$G_BU.$G_GEN.$G_02.$_Z' ! $G_KP.$G_MFR.$G_GEN_BU.$G_02.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 2 (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_02                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_02
         subvargroup.txt (          $G_02                         ) = 'GENerator BUshing 2'   ! Comment
         subvargroup.begin (        $G_03                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_03
            subvar.str (            $_X                           ) = '$G_KP.$G_MFR.$G_GEN.$_X + \n$G_PA.$G_BU.$G_GEN.$G_03.$_X' ! $G_KP.$G_MFR.$G_GEN_BU.$G_03.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 3 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_KP.$G_MFR.$G_GEN.$_Y + \n$G_PA.$G_BU.$G_GEN.$G_03.$_Y' ! $G_KP.$G_MFR.$G_GEN_BU.$G_03.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 3 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_KP.$G_MFR.$G_GEN.$_Z + \n$G_PA.$G_BU.$G_GEN.$G_03.$_Z' ! $G_KP.$G_MFR.$G_GEN_BU.$G_03.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 3 (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_03                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_03
         subvargroup.txt (          $G_03                         ) = 'GENerator BUshing 3'   ! Comment
         subvargroup.begin (        $G_04                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_04
            subvar.str (            $_X                           ) = '$G_KP.$G_MFR.$G_GEN.$_X + \n$G_PA.$G_BU.$G_GEN.$G_04.$_X' ! $G_KP.$G_MFR.$G_GEN_BU.$G_04.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of STaTor BUshing 4 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Y                           ) = '$G_KP.$G_MFR.$G_GEN.$_Y + \n$G_PA.$G_BU.$G_GEN.$G_04.$_Y' ! $G_KP.$G_MFR.$G_GEN_BU.$G_04.$_Y, Definition
            subvar.intent (         $_Y                           ) = 2                       ! Intent
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'y-pos. of STaTor BUshing 4 (wrt. DRiveTrain reference frame)' ! Comment

            subvar.str (            $_Z                           ) = '$G_KP.$G_MFR.$G_GEN.$_Z + \n$G_PA.$G_BU.$G_GEN.$G_04.$_Z' ! $G_KP.$G_MFR.$G_GEN_BU.$G_04.$_Z, Definition
            subvar.intent (         $_Z                           ) = 2                       ! Intent
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'z-pos. of STaTor BUshing 4 (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_04                         )                           ! $G_KP.$G_MFR.$G_GEN_BU.$G_04
         subvargroup.txt (          $G_04                         ) = 'GENerator BUshing 4'   ! Comment
      subvargroup.end (             $G_GEN_BU                     )                           ! $G_KP.$G_MFR.$G_GEN_BU
      subvargroup.txt (             $G_GEN_BU                     ) = 'GENerator BUshings'    ! Comment
      subvargroup.begin (           $G_MSH_BR                     )                           ! $G_KP.$G_MFR.$G_MSH_BR
         subvar.str (               $_X                           ) = '$G_HP.$G_MSH.$_X +\n$G_PA.$G_BR.$G_MSH.$_X' ! $G_KP.$G_MFR.$G_MSH_BR.$_X, Definition
         subvar.intent (            $_X                           ) = 2                       ! Intent
         subvar.status (            $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
         subvar.txt (               $_X                           ) = 'x-pos. of Main SHaft BeaRing (wrt. DRiveTrain reference frame)' ! Comment

      subvargroup.end (             $G_MSH_BR                     )                           ! $G_KP.$G_MFR.$G_MSH_BR
      subvargroup.txt (             $G_MSH_BR                     ) = 'Main SHaft BeaRing'    ! Comment
   subvargroup.end (                $G_MFR                        )                           ! $G_KP.$G_MFR
   subvargroup.txt (                $G_MFR                        ) = 'MainFRrame'            ! Comment
subvargroup.end (                   $G_KP                         )                           ! $G_KP
subvargroup.txt (                   $G_KP                         ) = 'Kinematic Points'      ! Comment

subvargroup.begin (                 $G_HL                         )                           ! $G_HL
   subvar.str (                     $_TLT_ANG                     ) = '$G_KP.$G_MFR.$G_HSG.$_ang - $G_HP.$G_DRT.$_ang ' ! $G_HL.$_TLT_ANG, Definition
   subvar.intent (                  $_TLT_ANG                     ) = 2                       ! Intent
   subvar.txt (                     $_TLT_ANG                     ) = 'TiLT ANGle'            ! Comment

subvargroup.end (                   $G_HL                         )                           ! $G_HL
subvargroup.txt (                   $G_HL                         ) = 'Help Values'           ! Comment

subvargroup.begin (                 $G_BP                         )                           ! $G_BP
   subvargroup.begin (              $G_MFR                        )                           ! $G_BP.$G_MFR
      subvar.str (                  $_M                           ) = '42829.25 kg'           ! $G_BP.$G_MFR.$_M, Definition
      subvar.intent (               $_M                           ) = 0                       ! Intent
      subvar.status (               $_M                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_M                           ) = 'Mass'                  ! Comment

      subvar.str (                  $_CM_X                        ) = '1.21195 m'             ! $G_BP.$G_MFR.$_CM_X, Definition
      subvar.intent (               $_CM_X                        ) = 0                       ! Intent
      subvar.status (               $_CM_X                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CM_X                        ) = 'Center of Mass wrt. BRF' ! Comment

      subvar.str (                  $_CM_Y                        ) = '0.00818 m'             ! $G_BP.$G_MFR.$_CM_Y, Definition
      subvar.intent (               $_CM_Y                        ) = 0                       ! Intent
      subvar.status (               $_CM_Y                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CM_Y                        ) = 'Center of Mass wrt. BRF' ! Comment

      subvar.str (                  $_CM_Z                        ) = '-1.07509 m'            ! $G_BP.$G_MFR.$_CM_Z, Definition
      subvar.intent (               $_CM_Z                        ) = 0                       ! Intent
      subvar.status (               $_CM_Z                        ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_CM_Z                        ) = 'Center of Mass wrt. BRF' ! Comment

      subvar.str (                  $_IXX                         ) = '90926.59 kgm^2'        ! $G_BP.$G_MFR.$_IXX, Definition
      subvar.intent (               $_IXX                         ) = 0                       ! Intent
      subvar.status (               $_IXX                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IXX                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IYY                         ) = '403806.08 kgm^2'       ! $G_BP.$G_MFR.$_IYY, Definition
      subvar.intent (               $_IYY                         ) = 0                       ! Intent
      subvar.status (               $_IYY                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IYY                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_IZZ                         ) = '456841.21 kgm^2'       ! $G_BP.$G_MFR.$_IZZ, Definition
      subvar.intent (               $_IZZ                         ) = 0                       ! Intent
      subvar.status (               $_IZZ                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.txt (                  $_IZZ                         ) = 'Moment of Inertia wrt. CM' ! Comment

      subvar.str (                  $_BODY_TYPE                   ) = '0'                     ! $G_BP.$G_MFR.$_BODY_TYPE, Definition
      subvar.intent (               $_BODY_TYPE                   ) = 0                       ! Intent
      subvar.status (               $_BODY_TYPE                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
      subvar.desc (       1 ,       $_BODY_TYPE                   ) = 'Body type: 0/1  ---  0: rigid  1: flexible' ! Description
      subvar.desc (       2 ,       $_BODY_TYPE                   ) = ''                      ! Description
      subvar.desc (       3 ,       $_BODY_TYPE                   ) = ''                      ! Description
      subvar.discr.desc (   1 ,     $_BODY_TYPE                   ) = 'Rigid'                 ! Description of discrete values
      subvar.discr.desc (   2 ,     $_BODY_TYPE                   ) = 'Flexible (modal)'      ! Description of discrete values
      subvar.discr.str (   1 ,      $_BODY_TYPE                   ) = '0'                     ! Discrete values
      subvar.discr.str (   2 ,      $_BODY_TYPE                   ) = '1'                     ! Discrete values
      subvar.txt (                  $_BODY_TYPE                   ) = 'Body Type (rigid, Flexible (modal), SIMBEAM, ...)' ! Comment

      subvargroup.begin (           $G_FLX                        )                           ! $G_BP.$G_MFR.$G_FLX
         subvargroup.begin (        $G_FBI                        )                           ! $G_BP.$G_MFR.$G_FLX.$G_FBI
            subvar.str (            $_FILE_ID                     ) = '"031_MFR.fbi"'         ! $G_BP.$G_MFR.$G_FLX.$G_FBI.$_FILE_ID, Definition
            subvar.intent (         $_FILE_ID                     ) = 0                       ! Intent
            subvar.status (         $_FILE_ID                     ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_FILE_ID                     ) = 'FBI file reference'    ! Description
            subvar.desc (   2 ,     $_FILE_ID                     ) = ''                      ! Description
            subvar.desc (   3 ,     $_FILE_ID                     ) = ''                      ! Description
            subvar.txt (            $_FILE_ID                     ) = 'FBI file reference'    ! Comment

         subvargroup.end (          $G_FBI                        )                           ! $G_BP.$G_MFR.$G_FLX.$G_FBI
         subvargroup.desc (   1 ,   $G_FBI                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_FBI                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_FBI                        ) = ''                      ! Description
         subvargroup.txt (          $G_FBI                        ) = 'FBI - flex modal'      ! Comment
         subvargroup.begin (        $G_MOD                        )                           ! $G_BP.$G_MFR.$G_FLX.$G_MOD
            subvar.str (            $_EMO_SELECTION               ) = '0'                     ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_SELECTION, Definition
            subvar.intent (         $_EMO_SELECTION               ) = 1                       ! Intent
            subvar.status (         $_EMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3  ---  0:none  1:f-min,f-max  2:f-min,n-modes  3:f-min,all modes' ! Description
            subvar.desc (   2 ,     $_EMO_SELECTION               ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_SELECTION               ) = ''                      ! Description
            subvar.discr.desc (   1 , $_EMO_SELECTION             ) = 'none'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_EMO_SELECTION             ) = 'f-min,f-max'           ! Description of discrete values
            subvar.discr.desc (   3 , $_EMO_SELECTION             ) = 'f-min,n-modes'         ! Description of discrete values
            subvar.discr.desc (   4 , $_EMO_SELECTION             ) = 'f-min,all modes'       ! Description of discrete values
            subvar.discr.str (   1 , $_EMO_SELECTION              ) = '0'                     ! Discrete values
            subvar.discr.str (   2 , $_EMO_SELECTION              ) = '1'                     ! Discrete values
            subvar.discr.str (   3 , $_EMO_SELECTION              ) = '2'                     ! Discrete values
            subvar.discr.str (   4 , $_EMO_SELECTION              ) = '3'                     ! Discrete values
            subvar.txt (            $_EMO_SELECTION               ) = 'Eigenmode selection type: 0/1/2/3 --- 0:none 1:f-min,f-max 2:f-min,n-modes 3:f-min,all modes' ! Comment

            subvar.str (            $_EMO_F_DESIRED               ) = '150 Hz'                ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED, Definition
            subvar.intent (         $_EMO_F_DESIRED               ) = 1                       ! Intent
            subvar.status (         $_EMO_F_DESIRED               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Description
            subvar.desc (   2 ,     $_EMO_F_DESIRED               ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_F_DESIRED               ) = ''                      ! Description
            subvar.txt (            $_EMO_F_DESIRED               ) = 'Max. frequency of interest' ! Comment

            subvar.str (            $_EMO_F_MIN                   ) = '0.01 Hz'               ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_MIN, Definition
            subvar.intent (         $_EMO_F_MIN                   ) = 1                       ! Intent
            subvar.status (         $_EMO_F_MIN                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Description
            subvar.desc (   2 ,     $_EMO_F_MIN                   ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_F_MIN                   ) = ''                      ! Description
            subvar.txt (            $_EMO_F_MIN                   ) = 'Min. eigenmode frequency' ! Comment

            subvar.str (            $_EMO_F_MAX                   ) = '1.5*$G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_MAX, Definition
            subvar.intent (         $_EMO_F_MAX                   ) = 1                       ! Intent
            subvar.status (         $_EMO_F_MAX                   ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Description
            subvar.desc (   2 ,     $_EMO_F_MAX                   ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_F_MAX                   ) = ''                      ! Description
            subvar.txt (            $_EMO_F_MAX                   ) = 'Max. eigenmode frequency' ! Comment

            subvar.str (            $_EMO_N_MODES                 ) = '0'                     ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_N_MODES, Definition
            subvar.intent (         $_EMO_N_MODES                 ) = 1                       ! Intent
            subvar.status (         $_EMO_N_MODES                 ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Description
            subvar.desc (   2 ,     $_EMO_N_MODES                 ) = ''                      ! Description
            subvar.desc (   3 ,     $_EMO_N_MODES                 ) = ''                      ! Description
            subvar.txt (            $_EMO_N_MODES                 ) = 'Number of eigenmodes'  ! Comment

            subvar.str (            $_IMO_SELECTION               ) = '-1'                    ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_IMO_SELECTION, Definition
            subvar.intent (         $_IMO_SELECTION               ) = 1                       ! Intent
            subvar.status (         $_IMO_SELECTION               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1  ---  -1: None (default)  0: IRM  1: FRM Auto  ' ! Description
            subvar.desc (   2 ,     $_IMO_SELECTION               ) = ''                      ! Description
            subvar.desc (   3 ,     $_IMO_SELECTION               ) = ''                      ! Description
            subvar.discr.desc (   1 , $_IMO_SELECTION             ) = 'None'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_IMO_SELECTION             ) = 'IRM'                   ! Description of discrete values
            subvar.discr.desc (   3 , $_IMO_SELECTION             ) = 'FRM Auto'              ! Description of discrete values
            subvar.discr.str (   1 , $_IMO_SELECTION              ) = '-1'                    ! Discrete values
            subvar.discr.str (   2 , $_IMO_SELECTION              ) = '0'                     ! Discrete values
            subvar.discr.str (   3 , $_IMO_SELECTION              ) = '1'                     ! Discrete values
            subvar.txt (            $_IMO_SELECTION               ) = 'Interface Modes: -1/0/1\n---\n-1: None (default)\n0: IRM\n1: FRM Auto\n' ! Comment

            subvar.str (            $_TRANS_F_SWITCH              ) = '0'                     ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_TRANS_F_SWITCH, Definition
            subvar.intent (         $_TRANS_F_SWITCH              ) = 1                       ! Intent
            subvar.status (         $_TRANS_F_SWITCH              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1  ---  0: None (default)  1: Manual ($_TRANS_F_LIMIT active)' ! Description
            subvar.desc (   2 ,     $_TRANS_F_SWITCH              ) = ''                      ! Description
            subvar.desc (   3 ,     $_TRANS_F_SWITCH              ) = ''                      ! Description
            subvar.discr.desc (   1 , $_TRANS_F_SWITCH            ) = 'None'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_TRANS_F_SWITCH            ) = 'Manual'                ! Description of discrete values
            subvar.discr.str (   1 , $_TRANS_F_SWITCH             ) = '0'                     ! Discrete values
            subvar.discr.str (   2 , $_TRANS_F_SWITCH             ) = '1'                     ! Discrete values
            subvar.txt (            $_TRANS_F_SWITCH              ) = 'Modal mass transformation frequency: 0/1 --- 0: None (default) 1: Manual ($_TRANS_F_LIMIT active)' ! Comment

            subvar.str (            $_TRANS_F_LIMIT               ) = '5*$G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_TRANS_F_LIMIT, Definition
            subvar.intent (         $_TRANS_F_LIMIT               ) = 1                       ! Intent
            subvar.status (         $_TRANS_F_LIMIT               ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Description
            subvar.desc (   2 ,     $_TRANS_F_LIMIT               ) = ''                      ! Description
            subvar.desc (   3 ,     $_TRANS_F_LIMIT               ) = ''                      ! Description
            subvar.txt (            $_TRANS_F_LIMIT               ) = 'The frequency is transformed to the specified value if it is greater than that value.' ! Comment

            subvar.str (            $_CUTOFF_F_SWITCH             ) = '2'                     ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH, Definition
            subvar.intent (         $_CUTOFF_F_SWITCH             ) = 1                       ! Intent
            subvar.status (         $_CUTOFF_F_SWITCH             ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2  ---  0: None (default)  1: Auto  2: Manual ($_CUTOFF_F_LIMIT active)' ! Description
            subvar.desc (   2 ,     $_CUTOFF_F_SWITCH             ) = ''                      ! Description
            subvar.desc (   3 ,     $_CUTOFF_F_SWITCH             ) = ''                      ! Description
            subvar.discr.desc (   1 , $_CUTOFF_F_SWITCH           ) = 'None'                  ! Description of discrete values
            subvar.discr.desc (   2 , $_CUTOFF_F_SWITCH           ) = 'Auto'                  ! Description of discrete values
            subvar.discr.desc (   3 , $_CUTOFF_F_SWITCH           ) = 'Manual'                ! Description of discrete values
            subvar.discr.str (   1 , $_CUTOFF_F_SWITCH            ) = '0'                     ! Discrete values
            subvar.discr.str (   2 , $_CUTOFF_F_SWITCH            ) = '1'                     ! Discrete values
            subvar.discr.str (   3 , $_CUTOFF_F_SWITCH            ) = '2'                     ! Discrete values
            subvar.txt (            $_CUTOFF_F_SWITCH             ) = 'Cut-Off Frequency: 0/1/2 --- 0: None (default) 1: Auto 2: Manual ($_CUTOFF_F_LIMIT active)' ! Comment

            subvar.str (            $_CUTOFF_F_LIMIT              ) = '5*$G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_MAX' ! $G_BP.$G_MFR.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT, Definition
            subvar.intent (         $_CUTOFF_F_LIMIT              ) = 1                       ! Intent
            subvar.status (         $_CUTOFF_F_LIMIT              ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Description
            subvar.desc (   2 ,     $_CUTOFF_F_LIMIT              ) = ''                      ! Description
            subvar.desc (   3 ,     $_CUTOFF_F_LIMIT              ) = ''                      ! Description
            subvar.txt (            $_CUTOFF_F_LIMIT              ) = 'Modes will not be used in simulation tasks if their frequencies are greater than the specified value.' ! Comment

         subvargroup.end (          $G_MOD                        )                           ! $G_BP.$G_MFR.$G_FLX.$G_MOD
         subvargroup.desc (   1 ,   $G_MOD                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_MOD                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_MOD                        ) = ''                      ! Description
         subvargroup.txt (          $G_MOD                        ) = 'MODes'                 ! Comment
         subvargroup.begin (        $G_DMP                        )                           ! $G_BP.$G_MFR.$G_FLX.$G_DMP
            subvar.str (            $_D_LOW                       ) = '0.03'                  ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_LOW, Definition
            subvar.intent (         $_D_LOW                       ) = 1                       ! Intent
            subvar.status (         $_D_LOW                       ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Description
            subvar.desc (   2 ,     $_D_LOW                       ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_LOW                       ) = ''                      ! Description
            subvar.txt (            $_D_LOW                       ) = 'Flex. body damping at low frequencies' ! Comment

            subvar.str (            $_D_HIGH                      ) = '0.8'                   ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_HIGH, Definition
            subvar.intent (         $_D_HIGH                      ) = 1                       ! Intent
            subvar.status (         $_D_HIGH                      ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Description
            subvar.desc (   2 ,     $_D_HIGH                      ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_HIGH                      ) = ''                      ! Description
            subvar.txt (            $_D_HIGH                      ) = 'Flex. body damping at high frequencies' ! Comment

            subvar.str (            $_F_1                         ) = '0 Hz'                  ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_1, Definition
            subvar.intent (         $_F_1                         ) = 1                       ! Intent
            subvar.status (         $_F_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_1                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_1                         ) = ''                      ! Description
            subvar.txt (            $_F_1                         ) = '1st refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_2                         ) = '0.5 * $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_2, Definition
            subvar.intent (         $_F_2                         ) = 1                       ! Intent
            subvar.status (         $_F_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_2                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_2                         ) = ''                      ! Description
            subvar.txt (            $_F_2                         ) = '2nd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_3                         ) = '1.0 * $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_3, Definition
            subvar.intent (         $_F_3                         ) = 1                       ! Intent
            subvar.status (         $_F_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_3                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_3                         ) = ''                      ! Description
            subvar.txt (            $_F_3                         ) = '3rd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_4                         ) = '1.5 * $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_4, Definition
            subvar.intent (         $_F_4                         ) = 1                       ! Intent
            subvar.status (         $_F_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_4                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_4                         ) = ''                      ! Description
            subvar.txt (            $_F_4                         ) = '4th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_5                         ) = '2.0 * $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_5, Definition
            subvar.intent (         $_F_5                         ) = 1                       ! Intent
            subvar.status (         $_F_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_5                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_5                         ) = ''                      ! Description
            subvar.txt (            $_F_5                         ) = '5th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_F_6                         ) = '6.0 * $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_DESIRED' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_6, Definition
            subvar.intent (         $_F_6                         ) = 1                       ! Intent
            subvar.status (         $_F_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_F_6                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_F_6                         ) = ''                      ! Description
            subvar.txt (            $_F_6                         ) = '6th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_1                         ) = '$G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_1, Definition
            subvar.intent (         $_D_1                         ) = 1                       ! Intent
            subvar.status (         $_D_1                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_1                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_1                         ) = ''                      ! Description
            subvar.txt (            $_D_1                         ) = 'modal damping at 1st refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_2                         ) = '$G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_2, Definition
            subvar.intent (         $_D_2                         ) = 1                       ! Intent
            subvar.status (         $_D_2                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_2                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_2                         ) = ''                      ! Description
            subvar.txt (            $_D_2                         ) = 'modal damping at 2nd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_3                         ) = '$G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_3, Definition
            subvar.intent (         $_D_3                         ) = 1                       ! Intent
            subvar.status (         $_D_3                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_3                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_3                         ) = ''                      ! Description
            subvar.txt (            $_D_3                         ) = 'modal damping at 3rd refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_4                         ) = '$G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_LOW' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_4, Definition
            subvar.intent (         $_D_4                         ) = 1                       ! Intent
            subvar.status (         $_D_4                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_4                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_4                         ) = ''                      ! Description
            subvar.txt (            $_D_4                         ) = 'modal damping at 4th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_5                         ) = '$G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_5, Definition
            subvar.intent (         $_D_5                         ) = 1                       ! Intent
            subvar.status (         $_D_5                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_5                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_5                         ) = ''                      ! Description
            subvar.txt (            $_D_5                         ) = 'modal damping at 5th refernce frequency for modal damping input function' ! Comment

            subvar.str (            $_D_6                         ) = '$G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_HIGH' ! $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_6, Definition
            subvar.intent (         $_D_6                         ) = 1                       ! Intent
            subvar.status (         $_D_6                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.desc (   1 ,     $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Description
            subvar.desc (   2 ,     $_D_6                         ) = ''                      ! Description
            subvar.desc (   3 ,     $_D_6                         ) = ''                      ! Description
            subvar.txt (            $_D_6                         ) = 'modal damping at 6th refernce frequency for modal damping input function' ! Comment

         subvargroup.end (          $G_DMP                        )                           ! $G_BP.$G_MFR.$G_FLX.$G_DMP
         subvargroup.desc (   1 ,   $G_DMP                        ) = ''                      ! Description
         subvargroup.desc (   2 ,   $G_DMP                        ) = ''                      ! Description
         subvargroup.desc (   3 ,   $G_DMP                        ) = ''                      ! Description
         subvargroup.txt (          $G_DMP                        ) = 'DaMPing'               ! Comment
      subvargroup.end (             $G_FLX                        )                           ! $G_BP.$G_MFR.$G_FLX
      subvargroup.desc (   1 ,      $G_FLX                        ) = ''                      ! Description
      subvargroup.desc (   2 ,      $G_FLX                        ) = ''                      ! Description
      subvargroup.desc (   3 ,      $G_FLX                        ) = ''                      ! Description
      subvargroup.txt (             $G_FLX                        ) = 'FLxXible body properties' ! Comment
   subvargroup.end (                $G_MFR                        )                           ! $G_BP.$G_MFR
   subvargroup.txt (                $G_MFR                        ) = 'MainFRame'             ! Comment
subvargroup.end (                   $G_BP                         )                           ! $G_BP
subvargroup.txt (                   $G_BP                         ) = 'Body Properties'       ! Comment

subvargroup.begin (                 $G_3D                         )                           ! $G_3D
   subvar.str (                     $_TRANSPARENCY_ALL            ) = '0'                     ! $G_3D.$_TRANSPARENCY_ALL, Definition
   subvar.intent (                  $_TRANSPARENCY_ALL            ) = 1                       ! Intent
   subvar.status (                  $_TRANSPARENCY_ALL            ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
   subvar.txt (                     $_TRANSPARENCY_ALL            ) = 'Transparency global'   ! Comment

   subvar.str (                     $_TRANSPARENCY_RIGID          ) = 'SWITCH($G_BP.$G_MFR.$_BODY_TYPE)\n{\n   CASE   0 :   $G_3D.$_TRANSPARENCY_ALL;\n   CASE   1 :   1;\n   CASE   2 :   1 ;\n\n   DEFAULT:  $G_3D.$_TRANSPARENCY_ALL;\n}' ! $G_3D.$_TRANSPARENCY_RIGID, Definition
   subvar.intent (                  $_TRANSPARENCY_RIGID          ) = 1                       ! Intent
   subvar.status (                  $_TRANSPARENCY_RIGID          ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
   subvar.txt (                     $_TRANSPARENCY_RIGID          ) = 'Transparency rigid body primitives, when flexible bodies are used' ! Comment

   subvargroup.begin (              $G_MFR                        )                           ! $G_3D.$G_MFR
      subvargroup.begin (           $G_MSH                        )                           ! $G_3D.$G_MFR.$G_MSH
         subvargroup.begin (        $G_BR                         )                           ! $G_3D.$G_MFR.$G_MSH.$G_BR
            subvar.str (            $_D_O                         ) = '1.315 m'               ! $G_3D.$G_MFR.$G_MSH.$G_BR.$_D_O, Definition
            subvar.status (         $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O                         ) = 'cylinder Diameter Out' ! Comment

            subvar.str (            $_D_I                         ) = '1 m'                   ! $G_3D.$G_MFR.$G_MSH.$G_BR.$_D_I, Definition
            subvar.status (         $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_I                         ) = 'cylinder Diameter In'  ! Comment

            subvar.str (            $_L                           ) = '0.315m'                ! $G_3D.$G_MFR.$G_MSH.$G_BR.$_L, Definition
            subvar.status (         $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_L                           ) = 'cylinder Length'       ! Comment

         subvargroup.end (          $G_BR                         )                           ! $G_3D.$G_MFR.$G_MSH.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
      subvargroup.end (             $G_MSH                        )                           ! $G_3D.$G_MFR.$G_MSH
      subvargroup.txt (             $G_MSH                        ) = 'Main SHaft'            ! Comment
      subvargroup.begin (           $G_GEN                        )                           ! $G_3D.$G_MFR.$G_GEN
         subvargroup.begin (        $G_BU                         )                           ! $G_3D.$G_MFR.$G_GEN.$G_BU
            subvar.str (            $_X                           ) = '0.3 m'                 ! $G_3D.$G_MFR.$G_GEN.$G_BU.$_X, Definition
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'cuboid x-dimension, stator bushing' ! Comment

            subvar.str (            $_Y                           ) = '0.15 m'                ! $G_3D.$G_MFR.$G_GEN.$G_BU.$_Y, Definition
            subvar.status (         $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Y                           ) = 'cuboid y-dimension, stator bushing' ! Comment

            subvar.str (            $_Z                           ) = '0.1 m'                 ! $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z, Definition
            subvar.status (         $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_Z                           ) = 'cuboid z-dimension, stator bushing' ! Comment

         subvargroup.end (          $G_BU                         )                           ! $G_3D.$G_MFR.$G_GEN.$G_BU
         subvargroup.txt (          $G_BU                         ) = 'BUshings'              ! Comment
      subvargroup.end (             $G_GEN                        )                           ! $G_3D.$G_MFR.$G_GEN
      subvargroup.txt (             $G_GEN                        ) = 'GENerator'             ! Comment
      subvargroup.begin (           $G_GBX                        )                           ! $G_3D.$G_MFR.$G_GBX
         subvargroup.begin (        $G_SPB                        )                           ! $G_3D.$G_MFR.$G_GBX.$G_SPB
            subvar.str (            $_D_O                         ) = '0.24 m'                ! $G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_O, Definition
            subvar.status (         $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_O                         ) = 'cylinder Diameter Out' ! Comment

            subvar.str (            $_D_I                         ) = '0 m'                   ! $G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_I, Definition
            subvar.status (         $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_D_I                         ) = 'cylinder Diameter In'  ! Comment

            subvar.str (            $_L                           ) = '1 m'                   ! $G_3D.$G_MFR.$G_GBX.$G_SPB.$_L, Definition
            subvar.status (         $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_L                           ) = 'cylinder Length'       ! Comment

         subvargroup.end (          $G_SPB                        )                           ! $G_3D.$G_MFR.$G_GBX.$G_SPB
         subvargroup.txt (          $G_SPB                        ) = 'SuPport Bolts'         ! Comment
      subvargroup.end (             $G_GBX                        )                           ! $G_3D.$G_MFR.$G_GBX
      subvargroup.txt (             $G_GBX                        ) = 'GearBoX'               ! Comment
   subvargroup.end (                $G_MFR                        )                           ! $G_3D.$G_MFR
   subvargroup.txt (                $G_MFR                        ) = 'Main FRame'            ! Comment
subvargroup.end (                   $G_3D                         )                           ! $G_3D
subvargroup.txt (                   $G_3D                         ) = '3D properties'         ! Comment

subvargroup.begin (                 $G_INTERFACE                  )                           ! $G_INTERFACE
   subvargroup.begin (              $G_031_MFR                    )                           ! $G_INTERFACE.$G_031_MFR
      subvargroup.begin (           $G_PA                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA
         subvargroup.begin (        $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB
            subvargroup.begin (     $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX
               subvargroup.begin (  $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01
                  subvar.str (      $_X                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '$G_PA.$G_SPB.$G_GBX.$G_01.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.txt (      $_Z                           ) = 'z-pos. of SuPport Bolt 1 (wrt. GearBoX reference frame)' ! Comment

               subvargroup.end (    $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01
               subvargroup.txt (    $G_01                         ) = 'SuPport Bolt 1'        ! Comment
               subvargroup.begin (  $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02
                  subvar.str (      $_X                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '$G_PA.$G_SPB.$G_GBX.$G_02.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.txt (      $_Z                           ) = 'z-pos. of SuPport Bolt 2 (wrt. GearBoX reference frame)' ! Comment

               subvargroup.end (    $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02
               subvargroup.txt (    $G_02                         ) = 'SuPport Bolt 2'        ! Comment
            subvargroup.end (       $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX
            subvargroup.txt (       $G_GBX                        ) = 'GearBoX'               ! Comment
         subvargroup.end (          $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB
         subvargroup.txt (          $G_SPB                        ) = 'SuPport Bolts'         ! Comment
         subvargroup.begin (        $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR
            subvargroup.begin (     $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH
               subvar.str (         $_X                           ) = '$G_PA.$G_BR.$G_MSH.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH.$_X, Definition
               subvar.intent (      $_X                           ) = 2                       ! Intent
               subvar.status (      $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_X                           ) = 'x-pos. of Main SHaft BeaRing (wrt. Main SHaft reference frame)' ! Comment

            subvargroup.end (       $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH
            subvargroup.txt (       $G_MSH                        ) = 'Main Shaft'            ! Comment
         subvargroup.end (          $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR
         subvargroup.txt (          $G_BR                         ) = 'BeaRings'              ! Comment
         subvargroup.begin (        $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU
            subvargroup.begin (     $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN
               subvargroup.begin (  $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01
                  subvar.str (      $_X                           ) = '$G_PA.$G_BU.$G_GEN.$G_01.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STatoR BUshing 1 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '$G_PA.$G_BU.$G_GEN.$G_01.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 1 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '$G_PA.$G_BU.$G_GEN.$G_01.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 1 (wrt. GENerator reference frame)' ! Comment

               subvargroup.end (    $G_01                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01
               subvargroup.txt (    $G_01                         ) = 'STatoR BUshing 1'      ! Comment
               subvargroup.begin (  $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02
                  subvar.str (      $_X                           ) = '$G_PA.$G_BU.$G_GEN.$G_02.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 2 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '$G_PA.$G_BU.$G_GEN.$G_02.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 2 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '$G_PA.$G_BU.$G_GEN.$G_02.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 2 (wrt. GENerator reference frame)' ! Comment

               subvargroup.end (    $G_02                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02
               subvargroup.txt (    $G_02                         ) = 'STatoR BUshing 2'      ! Comment
               subvargroup.begin (  $G_03                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03
                  subvar.str (      $_X                           ) = '$G_PA.$G_BU.$G_GEN.$G_03.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 3 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '$G_PA.$G_BU.$G_GEN.$G_03.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 3 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '$G_PA.$G_BU.$G_GEN.$G_03.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 3 (wrt. GENerator reference frame)' ! Comment

               subvargroup.end (    $G_03                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03
               subvargroup.txt (    $G_03                         ) = 'STatoR BUshing 3'      ! Comment
               subvargroup.begin (  $G_04                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04
                  subvar.str (      $_X                           ) = '$G_PA.$G_BU.$G_GEN.$G_04.$_X' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_X, Definition
                  subvar.intent (   $_X                           ) = 2                       ! Intent
                  subvar.status (   $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_X                           ) = 'x-pos. of STaTor BUshing 4 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Y                           ) = '$G_PA.$G_BU.$G_GEN.$G_04.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Y, Definition
                  subvar.intent (   $_Y                           ) = 2                       ! Intent
                  subvar.status (   $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Y                           ) = 'y-pos. of STaTor BUshing 4 (wrt. GENerator reference frame)' ! Comment

                  subvar.str (      $_Z                           ) = '$G_PA.$G_BU.$G_GEN.$G_04.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Z, Definition
                  subvar.intent (   $_Z                           ) = 2                       ! Intent
                  subvar.status (   $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
                  subvar.txt (      $_Z                           ) = 'z-pos. of STaTor BUshing 4 (wrt. GENerator reference frame)' ! Comment

               subvargroup.end (    $G_04                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04
               subvargroup.txt (    $G_04                         ) = 'STatoR BUshing 4'      ! Comment
            subvargroup.end (       $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN
            subvargroup.txt (       $G_GEN                        ) = 'GENerator'             ! Comment
         subvargroup.end (          $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU
         subvargroup.txt (          $G_BU                         ) = 'BUshing'               ! Comment
      subvargroup.end (             $G_PA                         )                           ! $G_INTERFACE.$G_031_MFR.$G_PA
      subvargroup.txt (             $G_PA                         ) = 'PArameter'             ! Comment
      subvargroup.begin (           $G_HP                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HP
         subvargroup.begin (        $G_HUB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_HUB
            subvar.str (            $_X                           ) = '$G_HP.$G_HUB.$_X'      ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_HUB.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos. of Main SHaft connection to HUB; HP 2 (wrt. DRiveTrain reference frame, HP 0)' ! Comment

         subvargroup.end (          $G_HUB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_HUB
         subvargroup.txt (          $G_HUB                        ) = 'HUB'                   ! Comment
         subvargroup.begin (        $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH
            subvar.str (            $_X                           ) = '$G_HP.$G_MSH.$_X'      ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos. of Main FRame connection to Main SHaft (wrt. DRiveTrain reference frame); corresponds to Main SHaft reference frame' ! Comment

         subvargroup.end (          $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH
         subvargroup.txt (          $G_MSH                        ) = 'Main SHaft'            ! Comment
         subvargroup.begin (        $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX
            subvar.str (            $_X                           ) = '$G_HP.$G_GBX.$_X'      ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of Main FRame connection to GearBoX (wrt. DriveTRain reference frame); corresponds to GearBoX reference frame' ! Comment

         subvargroup.end (          $G_GBX                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX
         subvargroup.txt (          $G_GBX                        ) = 'GearBoX'               ! Comment
         subvargroup.begin (        $G_CPL                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL
            subvar.str (            $_X                           ) = '$G_HP.$G_CPL.$_X'      ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.txt (            $_X                           ) = 'x-pos. of CouPLing reference marker (wrt. to DRiveTrain reference frame)' ! Comment

            subvar.str (            $_R                           ) = '$G_HP.$G_CPL.$_R'      ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R, Definition
            subvar.intent (         $_R                           ) = 2                       ! Intent
            subvar.txt (            $_R                           ) = 'radial pos. of CouPLing reference marker (wrt. DriveTRain reference frame)' ! Comment

            subvar.str (            $_ang                         ) = '$G_HP.$G_CPL.$_ang'    ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang, Definition
            subvar.intent (         $_ang                         ) = 2                       ! Intent
            subvar.txt (            $_ang                         ) = 'offset angle (about alpha) of CouPLing reference marker (wrt. DRiveTrain reference frame)' ! Comment

         subvargroup.end (          $G_CPL                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL
         subvargroup.txt (          $G_CPL                        ) = 'CouPLing'              ! Comment
         subvargroup.begin (        $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN
            subvar.str (            $_X                           ) = '$G_HP.$G_GEN.$_X'      ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN.$_X, Definition
            subvar.intent (         $_X                           ) = 2                       ! Intent
            subvar.status (         $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
            subvar.txt (            $_X                           ) = 'x-pos. of Main FRame connection to GENerator (wrt. DriveTRain reference frame); corresponds to GENerator reference frame' ! Comment

         subvargroup.end (          $G_GEN                        )                           ! $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN
         subvargroup.txt (          $G_GEN                        ) = 'GENerator'             ! Comment
      subvargroup.end (             $G_HP                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HP
      subvargroup.desc (   1 ,      $G_HP                         ) = ''                      ! Description
      subvargroup.txt (             $G_HP                         ) = 'Hard Points'           ! Comment
      subvargroup.begin (           $G_HL                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HL
         subvar.str (               $_TLT_ANG                     ) = '$G_HL.$_TLT_ANG'       ! $G_INTERFACE.$G_031_MFR.$G_HL.$_TLT_ANG, Definition
         subvar.intent (            $_TLT_ANG                     ) = 2                       ! Intent
         subvar.txt (               $_TLT_ANG                     ) = 'TiLT ANGle'            ! Comment

      subvargroup.end (             $G_HL                         )                           ! $G_INTERFACE.$G_031_MFR.$G_HL
      subvargroup.begin (           $G_3D                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D
         subvargroup.begin (        $G_HSG                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG
            subvargroup.begin (     $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB
               subvar.str (         $_D_O                         ) = '$G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_O' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_O, Definition
               subvar.intent (      $_D_O                         ) = 2                       ! Intent
               subvar.status (      $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_O                         ) = 'Diameter Out'          ! Comment

               subvar.str (         $_D_I                         ) = '$G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_I' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_I, Definition
               subvar.intent (      $_D_I                         ) = 2                       ! Intent
               subvar.status (      $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_I                         ) = 'Diameter IN'           ! Comment

               subvar.str (         $_L                           ) = '$G_3D.$G_MFR.$G_GBX.$G_SPB.$_L' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_L, Definition
               subvar.intent (      $_L                           ) = 2                       ! Intent
               subvar.status (      $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_L                           ) = 'Lengt'                 ! Comment

            subvargroup.end (       $G_SPB                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB
            subvargroup.txt (       $G_SPB                        ) = 'SuPport Bolts'         ! Comment
         subvargroup.end (          $G_HSG                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG
         subvargroup.txt (          $G_HSG                        ) = 'HouSinG'               ! Comment
         subvargroup.begin (        $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH
            subvargroup.begin (     $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR
               subvar.str (         $_D_O                         ) = '$G_3D.$G_MFR.$G_MSH.$G_BR.$_D_O' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_O, Definition
               subvar.intent (      $_D_O                         ) = 2                       ! Intent
               subvar.status (      $_D_O                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_O                         ) = 'Diameter Out'          ! Comment

               subvar.str (         $_D_I                         ) = '$G_3D.$G_MFR.$G_MSH.$G_BR.$_D_I' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_I, Definition
               subvar.intent (      $_D_I                         ) = 2                       ! Intent
               subvar.status (      $_D_I                         ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_D_I                         ) = 'Diameter IN'           ! Comment

               subvar.str (         $_L                           ) = '$G_3D.$G_MFR.$G_MSH.$G_BR.$_L' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_L, Definition
               subvar.intent (      $_L                           ) = 2                       ! Intent
               subvar.status (      $_L                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_L                           ) = 'Lengt'                 ! Comment

            subvargroup.end (       $G_BR                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR
            subvargroup.txt (       $G_BR                         ) = 'BeaRings'              ! Comment
         subvargroup.end (          $G_MSH                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH
         subvargroup.txt (          $G_MSH                        ) = 'Main Shaft'            ! Comment
         subvargroup.begin (        $G_STR                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR
            subvargroup.begin (     $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU
               subvar.str (         $_X                           ) = '$G_3D.$G_MFR.$G_GEN.$G_BU.$_X' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_X, Definition
               subvar.intent (      $_X                           ) = 2                       ! Intent
               subvar.status (      $_X                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_X                           ) = 'x-dimension, stator bushing' ! Comment

               subvar.str (         $_Y                           ) = '$G_3D.$G_MFR.$G_GEN.$G_BU.$_Y' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Y, Definition
               subvar.intent (      $_Y                           ) = 2                       ! Intent
               subvar.status (      $_Y                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_Y                           ) = 'x-dimension, stator bushing' ! Comment

               subvar.str (         $_Z                           ) = '$G_3D.$G_MFR.$G_GEN.$G_BU.$_Z' ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Z, Definition
               subvar.intent (      $_Z                           ) = 2                       ! Intent
               subvar.status (      $_Z                           ) = 1                       ! 1=undefined; 2=unchecked; 3=pending; 4=cleared
               subvar.txt (         $_Z                           ) = 'x-dimension, stator bushing' ! Comment

            subvargroup.end (       $G_BU                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU
            subvargroup.txt (       $G_BU                         ) = 'BUshings'              ! Comment
         subvargroup.end (          $G_STR                        )                           ! $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR
         subvargroup.txt (          $G_STR                        ) = 'STatoR'                ! Comment
      subvargroup.end (             $G_3D                         )                           ! $G_INTERFACE.$G_031_MFR.$G_3D
      subvargroup.txt (             $G_3D                         ) = '3D properties'         ! Comment
   subvargroup.end (                $G_031_MFR                    )                           ! $G_INTERFACE.$G_031_MFR
   subvargroup.txt (                $G_031_MFR                    ) = 'MainFRrame'            ! Comment
subvargroup.end (                   $G_INTERFACE                  )                           ! $G_INTERFACE
subvargroup.txt (                   $G_INTERFACE                  ) = 'INTERFACE subvars - exchanged with other submodels via communicators' ! Comment

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -3.00000000000000000E+02
refsys.attr.2d.pos.y (              $R_Isys                       ) = 4.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 1.38000000000000000E+03
refsys.attr.2d.height (             $R_Isys                       ) = 3.40000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_INTERFACE_HSG_MFR     ) = 2                       ! Type
marker.parent (                     $M_Isys_INTERFACE_HSG_MFR     ) = $R_Isys                 ! Reference system

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_MFR                        ) = $G_BP.$G_MFR.$_M        ! Mass of the Body
body.mp (                           $B_MFR                        ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.cg.pos (             1 ,       $B_MFR                        ) = $G_BP.$G_MFR.$_CM_X     ! Center of gravity
body.cg.pos (             2 ,       $B_MFR                        ) = $G_BP.$G_MFR.$_CM_Y     ! Center of gravity
body.cg.pos (             3 ,       $B_MFR                        ) = $G_BP.$G_MFR.$_CM_Z     ! Center of gravity
body.I.tens (             1 ,   1 , $B_MFR                        ) = $G_BP.$G_MFR.$_IXX      ! Moments of inertia
body.I.tens (             2 ,   2 , $B_MFR                        ) = $G_BP.$G_MFR.$_IYY      ! Moments of inertia
body.I.tens (             3 ,   3 , $B_MFR                        ) = $G_BP.$G_MFR.$_IZZ      ! Moments of inertia
body.type (                         $B_MFR                        ) = $G_BP.$G_MFR.$_BODY_TYPE ! Body type: 0=rigid; 1=linear flex; 2=linear SIMBEAM; 4=nonlinear SIMBEAM; 6=nonlinear flex; 7=Abq Co-Sim; 8=flextrack
body.flx.file (                     $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_FBI.$_FILE_ID ! fbi or sid file used for describing flex body matrices
body.flx.st.pos (         1 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         2 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         3 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         4 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         5 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.pos (         6 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Flexible position
body.flx.st.vel (         1 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         2 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         3 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         4 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         5 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.vel (         6 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Velocity state
body.flx.st.dep (         1 ,       $B_MFR                        ) = 0                       ! State dependency
body.flx.st.dep (         2 ,       $B_MFR                        ) = 0                       ! State dependency
body.flx.st.dep (         3 ,       $B_MFR                        ) = 0                       ! State dependency
body.flx.st.dep (         4 ,       $B_MFR                        ) = 0                       ! State dependency
body.flx.st.dep (         5 ,       $B_MFR                        ) = 0                       ! State dependency
body.flx.st.dep (         6 ,       $B_MFR                        ) = 0                       ! State dependency
body.flx.st.scal.stiff (   1 ,      $B_MFR                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   2 ,      $B_MFR                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   3 ,      $B_MFR                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   4 ,      $B_MFR                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   5 ,      $B_MFR                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.scal.stiff (   6 ,      $B_MFR                        ) = 1.00000000000000000E+00 ! Frequency scaling factor
body.flx.st.prestress (   1 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   2 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   3 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   4 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   5 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.st.prestress (   6 ,       $B_MFR                        ) = 0.00000000000000000E+00 ! Pre-Stress Forces
body.flx.dmp.mode (                 $B_MFR                        ) = 1                       ! Damping mode
body.flx.massmat (                  $B_MFR                        ) = 0                       ! 0=use of superelement mass matrix (classic); 1=use of lumped mass matrix; 2=use of superelement mass matrix (optimized); 3=use of manual mass matrix
body.flx.eigenmodes.kind (          $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_SELECTION ! Eigenmode frequency range: 0=none; 1=f-min,f-max; 2=f-min,n-modes; 3=f-min,all modes
body.flx.eigenmodes.freqrange.min ( $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_MIN ! Eigenmode minimum frequency
body.flx.eigenmodes.freqrange.max ( $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_F_MAX ! Eigenmode maximum frequency
body.flx.eigenmodes.nmodes (        $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_EMO_N_MODES ! Eigenmode number of modes
body.flx.ifacemodes.kind (          $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_IMO_SELECTION ! Interface modes; -1=none; 0=IRM (default); 1=FRM-Auto; 2=FRM-Manual
body.flx.transform.kind (           $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_TRANS_F_SWITCH ! Transformation frequency type: 0=none (default); 1=manual
body.flx.transform.value (          $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_TRANS_F_LIMIT ! Transformation frequency value
body.flx.freq.cut.kind (            $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_CUTOFF_F_SWITCH ! Cut-Off frequency type: 0=none (default); 1=auto; 2=manual
body.flx.freq.cut.value (           $B_MFR                        ) = $G_BP.$G_MFR.$G_FLX.$G_MOD.$_CUTOFF_F_LIMIT ! Cut-Off frequency
body.flx.dmp.input (                $B_MFR                        ) = 2                       ! Damping input method; 0=All Modes (default); 1=Each Mode; 2=Input Function
body.flx.dmp.ifctn (                $B_MFR                        ) = $I_MFR_modal_damping    ! Input Function
body.flx.st.active (      1 ,       $B_MFR                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      2 ,       $B_MFR                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      3 ,       $B_MFR                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      4 ,       $B_MFR                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      5 ,       $B_MFR                        ) = 1                       ! User defined selection of the mode vectors
body.flx.st.active (      6 ,       $B_MFR                        ) = 1                       ! User defined selection of the mode vectors
body.flx.ref (                      $B_MFR                        ) = null                    ! Reference marker for FE model
body.flx.cosim.job.type (           $B_MFR                        ) = 0                       ! 0=new run; 1=import co-sim with database results; 2=restart co-sim
body.flx.cosim.job.previous (       $B_MFR                        ) = ''                      ! previous abaqus job run
body.flx.cosim.job.cmdoptions (     $B_MFR                        ) = ''                      ! additional command line options for the abaqus run
body.flx.defhandling (              $B_MFR                        ) = 1                       ! 0=Retain deformation; 1=Retain modal coordinates; 2=Reset deformation to zero
body.attr.2d.pos.x (                $B_MFR                        ) = -1.80000000000000000E+02
body.attr.2d.pos.y (                $B_MFR                        ) = 1.50000000000000000E+02
body.attr.2d.width (                $B_MFR                        ) = 1.14000000000000000E+03
body.attr.2d.height (               $B_MFR                        ) = 6.00000000000000000E+01

marker.type (                       $M_MFR_BRF                    ) = 1                       ! Type
marker.parent (                     $M_MFR_BRF                    ) = $B_MFR                  ! Body
marker.flx.type (                   $M_MFR_BRF                    ) = 4                       ! Flexible type

marker.type (                       $M_MFR_HSG                    ) = 2                       ! Type
marker.parent (                     $M_MFR_HSG                    ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_HSG                    ) = $G_KP.$G_MFR.$G_HSG.$_X ! Position
marker.pos (              3 ,       $M_MFR_HSG                    ) = $G_KP.$G_MFR.$G_HSG.$_Z ! Position
marker.ang (              2 ,       $M_MFR_HSG                    ) = $G_KP.$G_MFR.$G_HSG.$_ang ! Angles
marker.flx.tol (                    $M_MFR_HSG                    ) = 1.00000000000000005E-04 ! distance tolerance for finding single node to which Marker should be attached

marker.type (                       $M_MFR_DRT_Ref                ) = 2                       ! Type
marker.parent (                     $M_MFR_DRT_Ref                ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_DRT_Ref                ) = $G_KP.$G_MFR.$G_DRT.$_X ! Position
marker.pos (              2 ,       $M_MFR_DRT_Ref                ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_MFR_DRT_Ref                ) = $G_KP.$G_MFR.$G_DRT.$_Z ! Position
marker.ang (              2 ,       $M_MFR_DRT_Ref                ) = $G_KP.$G_MFR.$G_DRT.$_ang ! Angles
marker.flx.type (                   $M_MFR_DRT_Ref                ) = 4                       ! Flexible type

marker.type (                       $M_MFR_INTERFACE_MFR_GBX      ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GBX      ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GBX      ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GBX      ) = $G_KP.$G_MFR.$G_GBX.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GBX      ) = 0.00000000000000000E+00 ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GBX      ) = 0.00000000000000000E+00 ! Position
marker.ang (              2 ,       $M_MFR_INTERFACE_MFR_GBX      ) = 0.00000000000000000E+00 ! Angles
marker.flx.type (                   $M_MFR_INTERFACE_MFR_GBX      ) = 4                       ! Flexible type

marker.type (                       $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = $G_KP.$G_MFR.$G_GBX_SPB.$G_01.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = $G_KP.$G_MFR.$G_GBX_SPB.$G_01.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = 0.00000000000000000E+00 ! Position
marker.ang (              2 ,       $M_MFR_INTERFACE_MFR_GBX_SPB1 ) = 0.00000000000000000E+00 ! Angles

marker.type (                       $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = $G_KP.$G_MFR.$G_GBX_SPB.$G_02.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = $G_KP.$G_MFR.$G_GBX_SPB.$G_02.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = 0.00000000000000000E+00 ! Position
marker.ang (              2 ,       $M_MFR_INTERFACE_MFR_GBX_SPB2 ) = 0.00000000000000000E+00 ! Angles

marker.type (                       $M_MFR_INTERFACE_MFR_GEN      ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GEN      ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GEN      ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GEN      ) = $G_KP.$G_MFR.$G_GEN.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GEN      ) = $G_KP.$G_MFR.$G_GEN.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GEN      ) = $G_KP.$G_MFR.$G_GEN.$_Z ! Position
marker.flx.type (                   $M_MFR_INTERFACE_MFR_GEN      ) = 4                       ! Flexible type

marker.type (                       $M_MFR_INTERFACE_MFR_GEN_BU1  ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GEN_BU1  ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GEN_BU1  ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GEN_BU1  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_01.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GEN_BU1  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_01.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GEN_BU1  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_01.$_Z ! Position

marker.type (                       $M_MFR_INTERFACE_MFR_GEN_BU2  ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GEN_BU2  ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GEN_BU2  ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GEN_BU2  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_02.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GEN_BU2  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_02.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GEN_BU2  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_02.$_Z ! Position

marker.type (                       $M_MFR_INTERFACE_MFR_GEN_BU3  ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GEN_BU3  ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GEN_BU3  ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GEN_BU3  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_03.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GEN_BU3  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_03.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GEN_BU3  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_03.$_Z ! Position

marker.type (                       $M_MFR_INTERFACE_MFR_GEN_BU4  ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_GEN_BU4  ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_GEN_BU4  ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_GEN_BU4  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_04.$_X ! Position
marker.pos (              2 ,       $M_MFR_INTERFACE_MFR_GEN_BU4  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_04.$_Y ! Position
marker.pos (              3 ,       $M_MFR_INTERFACE_MFR_GEN_BU4  ) = $G_KP.$G_MFR.$G_GEN_BU.$G_04.$_Z ! Position

marker.type (                       $M_MFR_INTERFACE_MFR_MSH_BR   ) = 2                       ! Type
marker.ref (                        $M_MFR_INTERFACE_MFR_MSH_BR   ) = $M_MFR_DRT_Ref          ! Reference Marker
marker.parent (                     $M_MFR_INTERFACE_MFR_MSH_BR   ) = $B_MFR                  ! Body
marker.pos (              1 ,       $M_MFR_INTERFACE_MFR_MSH_BR   ) = $G_KP.$G_MFR.$G_MSH_BR.$_X ! Position

joint.from (                        $J_MFR                        ) = $M_Isys_INTERFACE_HSG_MFR   ! From Marker
joint.to (                          $J_MFR                        ) = $M_MFR_HSG                  ! To Marker
joint.type (                        $J_MFR                        ) = 35                          ! Type
joint.st.vel (            1 ,       $J_MFR                        ) = 0.00000000000000000E+00     ! Velocity
joint.par (               1 ,       $J_MFR                        ) = $G_frame_motion.$I_X        ! [-] IFctn for x
joint.par (               2 ,       $J_MFR                        ) = $G_frame_motion.$I_Y        ! [-] IFctn for y
joint.par (               3 ,       $J_MFR                        ) = $G_frame_motion.$I_Z        ! [-] IFctn for z
joint.par (               4 ,       $J_MFR                        ) = $G_frame_motion.$I_X_rot    ! [-] IFctn for al
joint.par (               5 ,       $J_MFR                        ) = $G_frame_motion.$I_Y_rot    ! [-] IFctn for be
joint.par (               6 ,       $J_MFR                        ) = $G_frame_motion.$I_Z_rot    ! [-] IFctn for ga
joint.par (               7 ,       $J_MFR                        ) = $G_frame_motion.$I_XD       ! [-] IFctn for v_x
joint.par (               8 ,       $J_MFR                        ) = $G_frame_motion.$I_YD       ! [-] IFctn for v_y
joint.par (               9 ,       $J_MFR                        ) = $G_frame_motion.$I_ZD       ! [-] IFctn for v_z
joint.par (              10 ,       $J_MFR                        ) = $G_frame_motion.$I_X_rotD   ! [-] IFctn for w_x
joint.par (              11 ,       $J_MFR                        ) = $G_frame_motion.$I_Y_rotD   ! [-] IFctn for w_y
joint.par (              12 ,       $J_MFR                        ) = $G_frame_motion.$I_Z_rotD   ! [-] IFctn for w_z
joint.par (              13 ,       $J_MFR                        ) = $G_frame_motion.$I_XDD      ! [-] IFctn for a_x
joint.par (              14 ,       $J_MFR                        ) = $G_frame_motion.$I_YDD      ! [-] IFctn for a_y
joint.par (              15 ,       $J_MFR                        ) = $G_frame_motion.$I_ZDD      ! [-] IFctn for a_z
joint.par (              16 ,       $J_MFR                        ) = $G_frame_motion.$I_X_rotDD  ! [-] IFctn for wd_x
joint.par (              17 ,       $J_MFR                        ) = $G_frame_motion.$I_Y_rotDD  ! [-] IFctn for wd_y
joint.par (              18 ,       $J_MFR                        ) = $G_frame_motion.$I_Z_rotDD  ! [-] IFctn for wd_z
joint.par (              19 ,       $J_MFR                        ) = 1.00000000000000000E+00     ! [-] Rotation sequence
joint.attr.2d.pos.x (     1 ,       $J_MFR                        ) = 390
joint.attr.2d.pos.y (     1 ,       $J_MFR                        ) = 250
joint.attr.2d.ori (       1 ,       $J_MFR                        ) = 270
joint.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $J_MFR       ) = 390, 390
joint.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $J_MFR       ) = 380, 267
joint.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $J_MFR         ) = 390, 390
joint.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $J_MFR         ) = 210, 233

prim.type (                         $P_MFR_CAD                    ) = 39                      ! Type
prim.ref (                          $P_MFR_CAD                    ) = $M_MFR_BRF              ! Reference Marker
prim.pos (                1 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! Position
prim.pos (                3 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! Position
prim.ang (                2 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_CAD                    ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_CAD                    ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_MFR_CAD                    ) = $G_3D.$_TRANSPARENCY_RIGID ! Transparency
prim.mp.dens.solid (                $P_MFR_CAD                    ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_MFR_CAD                    ) = '31_MFR.slp'            ! [-] CAD file name
prim.par (                9 ,       $P_MFR_CAD                    ) = 1.00000000000000002E-03 ! [-] Global scaling factor
prim.par (               10 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_MFR_CAD                    ) = 0.00000000000000000E+00 ! [-] Repeat shape

prim.type (                         $P_MFR_MSH_BR                 ) = 2                       ! Type
prim.ref (                          $P_MFR_MSH_BR                 ) = $M_MFR_INTERFACE_MFR_MSH_BR ! Reference Marker
prim.ang (                3 ,       $P_MFR_MSH_BR                 ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_MFR_MSH_BR                 ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_MFR_MSH_BR                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_MSH_BR                 ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_MFR_MSH_BR                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_MSH_BR                 ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_MFR_MSH_BR                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_MSH_BR                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_MFR_MSH_BR                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_MSH_BR                 ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_MSH_BR                 ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_MSH_BR                 ) = 0                       ! Include Primitive in computation
prim.mp.dens.solid (                $P_MFR_MSH_BR                 ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_MFR_MSH_BR                 ) = $G_3D.$G_MFR.$G_MSH.$G_BR.$_L ! [m] Height
prim.par (                3 ,       $P_MFR_MSH_BR                 ) = { $G_3D.$G_MFR.$G_MSH.$G_BR.$_D_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_MFR_MSH_BR                 ) = $G_3D.$G_MFR.$G_MSH.$G_BR.$_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_MFR_MSH_BR                 ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_MFR_MSH_BR                 ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_MFR_MSH_BR                 ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_MFR_MSH_BR                 ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_MFR_MSH_BR                 ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_MFR_GBX_SPB1               ) = 2                       ! Type
prim.ref (                          $P_MFR_GBX_SPB1               ) = $M_MFR_INTERFACE_MFR_GBX_SPB1 ! Reference Marker
prim.ang (                1 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_MFR_GBX_SPB1               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_MFR_GBX_SPB1               ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_MFR_GBX_SPB1               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_GBX_SPB1               ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_MFR_GBX_SPB1               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_GBX_SPB1               ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_MFR_GBX_SPB1               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_GBX_SPB1               ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_GBX_SPB1               ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_GBX_SPB1               ) = 0                       ! Include Primitive in computation
prim.mp.dens.solid (                $P_MFR_GBX_SPB1               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_MFR_GBX_SPB1               ) = $G_3D.$G_MFR.$G_GBX.$G_SPB.$_L ! [m] Height
prim.par (                3 ,       $P_MFR_GBX_SPB1               ) = { $G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_MFR_GBX_SPB1               ) = $G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_MFR_GBX_SPB1               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_MFR_GBX_SPB1               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_MFR_GBX_SPB1               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_MFR_GBX_SPB1               ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_MFR_GBX_SPB2               ) = 2                       ! Type
prim.ref (                          $P_MFR_GBX_SPB2               ) = $M_MFR_INTERFACE_MFR_GBX_SPB2 ! Reference Marker
prim.ang (                1 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_MFR_GBX_SPB2               ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_MFR_GBX_SPB2               ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_MFR_GBX_SPB2               ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_GBX_SPB2               ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_MFR_GBX_SPB2               ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_GBX_SPB2               ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_MFR_GBX_SPB2               ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_GBX_SPB2               ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_GBX_SPB2               ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_GBX_SPB2               ) = 0                       ! Include Primitive in computation
prim.mp.dens.solid (                $P_MFR_GBX_SPB2               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_MFR_GBX_SPB2               ) = $G_3D.$G_MFR.$G_GBX.$G_SPB.$_L ! [m] Height
prim.par (                3 ,       $P_MFR_GBX_SPB2               ) = { $G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_O + 0.001 m } ! [m] Outer diameter
prim.par (                4 ,       $P_MFR_GBX_SPB2               ) = $G_3D.$G_MFR.$G_GBX.$G_SPB.$_D_I ! [m] Inner diameter
prim.par (                5 ,       $P_MFR_GBX_SPB2               ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_MFR_GBX_SPB2               ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_MFR_GBX_SPB2               ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_MFR_GBX_SPB2               ) = 0.00000000000000000E+00 ! [-] Close geometry with

prim.type (                         $P_MFR_STR_BU1                ) = 1                       ! Type
prim.ref (                          $P_MFR_STR_BU1                ) = $M_MFR_INTERFACE_MFR_GEN_BU1 ! Reference Marker
prim.pos (                3 ,       $P_MFR_STR_BU1                ) = { $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_MFR_STR_BU1                ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_MFR_STR_BU1                ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_STR_BU1                ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_STR_BU1                ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_STR_BU1                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_STR_BU1                ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_STR_BU1                ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_STR_BU1                ) = 0                       ! Include Primitive in computation
prim.par (                2 ,       $P_MFR_STR_BU1                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_X ! [m] Length in X
prim.par (                3 ,       $P_MFR_STR_BU1                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Y ! [m] Length in Y
prim.par (                4 ,       $P_MFR_STR_BU1                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z ! [m] Length in Z

prim.type (                         $P_MFR_STR_BU2                ) = 1                       ! Type
prim.ref (                          $P_MFR_STR_BU2                ) = $M_MFR_INTERFACE_MFR_GEN_BU2 ! Reference Marker
prim.pos (                3 ,       $P_MFR_STR_BU2                ) = { $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_MFR_STR_BU2                ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_MFR_STR_BU2                ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_STR_BU2                ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_STR_BU2                ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_STR_BU2                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_STR_BU2                ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_STR_BU2                ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_STR_BU2                ) = 0                       ! Include Primitive in computation
prim.par (                2 ,       $P_MFR_STR_BU2                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_X ! [m] Length in X
prim.par (                3 ,       $P_MFR_STR_BU2                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Y ! [m] Length in Y
prim.par (                4 ,       $P_MFR_STR_BU2                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z ! [m] Length in Z

prim.type (                         $P_MFR_STR_BU3                ) = 1                       ! Type
prim.ref (                          $P_MFR_STR_BU3                ) = $M_MFR_INTERFACE_MFR_GEN_BU3 ! Reference Marker
prim.pos (                3 ,       $P_MFR_STR_BU3                ) = { $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_MFR_STR_BU3                ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_MFR_STR_BU3                ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_MFR_STR_BU3                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_STR_BU3                ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_MFR_STR_BU3                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_STR_BU3                ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_MFR_STR_BU3                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_STR_BU3                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_MFR_STR_BU3                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_STR_BU3                ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_STR_BU3                ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_STR_BU3                ) = 0                       ! Include Primitive in computation
prim.par (                2 ,       $P_MFR_STR_BU3                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_X ! [m] Length in X
prim.par (                3 ,       $P_MFR_STR_BU3                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Y ! [m] Length in Y
prim.par (                4 ,       $P_MFR_STR_BU3                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z ! [m] Length in Z

prim.type (                         $P_MFR_STR_BU4                ) = 1                       ! Type
prim.ref (                          $P_MFR_STR_BU4                ) = $M_MFR_INTERFACE_MFR_GEN_BU4 ! Reference Marker
prim.pos (                3 ,       $P_MFR_STR_BU4                ) = { $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z / 2 } ! Position
prim.ang (                1 ,       $P_MFR_STR_BU4                ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_MFR_STR_BU4                ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_MFR_STR_BU4                ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_STR_BU4                ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_MFR_STR_BU4                ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_STR_BU4                ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_MFR_STR_BU4                ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_STR_BU4                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_MFR_STR_BU4                ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_MFR_STR_BU4                ) = 2                       ! Draw style
prim.transparency (                 $P_MFR_STR_BU4                ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_STR_BU4                ) = 0                       ! Include Primitive in computation
prim.par (                2 ,       $P_MFR_STR_BU4                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_X ! [m] Length in X
prim.par (                3 ,       $P_MFR_STR_BU4                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Y ! [m] Length in Y
prim.par (                4 ,       $P_MFR_STR_BU4                ) = $G_3D.$G_MFR.$G_GEN.$G_BU.$_Z ! [m] Length in Z

prim.type (                         $P_MFR_Flex                   ) = 28                      ! Type
prim.ref (                          $P_MFR_Flex                   ) = $M_MFR_BRF              ! Reference Marker
prim.color.r (            1 ,       $P_MFR_Flex                   ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_MFR_Flex                   ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_MFR_Flex                   ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_MFR_Flex                   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_MFR_Flex                   ) = $G_3D.$_TRANSPARENCY_ALL ! Transparency
prim.mp.incl (                      $P_MFR_Flex                   ) = 0                       ! Include Primitive in computation
prim.par (                3 ,       $P_MFR_Flex                   ) = 1.00000000000000000E+00 ! [-] Deformation
prim.par (                4 ,       $P_MFR_Flex                   ) = 1.00000000000000000E+00 ! [-] Deformation scaling factor
prim.par (               11 ,       $P_MFR_Flex                   ) = 0.00000000000000000E+00 ! [-] Interpolation type
prim.par (               12 ,       $P_MFR_Flex                   ) = 0.00000000000000000E+00 ! [-] Num. master nodes for interpol
prim.par (               21 ,       $P_MFR_Flex                   ) = 0.00000000000000000E+00 ! [-] Graphics mode


!**********************************************************************
! Input Functions
!**********************************************************************
ifctn.x (                 1 ,       $I_MFR_modal_damping          ) = { dimless($G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_1) } ! X values
ifctn.x (                 2 ,       $I_MFR_modal_damping          ) = { dimless($G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_2) } ! X values
ifctn.x (                 3 ,       $I_MFR_modal_damping          ) = { dimless($G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_3) } ! X values
ifctn.x (                 4 ,       $I_MFR_modal_damping          ) = { dimless($G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_4) } ! X values
ifctn.x (                 5 ,       $I_MFR_modal_damping          ) = { dimless($G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_5) } ! X values
ifctn.x (                 6 ,       $I_MFR_modal_damping          ) = { dimless($G_BP.$G_MFR.$G_FLX.$G_DMP.$_F_6) } ! X values
ifctn.y (                 1 ,       $I_MFR_modal_damping          ) = $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_1 ! Y values
ifctn.y (                 2 ,       $I_MFR_modal_damping          ) = $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_2 ! Y values
ifctn.y (                 3 ,       $I_MFR_modal_damping          ) = $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_3 ! Y values
ifctn.y (                 4 ,       $I_MFR_modal_damping          ) = $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_4 ! Y values
ifctn.y (                 5 ,       $I_MFR_modal_damping          ) = $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_5 ! Y values
ifctn.y (                 6 ,       $I_MFR_modal_damping          ) = $G_BP.$G_MFR.$G_FLX.$G_DMP.$_D_6 ! Y values
ifctn.intpol.type (                 $I_MFR_modal_damping          ) = 2                       ! Interpolation type
ifctn.range.handling (              $I_MFR_modal_damping          ) = 2                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
ifctn.plot.par (          1 ,       $I_MFR_modal_damping          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 , $I_MFR_modal_damping          ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   1 ,   1 , $I_MFR_modal_damping    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   2 , $I_MFR_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   3 , $I_MFR_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   4 , $I_MFR_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   5 , $I_MFR_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   6 , $I_MFR_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   7 , $I_MFR_modal_damping          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   8 ,   1 , $I_MFR_modal_damping    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,   9 ,   1 , $I_MFR_modal_damping    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
ifctn.plot.par (          1 ,  10 ,   1 , $I_MFR_modal_damping    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctngroup.begin (                  $G_frame_motion               )                           ! $G_frame_motion
   ifctn.file (                     $I_X                          ) = 'EC4_s01_X.if2'         ! File or URI
   ifctn.range.handling (           $I_X                          ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_X                          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_X                          ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_X                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_X                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_X                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_X                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_X                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_X                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_X                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_X                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_X                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Y                          ) = 'EC4_s01_Y.if2'         ! File or URI
   ifctn.range.handling (           $I_Y                          ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Y                          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Y                          ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Y                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Y                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Y                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Y                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Y                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Y                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Y                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Y                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Y                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Z                          ) = 'EC4_s01_Z.if2'         ! File or URI
   ifctn.range.handling (           $I_Z                          ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Z                          ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Z                          ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Z                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Z                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Z                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Z                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Z                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Z                          ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Z                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Z                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Z                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_X_rot                      ) = 'EC4_s01_X_rot.if2'     ! File or URI
   ifctn.range.handling (           $I_X_rot                      ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_X_rot                      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_X_rot                      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_X_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_X_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_X_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_X_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_X_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_X_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_X_rot                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_X_rot                ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_X_rot                ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Y_rot                      ) = 'EC4_s01_Y_rot.if2'     ! File or URI
   ifctn.range.handling (           $I_Y_rot                      ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Y_rot                      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Y_rot                      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Y_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Y_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Y_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Y_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Y_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Y_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Y_rot                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Y_rot                ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Y_rot                ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Z_rot                      ) = 'EC4_s01_Z_rot.if2'     ! File or URI
   ifctn.range.handling (           $I_Z_rot                      ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Z_rot                      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Z_rot                      ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Z_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Z_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Z_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Z_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Z_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Z_rot                      ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Z_rot                ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Z_rot                ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Z_rot                ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_XD                         ) = 'EC4_s01_XD.if2'        ! File or URI
   ifctn.range.handling (           $I_XD                         ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_XD                         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_XD                         ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_XD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_XD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_XD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_XD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_XD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_XD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_XD                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_XD                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_XD                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_YD                         ) = 'EC4_s01_YD.if2'        ! File or URI
   ifctn.range.handling (           $I_YD                         ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_YD                         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_YD                         ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_YD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_YD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_YD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_YD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_YD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_YD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_YD                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_YD                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_YD                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_ZD                         ) = 'EC4_s01_ZD.if2'        ! File or URI
   ifctn.range.handling (           $I_ZD                         ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_ZD                         ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_ZD                         ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_ZD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_ZD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_ZD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_ZD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_ZD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_ZD                         ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_ZD                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_ZD                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_ZD                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_X_rotD                     ) = 'EC4_s01_X_rotD.if2'    ! File or URI
   ifctn.range.handling (           $I_X_rotD                     ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_X_rotD                     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_X_rotD                     ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_X_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_X_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_X_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_X_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_X_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_X_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_X_rotD               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_X_rotD               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_X_rotD               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Y_rotD                     ) = 'EC4_s01_Y_rotD.if2'    ! File or URI
   ifctn.range.handling (           $I_Y_rotD                     ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Y_rotD                     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Y_rotD                     ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Y_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Y_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Y_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Y_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Y_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Y_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Y_rotD               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Y_rotD               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Y_rotD               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Z_rotD                     ) = 'EC4_s01_Z_rotD.if2'    ! File or URI
   ifctn.range.handling (           $I_Z_rotD                     ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Z_rotD                     ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Z_rotD                     ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Z_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Z_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Z_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Z_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Z_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Z_rotD                     ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Z_rotD               ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Z_rotD               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Z_rotD               ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_XDD                        ) = 'EC4_s01_XDD.if2'       ! File or URI
   ifctn.range.handling (           $I_XDD                        ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_XDD                        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_XDD                        ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_XDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_XDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_XDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_XDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_XDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_XDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_XDD                  ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_XDD                  ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_XDD                  ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_YDD                        ) = 'EC4_s01_YDD.if2'       ! File or URI
   ifctn.range.handling (           $I_YDD                        ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_YDD                        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_YDD                        ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_YDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_YDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_YDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_YDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_YDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_YDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_YDD                  ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_YDD                  ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_YDD                  ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_ZDD                        ) = 'EC4_s01_ZDD.if2'       ! File or URI
   ifctn.range.handling (           $I_ZDD                        ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_ZDD                        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_ZDD                        ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_ZDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_ZDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_ZDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_ZDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_ZDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_ZDD                        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_ZDD                  ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_ZDD                  ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_ZDD                  ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_X_rotDD                    ) = 'EC4_s01_X_rotDD.if2'   ! File or URI
   ifctn.range.handling (           $I_X_rotDD                    ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_X_rotDD                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_X_rotDD                    ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_X_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_X_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_X_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_X_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_X_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_X_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_X_rotDD              ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_X_rotDD              ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_X_rotDD              ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Y_rotDD                    ) = 'EC4_s01_Y_rotDD.if2'   ! File or URI
   ifctn.range.handling (           $I_Y_rotDD                    ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Y_rotDD                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Y_rotDD                    ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Y_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Y_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Y_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Y_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Y_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Y_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Y_rotDD              ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Y_rotDD              ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Y_rotDD              ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

   ifctn.file (                     $I_Z_rotDD                    ) = 'EC4_s01_Z_rotDD.if2'   ! File or URI
   ifctn.range.handling (           $I_Z_rotDD                    ) = 0                       ! Handling when evaluating outside range: 0=Warning, continue; 1=Error, stop solver; 2=No message, continue
   ifctn.plot.par (       1 ,       $I_Z_rotDD                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   1 , $I_Z_rotDD                    ) = 1.02400000000000000E+03 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   2 , $I_Z_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   3 , $I_Z_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   4 , $I_Z_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   5 , $I_Z_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   6 , $I_Z_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   7 , $I_Z_rotDD                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   8 ,   1 , $I_Z_rotDD              ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,   9 ,   1 , $I_Z_rotDD              ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
   ifctn.plot.par (       1 ,  10 ,   1 , $I_Z_rotDD              ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter

ifctngroup.end (                    $G_frame_motion               )                           ! $G_frame_motion

!**********************************************************************
! Senders
!**********************************************************************
sender.ref (                        $COM_S_________SUBVARS        ) = null                    ! Source object
sender.alias (                      $COM_S_________SUBVARS        ) = ''                      ! Alias

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_01__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_01__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_01__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_01.$_Z ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_02__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_02__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_SPB_G_GBX_G_02__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_SPB.$G_GBX.$G_02.$_Z ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BR_G_MSH__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BR.$G_MSH.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_01__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_01__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_01__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_01.$_Z ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_02__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_02__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_02__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_02.$_Z ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_03__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_03__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_03__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_03.$_Z ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_04__X) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_04__Y) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_PA_G_BU_G_GEN_G_04__Z) = $G_INTERFACE.$G_031_MFR.$G_PA.$G_BU.$G_GEN.$G_04.$_Z ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_HUB__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_HUB.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_GBX__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_GBX.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_MSH__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_MSH.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_GEN__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_GEN.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__X) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__R) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_R ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HP_G_CPL__ang) = $G_INTERFACE.$G_031_MFR.$G_HP.$G_CPL.$_ang ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_HL__TLT_ANG) = $G_INTERFACE.$G_031_MFR.$G_HL.$_TLT_ANG ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_HSG_G_SPB__D_O) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_O ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_HSG_G_SPB__D_I) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_D_I ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_HSG_G_SPB__L) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_HSG.$G_SPB.$_L ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_MSH_G_BR__D_O) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_O ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_MSH_G_BR__D_I) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_D_I ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_MSH_G_BR__L) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_MSH.$G_BR.$_L ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_STR_G_BU__X) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_X ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_STR_G_BU__Y) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Y ! Source object

sender.ref (                        $COM_G_INTERFACE_G_031_MFR_G_3D_G_STR_G_BU__Z) = $G_INTERFACE.$G_031_MFR.$G_3D.$G_STR.$G_BU.$_Z ! Source object

sender.ref (                        $COM_S_________MARKER         ) = null                    ! Source object
sender.alias (                      $COM_S_________MARKER         ) = ''                      ! Alias

sender.ref (                        $COM_M_INTERFACE_MFR_GBX      ) = $M_MFR_INTERFACE_MFR_GBX ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GBX_SPB1 ) = $M_MFR_INTERFACE_MFR_GBX_SPB1 ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GBX_SPB2 ) = $M_MFR_INTERFACE_MFR_GBX_SPB2 ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GEN      ) = $M_MFR_INTERFACE_MFR_GEN ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GEN_BU1  ) = $M_MFR_INTERFACE_MFR_GEN_BU1 ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GEN_BU2  ) = $M_MFR_INTERFACE_MFR_GEN_BU2 ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GEN_BU3  ) = $M_MFR_INTERFACE_MFR_GEN_BU3 ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_GEN_BU4  ) = $M_MFR_INTERFACE_MFR_GEN_BU4 ! Source object

sender.ref (                        $COM_M_INTERFACE_MFR_MSH_BR   ) = $M_MFR_INTERFACE_MFR_MSH_BR ! Source object

!**********************************************************************
! Receivers
!**********************************************************************
receiver.ref (                      $COM_R_________MARKER         ) = null                    ! Destination object

receiver.ref (                      $COM_M_INTERFACE_HSG_MFR      ) = $M_Isys_INTERFACE_HSG_MFR ! Destination object

                                                                                                                                                                    
